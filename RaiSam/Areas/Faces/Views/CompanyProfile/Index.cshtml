@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using RaiSam.Models;

@{var X = Html.X();}

<script src="~/Scripts/accounting.js"></script>
<script src="~/Scripts/jquery-ajax-native.js"></script>
<style>
    .lblsdsd {
        margin-top: 20px;
        margin-right: 5px;
    }
</style>
@(

 X.Window().Modal(true)
 .Width(870)
 .Height(600)
    .Title("تکمیل ثبت نام")
                             .Listeners(l => { l.AfterRender.Handler = "validation();";  })
    .Border(false)
        .ID("CompanyProfile")
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(LayoutType.Fit)

    .Items(
                    X.FormPanel()
                    .Border(false)
                    .ID("pnl")
                        .Layout(Ext.Net.LayoutType.VBox)
                            .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                    .AutoScroll(true)
                    .Border(false)

                    .Items(
        /* X.Label().StyleHtmlCls*/
                   X.Panel()
                            .Border(false).Width(850).Listeners(l => l.AfterRender.Handler = "LoadCaptha();")
                                .Height(550)
                            .ID("pnlCompanyProfile")
                        .ButtonAlign(Alignment.Left)
                        .AutoScroll(true)
                        .Frame(false)
                        .Margin(5)
                            .Buttons(
                                    X.Button()
                                    .Text("ثبت")
                                    .Icon(Ext.Net.Icon.Add)
                                    .ItemID("btnSave")
                                    .Listeners(l => l.Click.Handler = "SaveCompanyProfile(0);")
                                    ,
                                    X.Button()
                                    .Text("ثبت قطعی")
                                    .Icon(Ext.Net.Icon.Add)
                                    .ItemID("btnSaveGhati")
                                    .Listeners(l => l.Click.Handler = "SaveCompanyProfile(1);")
                                    //, X.Button()
                                    //.Text("گفتگو")
                                    //.Icon(Ext.Net.Icon.UserComment)
                                    //.Listeners(l => l.Click.Handler = "ShowConversationCompanyProfile();")
                                     , X.Button()
                                    .Text("انصراف")
                                    .ItemID("btnEnseraf")
                                    .Icon(Ext.Net.Icon.BulletCross)
                                    .Listeners(l => l.Click.Handler = "ExitLogon()")
                                        ,
                                              X.SplitButton().ItemID("btnHelp")
                                        .Text("راهنما")
                                        .Icon(Ext.Net.Icon.Help)
                                        .Menu(X.Menu()
                                        .Items(
                                        X.MenuItem()
                                                    .Text("راهنما متنی")
                                                    .Icon(Ext.Net.Icon.TextPaddingTop)
                                                    .Listeners(l => l.Click.Handler = "showHelpCompanyProfile()")
                                                    .ItemID("btnshowHelpCompanyProfile"),
                                            X.MenuItem()
                                                    .Text("راهنما تصویری")
                                                    .Icon(Ext.Net.Icon.PlayBlue)
                                                    .ItemID("btnshowHelpCompanyProfileVideo")
                                                    .Listeners(l => l.Click.Handler = "showHelp_VideoCompanyProfile()")

                                    )
                                )
                                    )
                    .Items(

                    X.FieldSet().Border(false)
                .Center()
                .Defaults(new { Margin = 2 })

                    .Items(
                 X.AntiForgeryField().ItemID("AntiForgeryField"),
                           X.Hidden().ItemID("fldId")
        //    , X.FieldSet().Title("توجه")
        //.LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
        //.Defaults(new { Margin = 10 })
        //.Items(
        //     X.Label().Text("مانندبا توجه به مشکلات بوجود آمده در پست الکترونیکی دامنه‌های خارجی (مخصوصاً ایمیل های yahoo و gmail) از تاریخ 04/04/1391 کلیه آدرس های پست الکترونیکی درخواست شده در سامانه ساجات بایستی با دامنه ir وارد شوند تا امکان دریافت گذرواژه ارسالی از طریق سامانه برای کاربران در کمترین زمان ممکن امکان پذیر شود. لذا خواهشمند است ابتدا آدرس پست الکترونیکی با دامنه ir ایجاد نموده و سپس در سامانه ساجات ثبت نام فرمائید. برای نمونه پست الکترونیکی سامانه چاپار به آدرس https://www.chmail.ir پیشنهاد می‌شود.")

                                //)
                                , X.FieldSet().Title("انتخاب شخص").ColSpan(4).ItemID("TypePerson")
                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                        .Defaults(new { Margin = 2 })
                                        .Items(
                                              X.ComboBox()
                                            .ItemID("cboPersonType")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                                     .SelectedItems(new { Value = "2" })
                                                .Items(
                                                    new ListItem("حقیقی", "1"),
                                                    new ListItem("حقوقی", "2")
                                                    )
                                            .Listeners(l => l.Select.Handler = "ChangePersonType(1);")
                                        )

                                        , X.FieldSet().Title("مشخصات نماینده  ").ItemID("Sherkat_Namayande")
                                        .Center()
                                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                        .Defaults(new { Margin = 2 })
                                        .Items(
        //  X.Label().Width(500),
        X.Label().Text("کدملی:").MarginSpec("0 0 0 80px")
                                          , X.TextField()
                                                        .ItemID("txtMelicode_Namayande")
                                                        .AutoFocus(true)
                                                .AllowBlank(false)
                                                    .MaskRe("/[0-9]/")
        //.RTL(false)
                                                .FieldStyle("direction:ltr;")
                                                .BlankText("لطفا کد ملی را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Plugins(X.InputMask()
                                                .Mask("AAAAAAAAAA")
                                                .UnmaskOnBlur(true)
                                                .ClearWhenInvalid(true)
                                                .MaskSymbols(ls =>
                                                {
                                                    ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                })
                                            )
                                        .Width(250)
                                        .Icon(Icon.Reload)
                                        //.Listeners(li =>
                                        //{
                                        //    li.IconClick.Handler = "LoadPersons();";
                                        //    li.Change.Handler = "ClearLoadPersons();";
                                        //})
                                            .Listeners(li =>
                                            {
                                                li.IconClick.Handler = "LoadPersonsNamayande()";
                                                li.Change.Handler = "ChangeEstelam(3)";
                                            })

                                                    , X.Label().Text("تاریخ تولد:").MarginSpec("0 0 0 40px")
                                                    , X.PDateField()
                                                        .ItemID("txtTavalod_Namayande")
                                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                                        .AllowBlank(false)
                                                    .MaskRe("/[0-9,/]/")
                                                            .Editable(true)
                                                    .Width(250)
                                                    .BlankText("لطفا تاریخ تولد مدیرعامل را وارد کنید.")
                                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                                .Icon(Ext.Net.Icon.Reload)
                                                    .Listeners(li =>
                                            {
                                                li.IconClick.Handler = "LoadPersonsNamayande()";
                                                li.Change.Handler = "ChangeEstelam(3)";
                                            })
                                            ,
                                                X.Label().Text("نام:").ItemID("lblNameP").MarginSpec("0 0 0 80px")
                                                    , X.TextField()
                                                .ItemID("txtNameP")
                                                .Listeners(l => l.Change.Handler = "ChangeKeyboard(App.CompanyProfile.queryById('txtNameP'))")
                                                .MaxLength(50)
                                                .EnforceMaxLength(true)
                                                    .AllowBlank(false)
                                                    .BlankText("لطفا نام را وارد کنید.")
                                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                                    .Width(250)
                                                    , X.Label().Text("نام خانوادگی:").ItemID("lblFamilyP").MarginSpec("0 0 0 40px")
                                                , X.TextField()
                                                            .ItemID("txtFamilyP")
                                                        .Listeners(l => l.Change.Handler = "ChangeKeyboard(App.CompanyProfile.queryById('txtFamilyP'))")
                                                        .MaxLength(100)
                                                .EnforceMaxLength(true)
                                                    .AllowBlank(false)
                                                    .BlankText("لطفا نام خانوادگی را وارد کنید.")
                                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                                        .Width(250)
                                                                  ,
                                                    X.Label("تلفن همراه:").ItemID("lblMobileNamayande").MarginSpec("0 0 0 80px")
                                            , X.TextField()
                                                .ItemID("txtMobileNamayande")
                                                    // .AutoFocus(true)
        //  .RTL(false)
                                                        .FieldStyle("direction:ltr;")
        // .MaskRe("/[0-9]/")
                                                        .Plugins(X.InputMask()
                                        .Mask("09AAAAAAAAA")
                                        .ClearWhenInvalid(true)
                                      //  .UnmaskOnBlur(true)
                                        .MaskSymbols(ls =>
                                        {
                                            ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                        })
                                    )
                                                .AllowBlank(false)
                                                    .BlankText("لطفا تلفن همراه را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(250)
                                                ,
                                                    X.Label().Text("ایمیل:").ItemID("lblEmailNamayande").MarginSpec("0 0 0 40px"),
                                              X.TextField()
                                            .ItemID("txtEmailNamayande")
                                            .AllowBlank(false)
        // .RTL(false)
                                                .FieldStyle("direction:ltr;")
                                                .EmptyText("Example@yahoo.com")
        //.MaskRe("/[A-Z a-z @ . _ - 0-9]/")
                                            .BlankText("لطفا پست الکترونیک نماینده را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(250)
                                                )
                                        , X.FieldSet().Title("مشخصات مدیرعامل شرکت ").ItemID("Sherkat_Modir")
                                    .Center()
                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 5 })
                                    .Defaults(new { Margin = 2 })
                                    .Items(
                                          X.Label().Text("کدملی:").MarginSpec("0 0 0 80px")
                                          , X.TextField()
                                                .ItemID("txtMelicode_Modir")
                                                    .AllowBlank(false)
                                                    .MaskRe("/[0-9]/")
        //.RTL(false)
                                                .FieldStyle("direction:ltr;")
                                                .BlankText("لطفا کد ملی را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Plugins(X.InputMask()
                                                .Mask("AAAAAAAAAA")
                                                .UnmaskOnBlur(true)
                                                .ClearWhenInvalid(true)
                                                .MaskSymbols(ls =>
                                                {
                                                    ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                })
                                            )
                                        .Width(250)
                                        .Icon(Icon.Reload)
                                        //.Listeners(li =>
                                        //{
                                        //    li.IconClick.Handler = "LoadPersons();";
                                        //    li.Change.Handler = "ClearLoadPersons();";
                                        //})
                                            .Listeners(li =>
                                            {
                                                li.IconClick.Handler = "LoadPersonsModir()";
                                                li.Change.Handler = "ChangeEstelam(2)";
                                            })

                                                    , X.Label().Text("تاریخ تولد:").MarginSpec("0 0 0 40px")
                                                    , X.PDateField()
                                                    .ItemID("txtTavalod_Modir")
                                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                                        .AllowBlank(false)
                                                    .MaskRe("/[0-9,/]/")
                                                            .Editable(true)
                                                    .Width(250)
                                                    .BlankText("لطفا تاریخ تولد مدیرعامل را وارد کنید.")
                                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                                .Icon(Ext.Net.Icon.Reload)
                                                    .Listeners(li =>
                                            {
                                                li.IconClick.Handler = "LoadPersonsModir()";
                                                li.Change.Handler = "ChangeEstelam(2)";
                                            })
                                            ,
                                    X.Label().Width(500),
                                            X.Label().Text("نام:").MarginSpec("0 0 0 80px"),
                                            X.TextField()
                                                            .ItemID("txtNameModir")
                                                                .Listeners(l => l.Change.Handler = "ChangeKeyboard(App.CompanyProfile.queryById('txtNameModir'))")
                                                    .MaxLength(50)
                                            .EnforceMaxLength(true)
                                                .AllowBlank(false)
                                                .BlankText("لطفا نام را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(250)
                                                , X.Label().Text("نام خانوادگی:").MarginSpec("0 0 0 40px")
                                            , X.TextField()
                                                        .ItemID("txtFamilyModir")
                                                                .Listeners(l => l.Change.Handler = "ChangeKeyboard(App.CompanyProfile.queryById('txtFamilyModir'))")
                                                    .MaxLength(100)
                                            .EnforceMaxLength(true)
                                                .AllowBlank(false)
                                                .BlankText("لطفا نام خانوادگی را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(250)
                                        )

                                , X.FieldSet().Title("مشخصات شرکت ").ItemID("Sherkat_Info")
                                .Center()
                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                .Defaults(new { Margin = 2 })
                                .Items(
        //     X.FieldSet()
        //     .ColSpan(6)
        //    .Center()
        //    .Border(false)
        //    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
        //    .Defaults(new { Margin = 2 })
        //.Items(
                                        X.Label("شناسه ملی شرکت: "), X.TextField()
                                            .ItemID("txtShenase")
                                            .AllowBlank(false)//.RTL(false)
                                                .FieldStyle("direction:ltr;")
                                                .MaskRe("/[0-9]/")
                                            .BlankText("لطفا شناسه ملی شرکت را وارد کنید.")
                                                .Plugins(X.InputMask()
                                                .Mask("AAAAAAAAAAA")
                                                .UnmaskOnBlur(true)
                                                .MaskSymbols(ls =>
                                                    {
                                                        ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                    }))
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                                    .Listeners(l => l.Change.Handler = "if(App.CompanyProfile.queryById('txtShenase').getValue().replace('_', '').length>=11) CheckHaveCompany();")
                                                .Width(235)//.ColSpan(4)
                                                .Icon(Icon.Reload)
                                    .Listeners(li =>
                                    {
                                        li.IconClick.Handler = "Estelam(1);";
                                        li.Change.Handler = "ClearCompany(1);";
                                    })
        //)
        //       ,  X.FieldSet()
        //     .ColSpan(3)
        //    .Center()
        //    .Border(false)
        //    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
        //    .Defaults(new { Margin = 2 })
        //.Items(
        //
                                         , X.Label("نام کامل ثبتی شرکت:"), X.TextField()
                                                .ItemID("txtName")
                                                    .MaxLength(250)
                                            .EnforceMaxLength(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا نام کامل ثبتی شرکت را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(235)
                                                    .Icon(Icon.Reload)
                                    .Listeners(li =>
                                    {
                                        li.IconClick.Handler = "Estelam(2);";
                                        li.Change.Handler = "ClearCompany(2);";
                                    })
        //)
                                        ,
        //     ,  X.FieldSet()
        //     .ColSpan(3)
        //    .Center()
        //    .Border(false)
        //    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
        //    .Defaults(new { Margin = 2 })
        //.Items(
                                        X.Label("نام اختصاری:"), X.TextField()
                                            .ItemID("txtNameS")
                                            .MaxLength(100)
                                            .EnforceMaxLength(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا نام اختصاری را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(235)
        //)
        //  ,  X.FieldSet()
        //     .ColSpan(6)
        //    .Center()
        //    .Border(false)
        //    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 3 })
        //    .Defaults(new { Margin = 2 })
        //.Items(

                                      ,
        //      X.FieldSet()
        //     .ColSpan(3)
        //    .Center()
        //    .Border(false)
        //    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
        //    .Defaults(new { Margin = 2 })
        //.Items(
                                        X.Label().Text("تاریخ تاسیس:"), X.PDateField()
                                        .ItemID("txtTarikh")
                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                        .AllowBlank(false)
                                        .MaskRe("/[0-9,/]/")
                                            .Editable(true)
                                        .Width(235)
                                        .BlankText("لطفا تاریخ تاسیس را وارد کنید.")
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
        //)
                                     ,
        //     X.FieldSet()
        //     .ColSpan(3)
        //    .Center()
        //    .Border(false)
        //    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
        //    .Defaults(new { Margin = 2 })
        //.Items(
                                        X.Label("شماره ثبت:"), X.TextField()
                                        .ItemID("txtShomareSabt")
                                        .AllowBlank(false)
        //.RTL(false)
                                            .FieldStyle("direction:ltr;")
                                        .MaxLength(10)
                                        .EnforceMaxLength(true)
                                        .MaskRe("/[0-9]/")
                                        .BlankText("لطفا شماره ثبت را وارد کنید.")
                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                        .Width(235)
        //)
                                    ,
        //    X.FieldSet()
        //     .ColSpan(3)
        //    .Center()
        //    .Border(false)
        //    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
        //    .Defaults(new { Margin = 2 })
        //.Items(
                                     X.Label().Text("تاریخ ثبت:"), X.PDateField()
                                    .ItemID("txtTarikhSabt")
                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                    .AllowBlank(false)
                                    .MaskRe("/[0-9,/]/")
                                        .Editable(true)
                                    .BlankText("لطفا تاریخ ثبت را وارد کنید.")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .Width(235)
        //)
                                    ,
        //    X.FieldSet()
        //     .ColSpan(3)
        //    .Center()
        //    .Border(false)
        //    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
        //    .Defaults(new { Margin = 2 })
        //.Items(
                                     X.Label().Text("نوع ثبتی شرکت: "), X.ComboBox()
                                        .ItemID("cboComType")
                                        .EmptyText("نوع ثبتی شرکت")
        //.PaddingSpec("5px 0 20px 0")
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .TypeAhead(true)
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .BlankText("لطفا نوع ثبتی شرکت را انتخاب نمایید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .Width(235)
                                        .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldComName")
                                        .ValueField("fldComId")
                                        .Store(X.Store()
                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboComType').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                            .Model(X.Model()
                                                    .IDProperty("fldComId")
                                                .Fields(
                                                            new ModelField("fldComId", ModelFieldType.String) { Mapping = "fldComId" },
                                                            new ModelField("fldComName", ModelFieldType.String) { Mapping = "fldComName" })
                                                    )
                                                .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                .Url(Url.Action("GetCompanyType"))
                                                .Reader(X.JsonReader().Root("data")))
        .Listeners(li => li.Load.Handler = "LoadCompanyProfile();")
                                                            )
        //)
                                        , X.Label("کد اقتصادی:"), X.TextField()
                                    .ItemID("txtCodeEghtesadi")
                                    .AllowBlank(false)
        //.RTL(false)
                                        .FieldStyle("direction:ltr;")
                                        .MaskRe("/[0-9]/")
                                            .Plugins(X.InputMask()
                                                .Mask("AAAAAAAAAAAA")
                                                .UnmaskOnBlur(true)
                                                .MaskSymbols(ls =>
                                                    {
                                                        ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                    }))
                                    .BlankText("لطفا کد اقتصادی را وارد کنید.")
                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                    .Width(235)
        //.ColSpan(3)
                                           , X.Label("محل ثبت (کشور/استان/شهر) :")
        //)


                                         ,
                                         X.FieldSet()
                                         .ColSpan(3)
                                        .Center()
                                        .Border(false)
                                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 3 })
                                        .Defaults(new { Margin = 2 })
                                    .Items(
        //                                  X.ComboBox()
        //                                    .ItemID("cboCountry")
        //                                    .EmptyText("کشور")
        ////.PaddingSpec("5px 0 20px 0")
        //                                    .LabelAlign(Ext.Net.LabelAlign.Top)
        //                                    .TypeAhead(true)
        //                                    .Editable(false)
        //                                    .AllowBlank(false)
        //                                    .BlankText("لطفا کشور مورد نظر را انتخاب نمایید.")
        //                                    .QueryMode(DataLoadMode.Local)
        //                                    .ForceSelection(true)
        //                                     .Width(190)
        //                                    .TriggerAction(TriggerAction.All)
        //                                    .DisplayField("fldName")
        //                                    .ValueField("fldId")
        //                                         .Listeners(li => li.Select.Handler = "App.CompanyProfile.queryById('cboState').clearValue(); App.CompanyProfile.queryById('cboState').getStore().load()")
        //                                    .Store(X.Store()
        //                                        .Model(X.Model()
        //                                            .IDProperty("fldId")
        //                                            .Fields(
        //                                                new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
        //                                                new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" })
        //                                                )
        //                                        .Proxy(X.AjaxProxy()
        //                                            .Url(Url.Action("GetCountry"))
        //                                            .Reader(X.JsonReader().Root("data")))
        ///* .Listeners(li => li.DataChanged.Handler = "LoadJobStatus();")*/
        //                                                        )
                                                 X.ComboBox()
                                    .ItemID("cboCountry")
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                    .Editable(true)
                                    .TypeAhead(true)
                                    .QueryMode(DataLoadMode.Local)
                                    .ForceSelection(true)
                                    .TriggerAction(TriggerAction.All)
                                        .DisplayField("fldCountryName")
                                            .ValueField("fldCountryId")
                                    .EmptyText("کشور")
                                    .Width(195)
                                    .Listeners(ls =>
                                  ls.Select.Handler = "App.CompanyProfile.queryById('cboState').clearValue(); App.CompanyProfile.queryById('cboState').getStore().load()"
                                        )
                                    .ValueNotFoundText("Loading...")
                                    .Store(X.Store()
                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboCountry').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                        .Model(X.Model()
                                                .IDProperty("fldCountryId")
                                            .Fields(
                                                                    new ModelField("fldCountryId", ModelFieldType.String) { Mapping = "fldCountryId" },
                                                                    new ModelField("fldCountryName", ModelFieldType.String) { Mapping = "fldCountryName" }
                                            )
                                        )
                                            .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                .Url(Url.Action("GetCountry"))
                                            .Reader(X.JsonReader().Root("data"))
                                        )
                                )
                                    .AllowBlank(false)
                                    .BlankText("لطفا کشور را انتخاب کنید.")
                                                , X.ComboBox()
                                                .ItemID("cboState")
                                                .EmptyText("استان")

                //.PaddingSpec("5px 0 20px 0")
                                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                                .TypeAhead(true)
                                                .Editable(true)
                                                .AllowBlank(false)
                                                .BlankText("لطفا استان مورد نظر را انتخاب نمایید.")
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .Width(195)
                                                .TriggerAction(TriggerAction.All)
                                                    .DisplayField("fldStateName")
                                                        .ValueField("fldStateId")
                                                    .Listeners(li => li.Select.Handler = "App.CompanyProfile.queryById('cboCity').clearValue(); App.CompanyProfile.queryById('cboCity').getStore().load()")
                                                    .Store(X.Store().AutoLoad(false)
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboState').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                    .Model(X.Model()
                                                            .IDProperty("fldIdState")
                                                        .Fields(
                                                                        new ModelField("fldStateId", ModelFieldType.String) { Mapping = "fldStateId" },
                                                                    new ModelField("fldStateName", ModelFieldType.String) { Mapping = "fldStateName" })
                                                            )
                                                        .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                        .Url(Url.Action("GetState"))
                                                        .Reader(X.JsonReader().Root("data")))
                                                            .Parameters(ps => ps.Add(new StoreParameter("ID", "App.CompanyProfile.queryById('cboCountry').getValue()", ParameterMode.Raw)))
                                                                    )
                                                    , X.ComboBox()
                                                    .ItemID("cboCity")
                                                    .EmptyText("شهر")
                                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                                    .TypeAhead(true)
                                                    .Editable(true)
                                                    .AllowBlank(false)
                                                    .BlankText("لطفا شهر مورد نظر را انتخاب نمایید.")
                                                    .QueryMode(DataLoadMode.Local)
                                                    .ForceSelection(true)
                                                    .Width(195)
                                                    .TriggerAction(TriggerAction.All)
                                                        .DisplayField("fldCityName")
                                                        .ValueField("fldCityId")
                                                    .Store(X.Store().AutoLoad(false)
                                                             .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboCity').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                        .Model(X.Model()
                                                                .IDProperty("fldCityId")
                                                            .Fields(
                                                                    new ModelField("fldCityId", ModelFieldType.String) { Mapping = "fldCityId" },
                                                                    new ModelField("fldCityName", ModelFieldType.String) { Mapping = "fldCityName" })
                                                                )
                                                            .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                            .Url(Url.Action("GetCity"))
                                                            .Reader(X.JsonReader().Root("data")))
                                                            .Parameters(ps => ps.Add(new StoreParameter("ID", "App.CompanyProfile.queryById('cboState').getValue()", ParameterMode.Raw)))
                                                                        )
                                        )
                                        )
                                , X.FieldSet().Title("مشخصات محل شرکت ").ItemID("Sherkat_Location")
                                .Center()
                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                .Defaults(new { Margin = 2 })
                                    .Items(
                                        X.Hidden().ItemID("fldMahalId"),

                                        X.Label("کدپستی ده رقمی:"), X.TextField()
                                            .ItemID("txtCodePosti")
                                            .AllowBlank(false)
                                            .BlankText("لطفا کدپستی را وارد کنید.")
        //.MaskRe("/[0-9]/")
                                                    .Plugins(X.InputMask()
                                            .Mask("AAAAAAAAAA")
                                            .UnmaskOnBlur(true)
                                            .MaskSymbols(ls =>
                                                {
                                                    ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                }))
        //  .RTL(false)
                                                .FieldStyle("direction:ltr;")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(262)
                                            .Icon(Icon.Reload)
                                            .Listeners(li =>
                                            {
                                                li.IconClick.Handler = "EstelamAdress(1);";
                                            })
                                        , X.Label("تلفن شرکت:")
                                        , X.FieldSet()
                                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                                            .Border(false)
                                        .Items(X.TextField()
                                                .ItemID("txtTell")
        // .RTL(false)
                                                .FieldStyle("direction:ltr;")
        //  .MaskRe("/[0-9]/")
                                                            .Plugins(X.InputMask()
                                    .Mask("AAAAAAAA")
                                    .UnmaskOnBlur(true)
                                    .MaskSymbols(ls =>
                                    {
                                        ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                    })
                                )
                                                .EmptyText("11111111")
                                            .AllowBlank(false)
                                                .BlankText("لطفا تلفن را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(220)
                                        , X.TextField()
                                            .ItemID("txtCode")
        // .RTL(false)
                                                    .FieldStyle("direction:ltr;")
        //  .MaskRe("/[0-9]/")
                                        .Plugins(X.InputMask()
                                            .Mask("0AA")
                                                 .ClearWhenInvalid(true)
                                            .MaskSymbols(ls =>
                                            {
                                                ls.Add(new MaskSymbol { Name = "A", Regex = "[1-9]", Placeholder = "_".ToCharArray()[0] });
                                            })
                                        )
                                            .EmptyText("021")
                                            .AllowBlank(false)
                                                .BlankText("لطفا پیش شماره را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(50))
                                            ,
                                        X.Label("تلفن همراه مدیرعامل:")
                                        , X.TextField()
                                            .ItemID("txtMobile")
        //  .RTL(false)
                                                    .FieldStyle("direction:ltr;")
        // .MaskRe("/[0-9]/")
                                                    .Plugins(X.InputMask()
                                    .Mask("09AAAAAAAAA")
                                    .ClearWhenInvalid(true)
                                    .MaskSymbols(ls =>
                                    {
                                        ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                    })
                                )
                                            .AllowBlank(false)
                                                .BlankText("لطفا تلفن همراه را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(245),
                                            X.Label().Text("نمابر:"), X.FieldSet()
                                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                                            .Border(false)
                                        .Items(
                                             X.TextField()
                                            .ItemID("txtNamabar")
        //.RTL(false)
                                                .FieldStyle("direction:ltr;")
                                                    .EmptyText("11111111")
                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                        .AllowBlank(false)
        // .MaskRe("/[0-9]/")
                                            .Plugins(X.InputMask()
                                        .Mask("AAAAAAAA")
                                        .UnmaskOnBlur(true)
                                        .MaskSymbols(ls =>
                                        {
                                            ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                        })
                                    )
                                        .BlankText("لطفا نمابر را وارد کنید.")
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .Width(220)
                                        , X.TextField()
                                            .ItemID("txtPishNamabar")
        //    .RTL(false)
                                                    .FieldStyle("direction:ltr;")
        //  .MaskRe("/[0-9]/")
                                                        .Plugins(X.InputMask()
                                        .Mask("0AA")
                                             .ClearWhenInvalid(true)
                                        .MaskSymbols(ls =>
                                        {
                                            ls.Add(new MaskSymbol { Name = "A", Regex = "[1-9]", Placeholder = "_".ToCharArray()[0] });
                                        })
                                    )
                                                    .EmptyText("021")
                                        .AllowBlank(false)
                                        .BlankText("لطفا پیش شماره نمابر را وارد کنید.")
                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                        .Width(50))

                                        ,
                                             X.Label("محل (کشور/استان/شهر) :")
                                            , X.FieldSet().Border(false)
                                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 3 })
                                            .Items(
                                            X.ComboBox()
                                            .ItemID("cboCountryLoc")
                                            .EmptyText("کشور")
        //.PaddingSpec("5px 0 20px 0")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .TypeAhead(true)
                                            .Editable(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا کشور مورد نظر را انتخاب نمایید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .Width(200)
                                            .TriggerAction(TriggerAction.All)
                                                .DisplayField("fldCountryLocName")
                                                .ValueField("fldCountryLocId")
                                            .Listeners(li => li.Select.Handler = "App.CompanyProfile.queryById('cboStateLoc').clearValue(); App.CompanyProfile.queryById('cboStateLoc').getStore().load()")
                                            .Store(X.Store()
                                                    .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboCountryLoc').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                .Model(X.Model()
                                                        .IDProperty("fldCountryLocId")
                                                    .Fields(
                                                                new ModelField("fldCountryLocId", ModelFieldType.String) { Mapping = "fldCountryLocId" },
                                                                new ModelField("fldCountryLocName", ModelFieldType.String) { Mapping = "fldCountryLocName" })
                                                        )
                                                    .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                    .Url(Url.Action("GetCountryLOC"))
                                                    .Reader(X.JsonReader().Root("data")))
        /* .Listeners(li => li.DataChanged.Handler = "LoadJobStatus();")*/
                                                                )
                                            , X.ComboBox()
                                            .ItemID("cboStateLoc")
                                            .EmptyText("استان")

            //.PaddingSpec("5px 0 20px 0")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .TypeAhead(true)
                                            .Editable(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا استان مورد نظر را انتخاب نمایید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .Width(200)
                                            .TriggerAction(TriggerAction.All)
                                                .DisplayField("fldStateLocName")
                                                .ValueField("fldStateLocId")
                                                .Listeners(li => li.Select.Handler = "App.CompanyProfile.queryById('cboCityLoc').clearValue(); App.CompanyProfile.queryById('cboCityLoc').getStore().load()")
                                                .Store(X.Store().AutoLoad(false)
                                                        .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboStateLoc').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                .Model(X.Model()
                                                        .IDProperty("fldStateLocId")
                                                    .Fields(
                                                                new ModelField("fldStateLocId", ModelFieldType.String) { Mapping = "fldStateLocId" },
                                                                new ModelField("fldStateLocName", ModelFieldType.String) { Mapping = "fldStateLocName" })
                                                        )
                                                    .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                    .Url(Url.Action("GetStateLoc"))
                                                    .Reader(X.JsonReader().Root("data")))
                                                        .Parameters(ps => ps.Add(new StoreParameter("ID", "App.CompanyProfile.queryById('cboCountryLoc').getValue()", ParameterMode.Raw)))

            /* .Listeners(li => li.DataChanged.Handler = "LoadJobStatus();")*/
                                                      )
                                                , X.ComboBox()
                                                .ItemID("cboCityLoc")
                                                .EmptyText("شهر")
        //.PaddingSpec("5px 0 20px 0")
                                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                                .TypeAhead(true)
                                                .Editable(true)
                                                .AllowBlank(false)
                                                .BlankText("لطفا شهر مورد نظر را انتخاب نمایید.")
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .Width(200)
                                                .TriggerAction(TriggerAction.All)
                                                    .DisplayField("fldCityLocName")
                                                    .ValueField("fldCityLocId")
                                                .Store(X.Store().AutoLoad(false)
                                                        .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboCityLoc').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                    .Model(X.Model()
                                                        .IDProperty("fldId")
                                                        .Fields(
                                                                    new ModelField("fldCityLocId", ModelFieldType.String) { Mapping = "fldCityLocId" },
                                                                    new ModelField("fldCityLocName", ModelFieldType.String) { Mapping = "fldCityLocName" })
                                                            )
                                                        .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                        .Url(Url.Action("GetCityLoc"))
                                                        .Reader(X.JsonReader().Root("data")))
                                                        .Parameters(ps => ps.Add(new StoreParameter("ID", "App.CompanyProfile.queryById('cboStateLoc').getValue()", ParameterMode.Raw)))
        /* .Listeners(li => li.DataChanged.Handler = "LoadJobStatus();")*/
                                                                    )
                                                    ).ColSpan(3)
                                            , X.Label("آخرین آدرس ثبتی دفتر مرکزی:").Width(400),
                                            X.TextField()
                                                    .ItemID("txtAddress")
                                                    .Listeners(l =>
                                                    {
                                                        l.Change.Handler = "ChangeKeyboard(App.CompanyProfile.queryById('txtAddress'))";
                                                        //l.IconClick.Handler = "GotoMap();";
                                                    })
                                                .ColSpan(3)
                                                .AllowBlank(false)
                                                    .BlankText("لطفا آدرس را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(610)
                                                .AutoScroll(true)
                                             //   .Icon(Icon.Reload)
                                       , X.Label("آدرس وب سایت:"), X.TextField().ColSpan(3)
                                        .ItemID("txtWeb")
        //.AllowBlank(false)
        //.RTL(false)
                                                .FieldStyle("direction:ltr;")
                                        .BlankText("لطفا آدرس وب سایت را وارد کنید.")
                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                        .Width(610)
                                        , X.Label("پست الکترونیک:"), X.FieldSet().ColSpan(3)
                                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 3 })
                                            .Border(false).Items(X.TextField()
                                            .ItemID("txtEmail1")
                                            .AllowBlank(false)
        // .RTL(false)
                                                .FieldStyle("direction:ltr;")
                                                .EmptyText("Example@yahoo.com")
        // .MaskRe("/[A-Z a-z @ . - _ 0-9]/")
                                            .BlankText("لطفا پست الکترونیک 1 را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(200)
                                                , X.TextField()
                                                    .EmptyText("Example@yahoo.com")
        // .MaskRe("/[A-Z a-z @ . - _ 0-9]/")
        //   .RTL(false)
                                                    .FieldStyle("direction:ltr;")
                                            .ItemID("txtEmail2")
        //.AllowBlank(false)
                                            .BlankText("لطفا پست الکترونیک 2 را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(200)
                                            , X.TextField()
                                                    .ItemID("txtEmail3")
        //.MaskRe("/[A-Z a-z @ . - _ 0-9]/")
                                                .EmptyText("Example@yahoo.com")
        // .RTL(false)
                                                        .FieldStyle("direction:ltr;")
        //.AllowBlank(false)
                                            .BlankText("لطفا پست الکترونیک 3 را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(200))
                                    )
                                            , X.FieldSet().Title("مشخصات سهام ").ItemID("Sherkat_Saham")
                                    .Center()
                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                                    .Defaults(new { Margin = 2 })
                                        .Items(
                                                X.Label("تعداد کل سهام: ").MarginSpec("0 0 0 40px")
                                                , X.TextField()
                                                .ItemID("txtTedadKolSaham")
                                                    .AllowBlank(false)
                                                    .MaxLength(11)
        // .RTL(false)
                                                        .FieldStyle("direction:ltr;")
                                            .EnforceMaxLength(true)
                                                .MaskRe("/[0-9]/")
                                                .BlankText("لطفا تعداد کل سهام شرکت را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(130)//.ColSpan(4)
                                                ,
                                                X.Label("تعداد سهام عام یا فرابورس: ").MarginSpec("0 0 0 0px")
                                            , X.TextField()
                                                .ItemID("txtFaraBoors")
                                                .AllowBlank(true)
                                                .MaxLength(11)
        // .RTL(false)
                                                    .FieldStyle("direction:ltr;")
                                        .EnforceMaxLength(true)
                                            .MaskRe("/[0-9]/")
                                            .BlankText("لطفا تعداد کل سهام شرکت را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(130)
                                                 , X.Label("مبلغ هر سهم(ریال):").MarginSpec("0 0 0 0px")
                                                 , X.TextField()
                                                    .ItemID("txtMablaghSaham")
                                                    .MaxLength(24)//.RTL(false)
                                                        .FieldStyle("direction:ltr;")
                                            .EnforceMaxLength(true)
                                                .Listeners(l => { l.Change.Handler = "App.CompanyProfile.queryById('txtMablaghSaham').setValue(accounting.formatNumber(App.CompanyProfile.queryById('txtMablaghSaham').getValue()))"; })
                                                .AllowBlank(false)
                                                .BlankText("لطفا مبلغ هر سهم شرکت را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(130)
                                    )

                                       , X.FieldSet().Title("الصاق فایل").ColSpan(4).ItemID("Sherkat_File")
                                           .Layout(Ext.Net.LayoutType.VBox)
                                .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Right })
                                        .Items(
                                             X.FieldSet()
                                            .Defaults(new { Margin = 2 })
                                            .Border(false)
                                             .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                         .Items(
                                                 X.Label().Text("صفحات مرتبط با موضوع فعالیت از اساسنامه:(فایل انتخابی با فرمت pdf)").ItemID("Sherkat_File1")
                                              , X.FileUploadField()
                                                .ID("FileUploadFieldCompany")
                                                .Width(80)
                                                .ButtonOnly(true)
                                                .Icon(Icon.Attach)
                                                .ButtonText("انتخاب فایل")
                                                    .DirectEvents(l =>
                                                            {
                                                                l.Change.Action = "Upload";
                                                                l.Change.Success = "hideprogress();";
                                                            }
                                                        )
                                                            .Listeners(l => l.Change.Fn = "showFile")
                                            , X.Button()
                                                .ID("ShowButton")
                                                .Icon(Icon.DiskDownload)
                                                .Text("دانلود فایل")
                                                .Listeners
                                                (l =>
                                                    {
                                                        l.Click.Handler = "ShowPic();";
                                                    }
                                                    )
                                                            , X.Container().Width(250).Content(@<div id="fi-button-file" style="display:none; "></div>).ItemID("Sherkat_File2")
                                                     , X.Label("(در صورت تغییر موضوع فعالیت شرکت، روزنامه تغییرات را آپلود نمایید.)").ItemID("lblInfo")//.ColSpan(4)
                                         )
                                            ,
                                             X.FieldSet()
                                                .Defaults(new { Margin = 2 })
                                                .Border(false)
                                             .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                         .Items(
                                                X.Label().Text("فایل مربوط به لوگو شرکت:(فایل انتخابی با فرمت jpg)")
                                          , X.FileUploadField()
                                            .ID("FileUploadLogo")
                                            .Width(80)
                                            .ButtonOnly(true)
                                            .Icon(Icon.Attach)
                                            .ButtonText("انتخاب فایل")
                                                .DirectEvents(l =>
                                                        {
                                                            l.Change.Action = "UploadLogo";
                                                            l.Change.Success = "hideprogressLogo();";
                                                        }
                                                    )
                                                            .Listeners(l => l.Change.Fn = "showFileLogo")

                                        , X.Button()
                                                .ID("ShowButtonLogo")
                                            .Icon(Icon.DiskDownload)
                                            .Text("دانلود فایل")
                                            .Listeners
                                            (l =>
                                                {
                                                    l.Click.Handler = "ShowPicLogo(1);";
                                                }
                                            )
                , X.Container().Content(@<div id="fi-button-Logo" style="display:none; "></div>).Width(300)
/*****///
  ,X.Label().Text("فایل مربوط به تاییدیه ها:(فایل انتخابی با فرمت jpg)")
                                          , X.FileUploadField()
                                            .ID("FileUploadMohr")
                                            .Width(80)
                                            .ButtonOnly(true)
                                            .Icon(Icon.Attach)
                                            .ButtonText("انتخاب فایل")
                                                .DirectEvents(l =>
                                                        {
                                                            l.Change.Action = "UploadMohr";
                                                            l.Change.Success = "hideprogressMohr();";
                                                        }
                                                    )
                                                            .Listeners(l => l.Change.Fn = "showFileMohr")

                                        , X.Button()
                                                .ID("ShowButtonMohr")
                                            .Icon(Icon.DiskDownload)
                                            .Text("دانلود فایل")
                                            .Listeners
                                            (l =>
                                                {
                                                    l.Click.Handler = "ShowPicMohr(1);";
                                                }
                                            )
                , X.Container().Content(@<div id="fi-button-Mohr" style="display:none; "></div>).Width(300)
                                            )
                                    )
        ////****************************** شخص***********************************
                                        , X.FieldSet().Title("مشخصات شخص ").ItemID("Shakhs_Info")
                                    .Center()
                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                    .Defaults(new { Margin = 2 })
                                    .PaddingSpec("0 0 0 30")
                                        .Items(
                                        X.Label().Text("کدملی:"), X.TextField()
                                                .ItemID("txtMelicode_Shakhs")
                                                .AllowBlank(false)
                                                    .MaskRe("/[0-9]/")
        //.RTL(false)
                                                .FieldStyle("direction:ltr;")
                                                .BlankText("لطفا کد ملی را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Plugins(X.InputMask()
                                                .Mask("AAAAAAAAAA")
                                                .UnmaskOnBlur(true)
                                                .ClearWhenInvalid(true)
                                                .MaskSymbols(ls =>
                                                {
                                                    ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                })
                                            )
                                        .Width(250)
                                        .Icon(Icon.Reload)
                                        //.Listeners(li =>
                                        //{
                                        //    li.IconClick.Handler = "LoadPersons();";
                                        //    li.Change.Handler = "ClearLoadPersons();";
                                        //})
                                            .Listeners(li =>
                                            {
                                                li.IconClick.Handler = "LoadPersons()";
                                                li.Change.Handler = "ChangeEstelam(1)";
                                            })

                                                , X.Label().Text("تاریخ تولد:"), X.PDateField()
                                                    .ItemID("txtTavalod_Shakhs")
                                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                                        .AllowBlank(false)
                                                    .MaskRe("/[0-9,/]/")
                                                            .Editable(true)
                                                    .Width(250)
                                                    .BlankText("لطفا تاریخ تولد را وارد کنید.")
                                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                                .Icon(Ext.Net.Icon.Reload)
                                                    .Listeners(li =>
                                            {
                                                li.IconClick.Handler = "LoadPersons()";
                                                li.Change.Handler = "ChangeEstelam(1)";
                                            })
                                                    ,
                                            X.Label().Text("نام:"), X.TextField()
                                                .ItemID("txtName_Shakhs")
                                                    .Listeners(l => l.Change.Handler = "ChangeKeyboard(App.CompanyProfile.queryById('txtName_Shakhs'))")
                                                .AllowBlank(false)
        //    .MaskRe("/[ا-ی,ئ,آ, ]/")
                                                .BlankText("لطفا نام را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(250)
                                             , X.Label().Text("نام خانوادگی:"), X.TextField()
                                                    .ItemID("txtFamily_Shakhs")
                                                            .Listeners(l => l.Change.Handler = "ChangeKeyboard(App.CompanyProfile.queryById('txtFamily_Shakhs'))")
                                                .AllowBlank(false)
        //     .MaskRe("/[ا-ی,ئ,آ, ]/")
                                                  .BlankText("لطفا نام خانوادگی را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(250)

                                            , X.Label().Text("شماره شناسنامه:"), X.TextField()
                                                    .ItemID("txtShenasname_Shakhs")
                                                    .AllowBlank(false)
                                                            .MaskRe("[/0-9-/]")
                                                            .FieldStyle("direction:ltr;")
        //.RTL(false)
                                                    .MaxLength(10)
                                                    .EnforceMaxLength(true)
                                                    .BlankText("لطفا شماره شناسنامه را وارد کنید.")
                                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                                    .Width(250)
                                                                ,
                                                X.Label().Text("نام پدر:"), X.TextField()
                                                            .ItemID("txtPName_Shakhs")
                                                                            .Listeners(l => l.Change.Handler = "ChangeKeyboard(App.CompanyProfile.queryById('txtPName_Shakhs'))")
                                                        .AllowBlank(false)
        // .MaskRe("/[ا-ی,ئ,آ, ]/")
                                                        .BlankText("لطفا نام پدر را وارد کنید.")
                                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                                            .Width(250)
                                                ,
                                            X.Label("نام اختصاری:"), X.TextField()
                                                .ItemID("txtEkhtesari_Shakhs")
                                                .MaxLength(100)
                                                .EnforceMaxLength(true)
                                                .AllowBlank(false)
                                                .BlankText("لطفا نام اختصاری را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(250)
                                            , X.Label("کد اقتصادی:"), X.TextField()
                                        .ItemID("txtCodeEghtesadi_Shakhs")
                                        .AllowBlank(false)
                                            .FieldStyle("direction:ltr;")
        //.RTL(false)
                                            .MaskRe("/[0-9]/")
                                                .Plugins(X.InputMask()
                                                    .Mask("AAAAAAAAAAAA")
                                                    .UnmaskOnBlur(true)
                                                    .MaskSymbols(ls =>
                                                        {
                                                            ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                        }))
                                        .BlankText("لطفا کد اقتصادی را وارد کنید.")
                                        .MsgTarget(Ext.Net.MessageTarget.Side)
                                        .Width(250)

                                        , X.Label("ملیت:")
                                        , X.ComboBox()
                                            .Width(250)
                                            .ItemID("CboMeliyat_Shakhs")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .BlankText("لطفا ملیت را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .AllowBlank(false)
                                            .EmptyText("ملیت")
                                            .Items(
                                                new ListItem("ایرانی", "1"),
                                                new ListItem("سایر", "2")
                                                    )
        //   .Listeners(li => li.AfterRender.Handler = "LoadCompanyProfile();")
                                                    .SelectedItems(new { Value = "1" })
                                        , X.Label().Text("شماره بیمه:")
                                        , X.TextField()
                                            .FieldStyle("direction:ltr;")
        //.RTL(false)
                                            .ItemID("txtSh_Bime_Shakhs")
                                            .MaxLength(10)
                                            .EnforceMaxLength(true)
                                            .Width(250)
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .AllowBlank(true)
                                            .BlankText("لطفا شماره بیمه را وارد کنید.")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .MaskRe("[/0-9-/]")
                                            , X.FieldSet().Border(false)
                                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                    .Defaults(new { Margin = 5 })
                                            .Items(
                                            X.Checkbox()
                                            .ItemID("CheckedMashmolGhanon_Shakhs")
        //.FieldLabel("مشمول قانون منع مداخله کارمندان مصوب 1337 می باشد.")
        //.LabelAlign(Ext.Net.LabelAlign.Right).RTL(false)
        //.LabelSeparator("")
                                            , X.Label("مشمول قانون منع مداخله کارمندان مصوب 1337 می باشد.")
                                                ,
                                            X.Button()
                                                .ID("BTn1")
                                                .Text("افراد موضوع قانون")
                                                .Listeners(l => l.Click.Handler = "showResult()")
                                            )

                                        .ColSpan(4)
                                        , X.Label("محل تولد :"),
                                        X.FieldSet()
                                        .ColSpan(3)
                                    .Center()
                                    .Border(false)
                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 3 })
                                    .Defaults(new { Margin = 2 })
                                            .Items(
                                                X.ComboBox()
                                            .ItemID("cboCountry_Shakhs")
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .Editable(true)
                                        .TypeAhead(true)
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldCountryName")
                                                .ValueField("fldCountryId")
                                        .EmptyText("کشور")
                                        .Width(195)
                                        .Listeners(ls =>
                                                ls.Select.Handler = "App.CompanyProfile.queryById('cboState_Shakhs').clearValue(); App.CompanyProfile.queryById('cboState_Shakhs').getStore().load()"
                                            )
                                        .ValueNotFoundText("Loading...")
                                            .Store(X.Store()
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboCountry_Shakhs').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                            .Model(X.Model()
                                                    .IDProperty("fldCountryId")
                                                .Fields(
                                                                        new ModelField("fldCountryId", ModelFieldType.String) { Mapping = "fldCountryId" },
                                                                        new ModelField("fldCountryName", ModelFieldType.String) { Mapping = "fldCountryName" }
                                                )
                                            )
                                                .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                    .Url(Url.Action("GetCountry"))
                                                .Reader(X.JsonReader().Root("data"))
                                            )
                                )
                                        .AllowBlank(false)
                                        .BlankText("لطفا کشور را انتخاب کنید.")
                                            , X.ComboBox()
                                            .ItemID("cboState_Shakhs")
                                            .EmptyText("استان")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .TypeAhead(true)
                                                .Editable(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا استان مورد نظر را انتخاب نمایید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .Width(195)
                                            .TriggerAction(TriggerAction.All)
                                                .DisplayField("fldStateName")
                                                .ValueField("fldStateId")
                                                .Listeners(li => li.Select.Handler = "App.CompanyProfile.queryById('cboCity_Shakhs').clearValue(); App.CompanyProfile.queryById('cboCity_Shakhs').getStore().load()")
                                                    .Store(X.Store().AutoLoad(false)
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboState_Shakhs').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                .Model(X.Model()
                                                        .IDProperty("fldIdState")
                                                    .Fields(
                                                                    new ModelField("fldStateId", ModelFieldType.String) { Mapping = "fldStateId" },
                                                                new ModelField("fldStateName", ModelFieldType.String) { Mapping = "fldStateName" })
                                                        )
                                                    .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                    .Url(Url.Action("GetState"))
                                                    .Reader(X.JsonReader().Root("data")))
                                                            .Parameters(ps => ps.Add(new StoreParameter("ID", "App.CompanyProfile.queryById('cboCountry_Shakhs').getValue()", ParameterMode.Raw)))
                                                                )
                                                , X.ComboBox()
                                                    .ItemID("cboCity_Shakhs")
                                                .EmptyText("شهر")
                                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                                .TypeAhead(true)
                                                    .Editable(true)
                                                .AllowBlank(false)
                                                .BlankText("لطفا شهر مورد نظر را انتخاب نمایید.")
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .Width(195)
                                                .TriggerAction(TriggerAction.All)
                                                    .DisplayField("fldCityName")
                                                    .ValueField("fldCityId")
                                                    .Store(X.Store().AutoLoad(false)
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboCity_Shakhs').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                    .Model(X.Model()
                                                            .IDProperty("fldCityId")
                                                        .Fields(
                                                                new ModelField("fldCityId", ModelFieldType.String) { Mapping = "fldCityId" },
                                                                new ModelField("fldCityName", ModelFieldType.String) { Mapping = "fldCityName" })
                                                            )
                                                        .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                        .Url(Url.Action("GetCity"))
                                                        .Reader(X.JsonReader().Root("data")))
                                                            .Parameters(ps => ps.Add(new StoreParameter("ID", "App.CompanyProfile.queryById('cboState_Shakhs').getValue()", ParameterMode.Raw)))
                                                                    )
                                                )

                                            ,
                                             X.Label("محل صدور :"),
                                             X.FieldSet()
                                             .ColSpan(3)
                                            .Center()
                                            .Border(false)
                                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 3 })
                                            .Defaults(new { Margin = 2 })
                                        .Items(
                                        X.ComboBox()
                                        .ItemID("cboCountrySodur_Shakhs")
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .Editable(true)
                                        .TypeAhead(true)
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldCountryName")
                                                .ValueField("fldCountryId")
                                        .EmptyText("کشور")
                                        .Width(195)
                                        .Listeners(ls =>
                                            ls.Select.Handler = "App.CompanyProfile.queryById('cboStateSodur_Shakhs').clearValue(); App.CompanyProfile.queryById('cboStateSodur_Shakhs').getStore().load()"
                                            )
                                        .ValueNotFoundText("Loading...")
                                            .Store(X.Store()
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboCountrySodur_Shakhs').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                            .Model(X.Model()
                                                    .IDProperty("fldCountryId")
                                                .Fields(
                                                                        new ModelField("fldCountryId", ModelFieldType.String) { Mapping = "fldCountryId" },
                                                                        new ModelField("fldCountryName", ModelFieldType.String) { Mapping = "fldCountryName" }
                                                )
                                            )
                                                .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                    .Url(Url.Action("GetCountry"))
                                                .Reader(X.JsonReader().Root("data"))
                                            )
                                    )
                                        .AllowBlank(false)
                                        .BlankText("لطفا کشور را انتخاب کنید.")
                                                    , X.ComboBox()
                                                        .ItemID("cboStateSodur_Shakhs")
                                                    .EmptyText("استان")

                                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                                    .TypeAhead(true)
                                                        .Editable(true)
                                                    .AllowBlank(false)
                                                    .BlankText("لطفا استان مورد نظر را انتخاب نمایید.")
                                                    .QueryMode(DataLoadMode.Local)
                                                    .ForceSelection(true)
                                                    .Width(195)
                                                    .TriggerAction(TriggerAction.All)
                                                        .DisplayField("fldStateName")
                                                            .ValueField("fldStateId")
                                                                .Listeners(li => li.Select.Handler = "App.CompanyProfile.queryById('cboCitySodur_Shakhs').clearValue(); App.CompanyProfile.queryById('cboCitySodur_Shakhs').getStore().load()")
                                                            .Store(X.Store().AutoLoad(false)
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboStateSodur_Shakhs').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                        .Model(X.Model()
                                                                .IDProperty("fldIdState")
                                                            .Fields(
                                                                            new ModelField("fldStateId", ModelFieldType.String) { Mapping = "fldStateId" },
                                                                        new ModelField("fldStateName", ModelFieldType.String) { Mapping = "fldStateName" })
                                                                )
                                                            .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                            .Url(Url.Action("GetState"))
                                                            .Reader(X.JsonReader().Root("data")))
                                                                    .Parameters(ps => ps.Add(new StoreParameter("ID", "App.CompanyProfile.queryById('cboCountrySodur_Shakhs').getValue()", ParameterMode.Raw)))
                                                                        )
                                                        , X.ComboBox()
                                                            .ItemID("cboCitySodur_Shakhs")
                                                        .EmptyText("شهر")
                                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                                        .TypeAhead(true)
                                                            .Editable(true)
                                                        .AllowBlank(false)
                                                        .BlankText("لطفا شهر مورد نظر را انتخاب نمایید.")
                                                        .QueryMode(DataLoadMode.Local)
                                                        .ForceSelection(true)
                                                        .Width(195)
                                                        .TriggerAction(TriggerAction.All)
                                                            .DisplayField("fldCityName")
                                                            .ValueField("fldCityId")
                                                            .Store(X.Store().AutoLoad(false)
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboCitySodur_Shakhs').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                            .Model(X.Model()
                                                                    .IDProperty("fldCityId")
                                                                .Fields(
                                                                        new ModelField("fldCityId", ModelFieldType.String) { Mapping = "fldCityId" },
                                                                        new ModelField("fldCityName", ModelFieldType.String) { Mapping = "fldCityName" })
                                                                    )
                                                                .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                                .Url(Url.Action("GetCity"))
                                                                .Reader(X.JsonReader().Root("data")))
                                                                            .Parameters(ps => ps.Add(new StoreParameter("ID", "App.CompanyProfile.queryById('cboStateSodur_Shakhs').getValue()", ParameterMode.Raw)))
                                                                            )
                                            )
                                            )
        //********************************Shakhs_Location
                                , X.FieldSet().Title("مشخصات محل فعالیت ").ItemID("Shakhs_Location")
                                    .Center()
                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                    .Defaults(new { Margin = 2 })
                                        .Items(
                                           X.Label("کدپستی ده رقمی:"), X.TextField()
                                                    .ItemID("txtCodePosti_Shakhs")
                                                .AllowBlank(false)
                                                .BlankText("لطفا کدپستی را وارد کنید.")
        //.MaskRe("/[0-9]/")
                                                        .Plugins(X.InputMask()
                                                .Mask("AAAAAAAAAA")
                                                .UnmaskOnBlur(true)
                                                .MaskSymbols(ls =>
                                                    {
                                                        ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                    }))
        //.RTL(false)
                                                            .FieldStyle("direction:ltr;")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                    .Width(255)//.ColSpan(4)
                                                .Icon(Icon.Reload)
                                                .Listeners(li =>
                                                {
                                                    li.IconClick.Handler = "EstelamAdress(2);";
                                                })
                                            , X.Label("تلفن:")
                                            , X.FieldSet()
                                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                                                .Border(false)
                                            .Items(X.TextField()
                                                        .ItemID("txtTell_Shakhs")
        //  .RTL(false)
                                                            .FieldStyle("direction:ltr;")
        //  .MaskRe("/[0-9]/")
                                                                .Plugins(X.InputMask()
                                        .Mask("AAAAAAAA")
                                        .UnmaskOnBlur(true)
                                        .MaskSymbols(ls =>
                                        {
                                            ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                        })
                                    )
                                                    .EmptyText("11111111")
                                                .AllowBlank(false)
                                                    .BlankText("لطفا تلفن را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(220)
                                            , X.TextField()
                                                    .ItemID("txtCode_Shakhs")
        //      .RTL(false)
        //  .MaskRe("/[0-9]/")
                                            .FieldStyle("direction:ltr;")
                                            .Plugins(X.InputMask()
                                                .Mask("0AA")
                                                     .ClearWhenInvalid(true)
                                                .MaskSymbols(ls =>
                                                {
                                                    ls.Add(new MaskSymbol { Name = "A", Regex = "[1-9]", Placeholder = "_".ToCharArray()[0] });
                                                })
                                            )
                                                .EmptyText("021")
                                                .AllowBlank(false)
                                                    .BlankText("لطفا پیش شماره را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(50))
                                                    ,
                                                X.Label("تلفن همراه:")
                                                , X.TextField()
                                                .ItemID("txtMobile_Shakhs")
        //.RTL(false)
                                                    .FieldStyle("direction:ltr;")
                                                    .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .AllowBlank(false)
                                            .MaskRe("/[0-9]/")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .EmptyText("09111111111")
                                                .Plugins(X.InputMask()
                                                    .Mask("09AAAAAAAAA")
                                                    .ClearWhenInvalid(true)
                                                    .MaskSymbols(ls =>
                                                    {
                                                        ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                                    })
                                                )
        //                    .Plugins(X.InputMask()
        //    .Mask("09AAAAAAAAA")
        //    .UnmaskOnBlur(true)
        //    .MaskSymbols(ls =>
        //    {
        //        ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
        //    })
        //)
        //            .AllowBlank(false)
                                                            .BlankText("لطفا تلفن همراه را وارد کنید.")
        //            .MsgTarget(Ext.Net.MessageTarget.Side)
                                                    .Width(255),
                                                X.Label().Text("نمابر:"), X.FieldSet()
                                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 2 })
                                                .Border(false)
                                            .Items(
                                                 X.TextField()
                                                .ItemID("txtNamabar_Shakhs")
        // .RTL(false)
                                                    .FieldStyle("direction:ltr;")
                                                        .EmptyText("11111111")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .AllowBlank(false)
        // .MaskRe("/[0-9]/")
                                                .Plugins(X.InputMask()
                                            .Mask("AAAAAAAA")
                                            .UnmaskOnBlur(true)
                                            .MaskSymbols(ls =>
                                            {
                                                ls.Add(new MaskSymbol { Name = "A", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                                            })
                                        )
                                                        .BlankText("لطفا نمابر را وارد کنید.")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .Width(220)
                                            , X.TextField()
                                                    .ItemID("txtPishNamabar_Shakhs")
        //  .RTL(false)
                                                        .FieldStyle("direction:ltr;")
        //  .MaskRe("/[0-9]/")
                                                            .Plugins(X.InputMask()
                                            .Mask("0AA")
                                                 .ClearWhenInvalid(true)
                                            .MaskSymbols(ls =>
                                            {
                                                ls.Add(new MaskSymbol { Name = "A", Regex = "[1-9]", Placeholder = "_".ToCharArray()[0] });
                                            })
                                        )
                                                        .EmptyText("021")
                                            .AllowBlank(false)
                                            .BlankText("لطفا پیش شماره نمابر را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(50))
                                            ,
                                            X.Label("محل (کشور/استان/شهر) :")
                                            , X.FieldSet().Border(false)
                                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 3 })
                                            .Items(
                                            X.ComboBox()
                                            .ItemID("cboCountryLoc_Shakhs")
                                            .EmptyText("کشور")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .TypeAhead(true)
                                                .Editable(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا کشور مورد نظر را انتخاب نمایید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .Width(200)
                                            .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldCountryName")
                                            .ValueField("fldCountryId")
                                            .Listeners(ls =>
                                                    ls.Select.Handler = "App.CompanyProfile.queryById('cboStateLoc_Shakhs').clearValue(); App.CompanyProfile.queryById('cboStateLoc_Shakhs').getStore().load()")
                                                .Store(X.Store()
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboCountryLoc_Shakhs').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                .Model(X.Model()
                                                        .IDProperty("fldCountryId")
                                                    .Fields(
                                                                new ModelField("fldCountryId", ModelFieldType.String) { Mapping = "fldCountryId" },
                                                                new ModelField("fldCountryName", ModelFieldType.String) { Mapping = "fldCountryName" })
                                                        )
                                                    .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                        .Url(Url.Action("GetCountry"))
                                                    .Reader(X.JsonReader().Root("data")))
                                                                )
                                            , X.ComboBox()
                                            .ItemID("cboStateLoc_Shakhs")
                                            .EmptyText("استان")
                                            .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .TypeAhead(true)
                                                .Editable(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا استان مورد نظر را انتخاب نمایید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .ForceSelection(true)
                                            .Width(200)
                                            .TriggerAction(TriggerAction.All)
                                                .DisplayField("fldStateName")
                                                .ValueField("fldStateId")
                                                .Listeners(li => li.Select.Handler = "App.CompanyProfile.queryById('cboCityLoc_Shakhs').clearValue(); App.CompanyProfile.queryById('cboCityLoc_Shakhs').getStore().load()")
                                                    .Store(X.Store().AutoLoad(false)
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboStateLoc_Shakhs').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                .Model(X.Model()
                                                        .IDProperty("fldStateId")
                                                    .Fields(
                                                                new ModelField("fldStateId", ModelFieldType.String) { Mapping = "fldStateId" },
                                                                new ModelField("fldStateName", ModelFieldType.String) { Mapping = "fldStateName" })
                                                        )
                                                    .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                    .Url(Url.Action("GetState"))
                                                    .Reader(X.JsonReader().Root("data")))
                                                            .Parameters(ps => ps.Add(new StoreParameter("ID", "App.CompanyProfile.queryById('cboCountryLoc_Shakhs').getValue()", ParameterMode.Raw)))

                                                      )
                                                , X.ComboBox()
                                                    .ItemID("cboCityLoc_Shakhs")
                                                .EmptyText("شهر")
                                                .LabelAlign(Ext.Net.LabelAlign.Top)
                                                .TypeAhead(true)
                                                    .Editable(true)
                                                .AllowBlank(false)
                                                .BlankText("لطفا شهر مورد نظر را انتخاب نمایید.")
                                                .QueryMode(DataLoadMode.Local)
                                                .ForceSelection(true)
                                                .Width(200)
                                                .TriggerAction(TriggerAction.All)
                                                    .DisplayField("fldCityName")
                                                    .ValueField("fldCityId")
                                                    .Store(X.Store().AutoLoad(false)
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboCityLoc_Shakhs').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                                    .Model(X.Model()
                                                        .IDProperty("fldId")
                                                        .Fields(
                                                                    new ModelField("fldCityId", ModelFieldType.String) { Mapping = "fldCityId" },
                                                                    new ModelField("fldCityName", ModelFieldType.String) { Mapping = "fldCityName" })
                                                            )
                                                        .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                        .Url(Url.Action("GetCity"))
                                                        .Reader(X.JsonReader().Root("data")))
                                                            .Parameters(ps => ps.Add(new StoreParameter("ID", "App.CompanyProfile.queryById('cboStateLoc_Shakhs').getValue()", ParameterMode.Raw)))
                                                   )
                                                    ).ColSpan(3)
                                            , X.Label(" آدرس ثبتی محل فعالیت:").Width(400),
                                            X.TextField()
                                                        .ItemID("txtAddress_Shakhs")
                                                        .Listeners(l => l.Change.Handler = "ChangeKeyboard(App.CompanyProfile.queryById('txtAddress_Shakhs'))")
                                                .ColSpan(3)
                                                .AllowBlank(false)
                                                    .BlankText("لطفا آدرس را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(610)
                                                    .AutoScroll(true)


                                           , X.Label("آدرس وب سایت:"), X.TextField().ColSpan(3)
                                                .ItemID("txtWeb_Shakhs")
        //.AllowBlank(false)
        //.RTL(false)
                                                    .FieldStyle("direction:ltr;")
                                            .BlankText("لطفا آدرس وب سایت را وارد کنید.")
                                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                            .Width(610)
                                            , X.Label("پست الکترونیک:"), X.FieldSet().ColSpan(3)
                                                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 3 })
                                                .Border(false).Items(X.TextField()
                                                .ItemID("txtEmail_Shakhs")
                                                //.MaskRe("/[A-Z a-z @ . 0-9]/")
                                                .AllowBlank(false)
        //.RTL(false)
                                                    .FieldStyle("direction:ltr;")
                                                .EmptyText("Example@yahoo.com")
                                                .BlankText("لطفا پست الکترونیک 1 را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(200)
                                                , X.TextField()
                                                .EmptyText("Example@yahoo.com")
        //.RTL(false)
                                                    .FieldStyle("direction:ltr;")
                                                    .ItemID("txtEmail1_Shakhs")
                                                 //   .MaskRe("/[A-Z a-z @ . 0-9]/")     //.AllowBlank(false)
                                                .BlankText("لطفا پست الکترونیک 2 را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(200)
                                                , X.TextField()
                                                    .ItemID("txtEmail2_Shakhs")
                                                //    .MaskRe("/[A-Z a-z @ . 0-9]/")
                                                .EmptyText("Example@yahoo.com")
        //.RTL(false)        //.AllowBlank(false)
                                                    .FieldStyle("direction:ltr;")
                                                .BlankText("لطفا پست الکترونیک 3 را وارد کنید.")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                .Width(200))
                                        )
                                , X.FieldSet().Title("الصاق فایل").ColSpan(4).ItemID("Shakhs_File")
                                                 .Layout(Ext.Net.LayoutType.VBox)
                                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Right })
                                        .Items(
                                        X.FieldSet()
                                            .Defaults(new { Margin = 2 })
                                            .Border(false)
                                             .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                         .Items(
                                         X.Label().Text("نوع مجوز فعالیت: ")
                                         , X.ComboBox()
                                        .ItemID("cboTypeMojavez")
                                        .EmptyText("...")
        //.PaddingSpec("5px 0 20px 0")
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .TypeAhead(true)
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .BlankText("لطفا نوع مجوز فعالیت را انتخاب نمایید.")
                                        .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                        .Width(150)
                                        .TriggerAction(TriggerAction.All)
                                            .DisplayField("fldTitle")
                                        .ValueField("fldId")
                                        .Listeners(l => l.Change.Handler = "ChangeTypeMojavez()")
                                            .Store(X.Store()
                                                            .Listeners(l => l.BeforeLoad.Handler = "App.CompanyProfile.queryById('cboTypeMojavez').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.CompanyProfile.queryById('AntiForgeryField').getValue());")
                                            .Model(X.Model()
                                                    .IDProperty("fldId")
                                                .Fields(
                                                            new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                                                    new ModelField("fldTitle", ModelFieldType.String) { Mapping = "fldTitle" })
                                                    )
                                                .Proxy(X.AjaxProxy()
                                            .ActionMethods(l => l.Read = HttpMethod.POST)
                                                    .Url(Url.Action("GetTypeMojavezFaaliat"))
                                                .Reader(X.JsonReader().Root("data")))
                                                            )
                                                    , X.Label("کد مجوز:")
                                                        .ItemID("lblCodeMojavez")
                                                , X.TextField()
                                                    .ItemID("txtCodeMojavez")
                                                .AllowBlank(false)
                                                .BlankText("لطفا کدمجوز را وارد کنید.")
                                                 .MaskRe("/[0-9]/")
        //.RTL(false)
                                                            .FieldStyle("direction:ltr;")
                                                .MsgTarget(Ext.Net.MessageTarget.Side)
                                                    .Width(150)//.ColSpan(4)
                                                .Icon(Icon.Reload)
                                                .Listeners(li =>
                                                {
                                                    li.IconClick.Handler = "EstelamMojavez();";
                                                    li.Change.Handler = "ChangeCodeMojaveztxt()";
                                                })
                                                    )

                                                            ,
                                             X.FieldSet()
                                            .Defaults(new { Margin = 2 })
                                            .Border(false)
                                             .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                         .Items(
                                              X.Label().Text("فایل مجوز:(فایل انتخابی باید فرمت pdf داشته باشد)").ItemID("Shakhs_File1")
                                              , X.FileUploadField()
                                            .ID("FileUploadFieldCompany_Shakhs")
                                            .Width(80)
                                            .ButtonOnly(true)
                                            .Icon(Icon.Attach)
                                            .ButtonText("انتخاب فایل")
                                                .DirectEvents(l =>
                                                        {
                                                            l.Change.Action = "Upload_shakhs";
                                                            l.Change.Success = "hideprogress_Shakhs();";
                                                        }
                                                    )
                                                            .Listeners(l => l.Change.Fn = "showFile_Shakhs")

                                        , X.Button()
                                                .ID("ShowButton_Shakhs")
                                            .Icon(Icon.DiskDownload)
                                            .Text("دانلود فایل")
                                            .Listeners
                                            (l =>
                                                {
                                                    l.Click.Handler = "ShowPic_Shakhs();";
                                                }
                                            )
                , X.Container().Content(@<div id="fi-button-file_Shakhs" style="display:none; "></div>).Width(250).ItemID("Shakhs_File2")
                                                )

                                                ,
                                                 X.FieldSet()
                                                    .Defaults(new { Margin = 2 })
                                                    .Border(false)
                                                 .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                             .Items(
                                            X.Label().Text("لوگو شرکت:(فایل انتخابی باید فرمت jpg داشته باشد)")
                                          , X.FileUploadField()
                                            .ID("FileUploadLogo_Shakhs")
                                            .Width(80)
                                            .ButtonOnly(true)
                                            .Icon(Icon.Attach)
                                            .ButtonText("انتخاب فایل")
                                                .DirectEvents(l =>
                                                        {
                                                            l.Change.Action = "UploadLogo";
                                                            l.Change.Success = "hideprogressLogo();";
                                                        }
                                                    )
                                                                .Listeners(l => l.Change.Fn = "showFileLogo_Shakhs")

                                        , X.Button()
                                                .ID("ShowButtonLogo_Shakhs")
                                            .Icon(Icon.DiskDownload)
                                            .Text("دانلود فایل")
                                            .Listeners
                                            (l =>
                                                {
                                                    l.Click.Handler = "ShowPicLogo(2);";
                                                }
                                            )
                , X.Container().Content(@<div id="fi-button-Logo-shakhs" style="display:none; "></div>).Width(300)
                                    )
                                    )
                              , X.FieldSet().Title("کد حفاظتی").ColSpan(4).ItemID("CapthaFieldSet")
                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                                        .Defaults(new { Margin = 2 })
                                        .Items(
                                             X.Container().Content(@<div><img id="m_imgCaptcha" style="width:200px;height:70px" /><span id="BtnRefresh" style="font-size: 11px;font-family: tornado tahoma;width: 25px;height:25px;text-align: left;align-content:center;background-image: url('/Content/refresh1.png');background-repeat: no-repeat;"></span></div>)//.ColSpan(2)
                                             , X.Button().Icon(Ext.Net.Icon.ArrowRefresh)
                                                 .Handler("LoadCaptha")
        //.Listeners(l => l.Click.Handler = "LoadCaptha()")
                                            , X.Label().Text("لطفا کد حفاظتی را مطابق تصویر وارد کنید:")
                                            , X.Container().Content(@<div><input id='txtCap' class='text' style='direction:ltr;font-family:sans-serif;width: 100px;height: 22px;' /></div>)
        //, X.TextField()
        //.ItemID("txtCap")
        //.FieldLabel("لطفا کد حفاظتی را مطابق تصویر وارد کنید:")
        //.MsgTarget(Ext.Net.MessageTarget.Side)
        //.AllowBlank(false).Width(215)
        //.BlankText("Captha: این فیلد باید مقداری داشته باشد.")
        //.LabelAlign(Ext.Net.LabelAlign.Top)


                                )
)
        //.Layout(Ext.Net.LayoutType.VBox)
        //.LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
                    )






)
)
)
<script type="text/javascript">
    var ComId = 0;
    var PersonId = 0;
    var FileId = 0;
    var LogoFileId = 0;
    var MohrFileId = 0;
    var captcha = '@ViewBag.captcha';
    var EndUpload = false;
    var EndUpload_Shakhs = false;
    var Mojaz = 0;
    var Mojaz2 = 0;
    var Mojaz3 = 0;
    var Mojaz4 = 0;
    var sizee = 0;
    var sizee2 = 0;
    var sizee3 = 0;
    var sizee4 = 0;
    var flagEdit = 1;
    var RealPersonLocId = 0;

    var EstelamSenf = 0;
    var descMojavez = "";
    var afterEdit = 0;

    var IsEstelam = false;
    var IsEstelamNamayande = false;
      
      function showHelpCompanyProfile() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Faces/CompanyProfile/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
      function showHelp_VideoCompanyProfile() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Faces/CompanyProfile/VideoWinCompanyProfile',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });

    }
    function ChangeKeyboard(TextBox) {
        var txt = TextBox.getValue();
        var l = TextBox.getValue().length;
        var subtxt = TextBox.getValue().substring(l, l - 1);
        if ((txt != "") && (subtxt.charCodeAt(0) >= 65 && subtxt.charCodeAt(0) <= 122)) {
            TextBox.setValue(txt.replace(subtxt, ""));
            Ext.net.Notification.show({
                hideFx: {
                    fxName: 'switchOff'
                },
                showFx: {
                    fxName: 'slideIn',
                    args: [
                    'tl', {
                        easing: 'bounceOut',
                        duration: 1000
                    }
                    ]
                },
                pinEvent: 'click',
                alignToCfg: {
                    offset: [20, 20],
                    position: 'tl-tl'
                },
                html: "<ul style='color: red;'>زبان صفحه کلید را به فارسی تغییر دهید.</ul>",
                title: 'هشدار: ',
                width: 220,
                height: 90
            });
        }
    }
    function showResult() {
        var mybr = document.createElement('br');

        Ext.net.Notification.show({
            alignToCfg: {
                offset: [150, -30],
                position: 'bl-bl',

            },
            pinned: true,
            showPin: true,
            modal: true,
            bringToFront: true,
            pinEvent: 'click',
            height: 320,
            width: 500,
            html: '<div style="text-align: right; color: rgb(255, 0, 0); font-family: tahoma, arial, verdana, sans-serif; font-size: 12px;"><b style="font-family: tahoma, arial, helvetica, sans-serif; font-size: 11px; text-align: -webkit-right; background-color: rgb(223, 232, 246);"><span lang="FA" style="font-family: Tahoma, sans-serif; font-size: 9pt;">اشخاص زير موضوع قانون منع مداخله وزراء و نمايندگان مجلسين و كارمندان دولت</span></b></div><b style="color: rgb(255, 0, 0); font-family: tahoma, arial, helvetica, sans-serif; font-size: 11px; text-align: -webkit-right; background-color: rgb(223, 232, 246);"><div style="text-align: right;"><b><span lang="FA" style="font-family: Tahoma, sans-serif; font-size: 9pt;">در معاملات دولتي و كشوري مصوب 22 ديماه 1337، مي‌باشند و بايد در پاسخنامه علامت بزنند</span></b><b><span lang="FA" style="font-family: Tahoma, sans-serif; font-size: 8pt;">.</span></b></div></b><b style="text-align: -webkit-right; background-color: rgb(223, 232, 246);"><div style="text-align: right;"><font face="Tahoma, sans-serif"><span style="font-size: 10.6667px;"><br></span></font></div></b><span lang="FA" style="color: rgb(0, 0, 0); font-family: Tahoma, sans-serif; font-size: 10pt; text-align: -webkit-right; background-color: rgb(223, 232, 246);"><div style="text-align: right;"><span lang="FA" style="font-size: 10pt;">1-</span><span lang="FA" style="font-size: 10pt;">رئيس جمهور، وزيران، معاونين و نمايندگان مجلس شوراي اسلامي.</span></div></span><span lang="FA" style="color: rgb(0, 0, 0); font-family: Tahoma, sans-serif; font-size: 10pt; text-align: -webkit-right; background-color: rgb(223, 232, 246);"><div style="text-align: right;"><span lang="FA" style="font-size: 10pt;">2-</span><span lang="FA" style="font-size: 10pt;">سفــرا، استانداران، فرمانداران، شهــــرداران و نمايندگان شوراي اسلامي شهر.</span></div></span><span lang="FA" style="color: rgb(0, 0, 0); font-family: Tahoma, sans-serif; font-size: 10pt; text-align: -webkit-right; background-color: rgb(223, 232, 246);"><div style="text-align: right;"><span lang="FA" style="font-size: 10pt;">3-</span><span lang="FA" style="font-size: 10pt;">كارمندان و صاحب منصبان كشوري و لشكري وشهرداري‌ها ودستگاه‌هاي وابسته به آنها</span></div></span><span lang="FA" style="color: rgb(0, 0, 0); font-family: Tahoma, sans-serif; font-size: 10pt; text-align: -webkit-right; background-color: rgb(223, 232, 246);"><div style="text-align: right;"><span lang="FA" style="font-size: 10pt;">4-</span><span lang="FA" style="font-size: 10pt;">كاركنان هر سازمان يا بنگاه‌ها يا شركت يا بانك يا هر موسسـه ديگر (آموزشي، پژوهشي و غيره) كه اكثريت سهــام يا اكثريت منافع يا مديريت يا اداره كردن يا نظارت آن متعلق به دولت (و شركت‌هاي دولتي) يا شهرداري‌ها و يا دستگاه‌هـــاي وابستـه به آنها باشــد.</span></div></span><span lang="FA" style="color: rgb(0, 0, 0); font-family: Tahoma, sans-serif; font-size: 10pt; text-align: -webkit-right; background-color: rgb(223, 232, 246);"><div style="text-align: right;"><span lang="FA" style="font-size: 10pt;">5-</span><span lang="FA" style="font-size: 10pt;">اشخاصي كه بنحوي از انحاء از خزانه داري كل كشور يا مجلس يا موسسات مذكور در بالا حقوق يا مقرري ياحق الزحمه يا پاداش و يا امثال آن بطور مستمر (باستثناي حقوق بازنشستگي و وظيفه و مستمري قانوني) دريافت مي‌دارند.</span></div></span><span lang="FA" style="color: rgb(0, 0, 0); font-family: Tahoma, sans-serif; font-size: 10pt; text-align: -webkit-right; background-color: rgb(223, 232, 246);"><div style="text-align: right;"><span lang="FA" style="font-size: 10pt;">6-</span><span lang="FA" style="font-size: 10pt;">مديران و كاركنان بنگاه‌هاي خيريه‌اي كه از دولت يا از شهرداري‌ها كمك مستمر دريافت مي‌دارند.</span></div></span><span lang="FA" style="color: rgb(0, 0, 0); font-family: Tahoma, sans-serif; font-size: 10pt; text-align: -webkit-right; background-color: rgb(223, 232, 246);"><div style="text-align: right;"><span lang="FA" style="font-size: 10pt;">7-اقرباء درجه يك (</span><span lang="FA" style="font-size: 10pt;">پدر و مادر و برادر و خواهر و زن يا شـوهر و اولاد بلافصل و عروس و داماد) وزير ، معاون وزير و مدير دستگاه</span></div></span>',
            title: 'متن قانون عدم مداخله كاركنان دولت'
        });

    }

    function hideprogress() {
        if (Mojaz == 1 && sizee == 1) {
            EndUpload = true;
            Mojaz = 0;
            sizee = 0;
        }
        else if (Mojaz == 1 && sizee == 0) {
            Mojaz = 0;
            msgbox.hide();
        }
    }
    function hideprogress_Shakhs() {
        if (Mojaz2 == 1 && sizee2 == 1) {
            EndUpload_Shakhs = true;
            Mojaz2 = 0;
            sizee2 = 0;
        }
        else if (Mojaz2 == 1 && sizee2 == 0) {
            Mojaz2 == 0;
            msgbox2.hide();
        }
    }
    function hideprogressLogo() {
        if (Mojaz3 == 1 && sizee3 == 1) {
            EndUpload = true;
            Mojaz3 = 0;
            sizee3 = 0;
        }
        else if (Mojaz3 == 1 && sizee3 == 0) {
            Mojaz3 = 0;
            msgbox3.hide();
        }
    }
    function hideprogressMohr() {
        if (Mojaz4 == 1 && sizee4 == 1) {
            EndUpload = true;
            Mojaz4 = 0;
            sizee4 = 0;
        }
        else if (Mojaz4 == 1 && sizee4 == 0) {
            Mojaz4 = 0;
            msgbox4.hide();
        }
    }

    var Check = setInterval(CheckEnd, 500);
    var Check_Shakhs = setInterval(CheckEnd_Shakhs, 500);

    function CheckEnd() {
        if (EndUpload == true) {
            Ext.MessageBox.hide();
            Ext.Msg.alert('عملیات موفق', 'فایل با موفقیت آپلود شد.');
            clearInterval(CheckEnd);
            EndUpload = false;
        }
    }
    function CheckEnd_Shakhs() {
        if (EndUpload_Shakhs == true) {
            Ext.MessageBox.hide();
            Ext.Msg.alert('عملیات موفق', 'فایل با موفقیت آپلود شد.');
            clearInterval(CheckEnd_Shakhs);
            EndUpload_Shakhs = false;
        }
    }

    function showProgressBar() {
        var msgbox = Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال آپلود فایل...',
            width: 300,
            wait: true,
            waitConfig:
            {
                /*duration: 10000,*/
                interval: 200,
                /*increment: 15,*/
                text: 'در حال آپلود فایل...',
                scope: this
                /*fn: function () {
                    Ext.MessageBox.hide();
                    Ext.Msg.alert('Status', 'Saved successfully!');
                }*/
            }
        });
    }
    function showProgressBar_Shakhs() {
        var msgbox2 = Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال آپلود فایل...',
            width: 300,
            wait: true,
            waitConfig:
            {
                /*duration: 10000,*/
                interval: 200,
                /*increment: 15,*/
                text: 'در حال آپلود فایل...',
                scope: this
                /*fn: function () {
                    Ext.MessageBox.hide();
                    Ext.Msg.alert('Status', 'Saved successfully!');
                }*/
            }
        });
    }

    function validation() {
        /*App.CompanyProfile.queryById('txtMobileNamayande').focus();
        App.CompanyProfile.queryById('txtMelicode_Modir').focus();
        App.CompanyProfile.queryById('txtShenase').focus();
       App.CompanyProfile.queryById('txtMelicode_Namayande').focus();*/
        App.CompanyProfile.queryById('txtEmailNamayande').validate();
        App.CompanyProfile.queryById('txtTavalod_Namayande').validate();
        App.CompanyProfile.queryById('txtNameP').validate();
        App.CompanyProfile.queryById('txtFamilyP').validate();
        App.CompanyProfile.queryById('txtNameModir').validate();
        App.CompanyProfile.queryById('txtFamilyModir').validate();
        App.CompanyProfile.queryById('txtMelicode_Modir').validate();
        App.CompanyProfile.queryById('txtTavalod_Modir').validate();
        App.CompanyProfile.queryById('txtShenase').validate();
        App.CompanyProfile.queryById('txtName').validate();
        App.CompanyProfile.queryById('txtNameS').validate();
        App.CompanyProfile.queryById('txtTarikh').validate();
        App.CompanyProfile.queryById('txtShomareSabt').validate();
        App.CompanyProfile.queryById('txtTarikhSabt').validate();
        App.CompanyProfile.queryById('cboComType').validate();
        App.CompanyProfile.queryById('txtCodeEghtesadi').validate();
        App.CompanyProfile.queryById('cboCountry').validate();
        App.CompanyProfile.queryById('cboState').validate();
        App.CompanyProfile.queryById('cboCity').validate();
        App.CompanyProfile.queryById('cboCountryLoc').validate();
        App.CompanyProfile.queryById('cboStateLoc').validate();
        App.CompanyProfile.queryById('cboCityLoc').validate();
        App.CompanyProfile.queryById('txtAddress').validate();
        App.CompanyProfile.queryById('txtCodePosti').validate();
        App.CompanyProfile.queryById('txtTell').validate();
        App.CompanyProfile.queryById('txtCode').validate();
        App.CompanyProfile.queryById('txtMobile').validate();
        App.CompanyProfile.queryById('txtNamabar').validate();
        App.CompanyProfile.queryById('txtPishNamabar').validate();
        App.CompanyProfile.queryById('txtEmail1').validate();
        App.CompanyProfile.queryById('txtTedadKolSaham').validate();
        /*App.CompanyProfile.queryById('txtFaraBoors').validate();*/
        App.CompanyProfile.queryById('txtMablaghSaham').validate();
        /*App.CompanyProfile.queryById('txtCap').validate();*/

        App.CompanyProfile.queryById('txtName_Shakhs').validate();
        App.CompanyProfile.queryById('txtFamily_Shakhs').validate();
        App.CompanyProfile.queryById('txtEkhtesari_Shakhs').validate();
        App.CompanyProfile.queryById('txtCodeEghtesadi_Shakhs').validate();
        App.CompanyProfile.queryById('txtPName_Shakhs').validate();
        App.CompanyProfile.queryById('txtMelicode_Shakhs').validate();
        App.CompanyProfile.queryById('txtShenasname_Shakhs').validate();
        App.CompanyProfile.queryById('txtTavalod_Shakhs').validate();
        App.CompanyProfile.queryById('CboMeliyat_Shakhs').validate();
        /*  App.CompanyProfile.queryById('txtSh_Bime_Shakhs').validate();*/
        App.CompanyProfile.queryById('CheckedMashmolGhanon_Shakhs').validate();
        App.CompanyProfile.queryById('txtEmail_Shakhs').validate();
        App.CompanyProfile.queryById('cboCity_Shakhs').validate();
        App.CompanyProfile.queryById('cboCitySodur_Shakhs').validate();
        App.CompanyProfile.queryById('cboCountry_Shakhs').validate();
        App.CompanyProfile.queryById('cboState_Shakhs').validate();
        App.CompanyProfile.queryById('cboCountrySodur_Shakhs').validate();
        App.CompanyProfile.queryById('cboStateSodur_Shakhs').validate();
        App.CompanyProfile.queryById('cboCountryLoc_Shakhs').validate();
        App.CompanyProfile.queryById('cboStateLoc_Shakhs').validate();
        App.CompanyProfile.queryById('cboCityLoc_Shakhs').validate();
        App.CompanyProfile.queryById('txtAddress_Shakhs').validate();
        App.CompanyProfile.queryById('txtCodePosti_Shakhs').validate();
        App.CompanyProfile.queryById('txtTell_Shakhs').validate();
        App.CompanyProfile.queryById('txtCode_Shakhs').validate();
        App.CompanyProfile.queryById('txtNamabar_Shakhs').validate();
        App.CompanyProfile.queryById('txtPishNamabar_Shakhs').validate();
        App.CompanyProfile.queryById('txtMobile_Shakhs').validate();
        App.CompanyProfile.queryById('txtCodeMojavez').validate();
        if('@ViewBag.SabtState' == "2") {
            App.CompanyProfile.queryById('btnHelp').hide();
        }
        else {
            App.CompanyProfile.queryById('btnHelp').show();
        }

        if ('@ViewBag.FromService' == "1") {
            /*App.CompanyProfile.queryById('txtShomareSabt').setReadOnly(true);
            App.CompanyProfile.queryById('txtTarikhSabt').setReadOnly(true);
            App.CompanyProfile.queryById('txtTarikh').setReadOnly(true);
            App.CompanyProfile.queryById('txtAddress').setReadOnly(true);*/
            var txtCodePosti = App.CompanyProfile.queryById('txtCodePosti');
            txtCodePosti.setReadOnly(true);
            /*txtCodePosti.inputMask.disable();*/
        }
    }

    function LoadCompanyProfile() {

        var As = new Date('@ViewBag.fldAzTarikh');
        var txtTarikhSabt = App.CompanyProfile.queryById('txtTarikhSabt');
        var txtTarikh = App.CompanyProfile.queryById('txtTarikh');
        txtTarikh.maxValue = As;
        txtTarikh.maxText = "تاریخ باید قبل از" + '@ViewBag.fldTarikh' + "باشد";
        txtTarikhSabt.maxValue = As;
        txtTarikhSabt.maxText = "تاریخ باید قبل از" + '@ViewBag.fldTarikh' + "باشد";

        var fldDateB = new Date('@ViewBag.fldDateB');
        var txtBDate = App.CompanyProfile.queryById('txtTavalod_Shakhs');
        txtBDate.maxValue = fldDateB;
        txtBDate.maxText = "حداقل سن 15 سال می باشد.";

        /*App.CompanyProfile.queryById('ShowButton').hide();*/
        var cboPersonType = App.CompanyProfile.queryById('cboPersonType');
        var TypePerson = App.CompanyProfile.queryById('TypePerson');
        var Sherkat_Namayande = App.CompanyProfile.queryById('Sherkat_Namayande');
        var Sherkat_Modir = App.CompanyProfile.queryById('Sherkat_Modir');
        var Sherkat_Info = App.CompanyProfile.queryById('Sherkat_Info');
        var Sherkat_Location = App.CompanyProfile.queryById('Sherkat_Location');
        var Sherkat_File = App.CompanyProfile.queryById('Sherkat_File');
        var Sherkat_File1 = App.CompanyProfile.queryById('Sherkat_File1');
        var lblInfo = App.CompanyProfile.queryById('lblInfo');
        var Sherkat_File2 = App.CompanyProfile.queryById('Sherkat_File2');
        var Sherkat_Saham = App.CompanyProfile.queryById('Sherkat_Saham');
        var Shakhs_Location = App.CompanyProfile.queryById('Shakhs_Location');
        var Shakhs_File = App.CompanyProfile.queryById('Shakhs_File');
        var Shakhs_File1 = App.CompanyProfile.queryById('Shakhs_File1');
        var Shakhs_File2 = App.CompanyProfile.queryById('Shakhs_File2');
        var txtMobileNamayande = App.CompanyProfile.queryById('txtMobileNamayande');
        var lblMobileNamayande = App.CompanyProfile.queryById('lblMobileNamayande');
        var txtEmailNamayande = App.CompanyProfile.queryById('txtEmailNamayande');

        var lblNameP = App.CompanyProfile.queryById('lblNameP');
        var txtNameP = App.CompanyProfile.queryById('txtNameP');
        var lblFamilyP = App.CompanyProfile.queryById('lblFamilyP');
        var txtFamilyP = App.CompanyProfile.queryById('txtFamilyP');



        var Shakhs_Info = App.CompanyProfile.queryById('Shakhs_Info');
        if ('@ViewBag.TypePerson' == 3) {
            TypePerson.show(true);
            Sherkat_Modir.show(true);
            Sherkat_Info.show(true);
            Sherkat_Location.show(true);
            Sherkat_Saham.show(true);
            Shakhs_Info.hide(true);
            Shakhs_Location.hide(true);
            if ('@ViewBag.SabtState' != 2) {
                Shakhs_File.hide(true);
                Sherkat_File.show(true);
                /*txtMobileNamayande.hide();
                lblMobileNamayande.hide();*/
            }
            else {
                Shakhs_File.hide(true);
                Sherkat_File1.hide(true);
                lblInfo.hide(true);
                Sherkat_File2.hide(true);
                App.FileUploadFieldCompany.hide(true);
                App.ShowButton.hide(true);
                /* lblNameP.setMargin("0 0 0 20px");
                 txtNameP.setWidth(180);
                 lblFamilyP.setMargin("0 0 0 20px");
                 txtFamilyP.setWidth(180);*/
                /*txtMobileNamayande.show();
                lblMobileNamayande.show();*/
            }
        }
        else {
            cboPersonType.setValue('@ViewBag.TypePerson');
            TypePerson.hide(true);
            if ('@ViewBag.TypePerson' == 2) {/*حقوقی*/
                Sherkat_Modir.show(true);
                Sherkat_Info.show(true);
                Sherkat_Location.show(true);
                Sherkat_Saham.show(true);
                Shakhs_Info.hide(true);
                Shakhs_Location.hide(true);

                if ('@ViewBag.SabtState' != 2) {
                    Shakhs_File.hide(true);
                    Sherkat_File.show(true);
                    /*txtMobileNamayande.hide();
                    lblMobileNamayande.hide();*/
                }
                else {
                    Shakhs_File.hide(true);
                    Sherkat_File1.hide(true);
                    lblInfo.hide(true);
                    Sherkat_File2.hide(true);
                    App.FileUploadFieldCompany.hide(true);
                    App.ShowButton.hide(true);
                    /*  lblNameP.setMargin("0 0 0 20px");
                      txtNameP.setWidth(180);
                      lblFamilyP.setMargin("0 0 0 20px");
                      txtFamilyP.setWidth(180);*/
                    /* txtMobileNamayande.show();
                     lblMobileNamayande.show();*/
                }
            }
            else {/*حقیقی 1*/
                Sherkat_Modir.hide(true);
                Sherkat_Info.hide(true);
                Sherkat_Location.hide(true);
                Sherkat_Saham.hide(true);

                Shakhs_Info.show(true);
                Shakhs_Location.show(true);

                if ('@ViewBag.SabtState' != 2) {
                    Shakhs_File.show(true);
                    Sherkat_File.hide(true);
                    /* txtMobileNamayande.hide();
                     lblMobileNamayande.hide();*/
                }
                else {
                    Shakhs_File1.hide(true);
                    Shakhs_File2.hide(true);
                    App.FileUploadFieldCompany_Shakhs.hide(true);
                    App.ShowButton_Shakhs.hide(true);
                    Sherkat_File.hide(true);
                    /*lblNameP.setMargin("0 0 0 20px");
                    txtNameP.setWidth(180);
                    lblFamilyP.setMargin("0 0 0 20px");
                    txtFamilyP.setWidth(180);*/
                    /* txtMobileNamayande.show();
                     lblMobileNamayande.show();*/
                }
            }
        }



        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/Details',
            params: {
                FirstId:'@ViewBag.FirstId',
                __RequestVerificationToken: App.CompanyProfile.queryById('AntiForgeryField').getValue()
            },
            success: function (data) {
                if (data.Er == 0) {
                    /*App.CompanyProfile.queryById('ShowButton').show();*/
                    var Id = App.CompanyProfile.queryById('fldId');
                    Id.setValue(data.fldId);
                    var txtTavalod_Namayande = App.CompanyProfile.queryById('txtTavalod_Namayande');
                    txtTavalod_Namayande.setValue(data.Tavalod_Namayande);
                    var txtMelicode_Namayande = App.CompanyProfile.queryById('txtMelicode_Namayande');
                    txtMelicode_Namayande.setValue(data.Melicode_Namayande);
                    var txtNameP = App.CompanyProfile.queryById('txtNameP');
                    txtNameP.setValue(data.fldNameNamayande);
                    var txtFamilyP = App.CompanyProfile.queryById('txtFamilyP');
                    txtFamilyP.setValue(data.fldFamilyNamayande);
                    var cboPersonType = App.CompanyProfile.queryById('cboPersonType');
                    cboPersonType.setValue(data.fldPersonalType);

                    var lblNameP = App.CompanyProfile.queryById('lblNameP');
                    var lblFamilyP = App.CompanyProfile.queryById('lblFamilyP');
                    var lblMobileNamayande = App.CompanyProfile.queryById('lblMobileNamayande');
                    var txtMobileNamayande = App.CompanyProfile.queryById('txtMobileNamayande');
                    txtMobileNamayande.setValue(data.MobileNamayande);
                    var txtEmailNamayande = App.CompanyProfile.queryById('txtEmailNamayande');
                    txtEmailNamayande.setValue(data.EmailNamayande);

                    if ('@ViewBag.SabtState' == 2) {
                        /*lblNameP.setMargin("0 0 0 20px");
                        txtNameP.setWidth(180);
                        lblFamilyP.setMargin("0 0 0 20px");
                        txtFamilyP.setWidth(180);*/
                        /* txtMobileNamayande.show();
                         lblMobileNamayande.show();*/

                    }
                    else {
                        /* lblNameP.setMargin("0 0 0 80px");
                         txtNameP.setWidth(250);
                         lblFamilyP.setMargin("0 0 0 40px");
                         txtFamilyP.setWidth(250);*/
                        /*txtMobileNamayande.hide();
                        lblMobileNamayande.hide();*/
                    }

                    var TypePerson = App.CompanyProfile.queryById('TypePerson');
                    TypePerson.hide(true);
                    /***********************حقوقی*/

                    if (data.fldPersonalType == "2") {
                        var txtNameModir = App.CompanyProfile.queryById('txtNameModir');
                        txtNameModir.setValue(data.fldNameModirAmel);
                        var txtFamilyModir = App.CompanyProfile.queryById('txtFamilyModir');
                        txtFamilyModir.setValue(data.fldFamilyModirAmel);
                        var txtTavalod_Modir = App.CompanyProfile.queryById('txtTavalod_Modir');
                        txtTavalod_Modir.setValue(data.fldTarikhTavalodModir);
                        var txtMelicode_Modir = App.CompanyProfile.queryById('txtMelicode_Modir');
                        txtMelicode_Modir.setValue(data.CodeMeliModir);
                        var txtShenase = App.CompanyProfile.queryById('txtShenase');
                        txtShenase.setValue(data.fldNationalCode);
                        var txtName = App.CompanyProfile.queryById('txtName');
                        txtName.setValue(data.fldFullName);
                        var txtNameS = App.CompanyProfile.queryById('txtNameS');
                        txtNameS.setValue(data.fldNickName);
                        var txtMobile = App.CompanyProfile.queryById('txtMobile');
                        txtMobile.setValue(data.fldMobileModir);
                        var cboCountry = App.CompanyProfile.queryById('cboCountry');
                        cboCountry.setValue(data.fldCountryId);
                        var cboState = App.CompanyProfile.queryById('cboState');
                        cboState.clearValue(); cboState.getStore().load();
                        cboState.setValue(data.fldStateId);
                        App.CompanyProfile.queryById('cboCity').clearValue(); App.CompanyProfile.queryById('cboCity').getStore().load();
                        var cboCity = App.CompanyProfile.queryById('cboCity');
                        cboCity.setValue(data.fldCityId);

                        var cboCountryLoc = App.CompanyProfile.queryById('cboCountryLoc');
                        cboCountryLoc.setValue(data.CountryIdLoc);
                        var cboStateLoc = App.CompanyProfile.queryById('cboStateLoc');
                        cboStateLoc.clearValue(); cboStateLoc.getStore().load();
                        cboStateLoc.setValue(data.StateIdLoc);
                        App.CompanyProfile.queryById('cboCityLoc').clearValue(); App.CompanyProfile.queryById('cboCityLoc').getStore().load();
                        var cboCityLoc = App.CompanyProfile.queryById('cboCityLoc');
                        cboCityLoc.setValue(data.fldShahrId);

                        var txtTarikh = App.CompanyProfile.queryById('txtTarikh');
                        txtTarikh.setValue(data.fldDateTasis);
                        var txtShomareSabt = App.CompanyProfile.queryById('txtShomareSabt');
                        txtShomareSabt.setValue(data.fldSh_Sabt);
                        var txtTarikhSabt = App.CompanyProfile.queryById('txtTarikhSabt');
                        txtTarikhSabt.setValue(data.fldDateSabt);
                        var cboComType = App.CompanyProfile.queryById('cboComType');
                        cboComType.setValue(data.fldTypeCompanyId);
                        var txtCodeEghtesadi = App.CompanyProfile.queryById('txtCodeEghtesadi');
                        txtCodeEghtesadi.setValue(data.fldCodeEghtesadi);
                        var txtAddress = App.CompanyProfile.queryById('txtAddress');
                        txtAddress.setValue(data.fldAddress);
                        var txtCodePosti = App.CompanyProfile.queryById('txtCodePosti');
                        txtCodePosti.setValue(data.fldCodePosti);
                        var txtTell = App.CompanyProfile.queryById('txtTell');
                        txtTell.setValue(data.fldTelphon);
                        var txtCode = App.CompanyProfile.queryById('txtCode');
                        txtCode.setValue(data.fldPishShomare_Tel);
                        var txtNamabar = App.CompanyProfile.queryById('txtNamabar');
                        txtNamabar.setValue(data.fldNamabar);
                        var txtPishNamabar = App.CompanyProfile.queryById('txtPishNamabar');
                        txtPishNamabar.setValue(data.fldPishShomare_Namabar);
                        var txtWeb = App.CompanyProfile.queryById('txtWeb');
                        txtWeb.setValue(data.fldAddressWebSite);
                        var txtEmail1 = App.CompanyProfile.queryById('txtEmail1');
                        txtEmail1.setValue(data.fldEmail1);
                        var txtEmail2 = App.CompanyProfile.queryById('txtEmail2');
                        txtEmail2.setValue(data.fldEmail2);
                        var txtEmail3 = App.CompanyProfile.queryById('txtEmail3');
                        txtEmail3.setValue(data.fldEmail3);
                        var txtTedadKolSaham = App.CompanyProfile.queryById('txtTedadKolSaham');
                        txtTedadKolSaham.setValue(data.fldTedadKolSaham);
                        var txtFaraBoors = App.CompanyProfile.queryById('txtFaraBoors');
                        txtFaraBoors.setValue(data.fldFaraBoors);
                        var txtMablaghSaham = App.CompanyProfile.queryById('txtMablaghSaham');
                        txtMablaghSaham.setValue(data.fldMablaghSaham);
                        ComId = data.fldId;
                        FileId = data.FileId;
                        LogoFileId = data.LogoFileId;
                        MohrFileId = data.MohrFileId;
                        App.CompanyProfile.queryById('ShowButton').setDisabled(false);
                        App.CompanyProfile.queryById('ShowButtonMohr').setDisabled(false);
                    }
                    /********************حقیقی*/
                    if (data.fldPersonalType == "1") {
                        RealPersonLocId = data.RealPersonLocId;
                        var cboCountry_Shakhs = App.CompanyProfile.queryById('cboCountry_Shakhs');
                        cboCountry_Shakhs.setValue(data.fldCountryIdTavalod);
                        var cboState_Shakhs = App.CompanyProfile.queryById('cboState_Shakhs');
                        cboState_Shakhs.clearValue(); cboState_Shakhs.getStore().load();
                        cboState_Shakhs.setValue(data.fldStateIdTavalod);
                        App.CompanyProfile.queryById('cboCity_Shakhs').clearValue(); App.CompanyProfile.queryById('cboCity_Shakhs').getStore().load();
                        var cboCity_Shakhs = App.CompanyProfile.queryById('cboCity_Shakhs');
                        cboCity_Shakhs.setValue(data.fldMahalTavalodId);

                        var cboCountrySodur_Shakhs = App.CompanyProfile.queryById('cboCountrySodur_Shakhs');
                        cboCountrySodur_Shakhs.setValue(data.fldCountryIdSodoor);
                        var cboStateSodur_Shakhs = App.CompanyProfile.queryById('cboStateSodur_Shakhs');
                        cboStateSodur_Shakhs.clearValue(); cboStateSodur_Shakhs.getStore().load();
                        cboStateSodur_Shakhs.setValue(data.fldStateIdSodoor);
                        App.CompanyProfile.queryById('cboCitySodur_Shakhs').clearValue(); App.CompanyProfile.queryById('cboCitySodur_Shakhs').getStore().load();
                        var cboCitySodur_Shakhs = App.CompanyProfile.queryById('cboCitySodur_Shakhs');
                        cboCitySodur_Shakhs.setValue(data.fldMahalSodoorId);

                        var txtName_Shakhs = App.CompanyProfile.queryById('txtName_Shakhs');
                        txtName_Shakhs.setValue(data.fldName);
                        var txtFamily_Shakhs = App.CompanyProfile.queryById('txtFamily_Shakhs');
                        txtFamily_Shakhs.setValue(data.fldFamily);
                        var txtEkhtesari_Shakhs = App.CompanyProfile.queryById('txtEkhtesari_Shakhs');
                        txtEkhtesari_Shakhs.setValue(data.fldNickName);
                        var txtCodeEghtesadi_Shakhs = App.CompanyProfile.queryById('txtCodeEghtesadi_Shakhs');
                        txtCodeEghtesadi_Shakhs.setValue(data.fldCodeEghtesadi);
                        var txtPName_Shakhs = App.CompanyProfile.queryById('txtPName_Shakhs');
                        txtPName_Shakhs.setValue(data.fldFatherName);
                        var txtMelicode_Shakhs = App.CompanyProfile.queryById('txtMelicode_Shakhs');
                        txtMelicode_Shakhs.setValue(data.fldCodeMeli);
                        var txtShenasname_Shakhs = App.CompanyProfile.queryById('txtShenasname_Shakhs');
                        txtShenasname_Shakhs.setValue(data.fldShenasnameNo);
                        var txtTavalod_Shakhs = App.CompanyProfile.queryById('txtTavalod_Shakhs');
                        txtTavalod_Shakhs.setValue(data.fldBDate);
                        var CboMeliyat_Shakhs = App.CompanyProfile.queryById('CboMeliyat_Shakhs');
                        CboMeliyat_Shakhs.setValue(data.fldMeliyat);
                        var txtSh_Bime_Shakhs = App.CompanyProfile.queryById('txtSh_Bime_Shakhs');
                        txtSh_Bime_Shakhs.setValue(data.fldSh_Bime);
                        var CheckedMashmolGhanon_Shakhs = App.CompanyProfile.queryById('CheckedMashmolGhanon_Shakhs');
                        CheckedMashmolGhanon_Shakhs.setValue(data.fldMashmolGhanon);
                        var txtEmail_Shakhs = App.CompanyProfile.queryById('txtEmail_Shakhs');
                        txtEmail_Shakhs.setValue(data.fldEmail);

                        afterEdit = 1;

                        var txtAddress_Shakhs = App.CompanyProfile.queryById('txtAddress_Shakhs');
                        txtAddress_Shakhs.setValue(data.fldAddress);
                        var txtCodePosti_Shakhs = App.CompanyProfile.queryById('txtCodePosti_Shakhs');
                        txtCodePosti_Shakhs.setValue(data.fldCodePosti);
                        var txtTell_Shakhs = App.CompanyProfile.queryById('txtTell_Shakhs');
                        txtTell_Shakhs.setValue(data.fldTelphon);
                        var txtCode_Shakhs = App.CompanyProfile.queryById('txtCode_Shakhs');
                        txtCode_Shakhs.setValue(data.fldPishShomare_Tel);
                        var txtMobile_Shakhs = App.CompanyProfile.queryById('txtMobile_Shakhs');
                        txtMobile_Shakhs.setValue(data.fldMobile);
                        var txtNamabar_Shakhs = App.CompanyProfile.queryById('txtNamabar_Shakhs');
                        txtNamabar_Shakhs.setValue(data.fldNamabar);
                        var txtPishNamabar_Shakhs = App.CompanyProfile.queryById('txtPishNamabar_Shakhs');
                        txtPishNamabar_Shakhs.setValue(data.fldPishShomare_Namabar);
                        var txtWeb_Shakhs = App.CompanyProfile.queryById('txtWeb_Shakhs');
                        txtWeb_Shakhs.setValue(data.fldAddressWebSite);
                        var txtEmail1_Shakhs = App.CompanyProfile.queryById('txtEmail1_Shakhs');
                        txtEmail1_Shakhs.setValue(data.fldEmail1);
                        var txtEmail2_Shakhs = App.CompanyProfile.queryById('txtEmail2_Shakhs');
                        txtEmail2_Shakhs.setValue(data.fldEmail2);
                        var cboCountryLoc_Shakhs = App.CompanyProfile.queryById('cboCountryLoc_Shakhs');
                        cboCountryLoc_Shakhs.setValue(data.fldCountryId);
                        var cboStateLoc_Shakhs = App.CompanyProfile.queryById('cboStateLoc_Shakhs');
                        cboStateLoc_Shakhs.clearValue(); cboStateLoc_Shakhs.getStore().load();
                        cboStateLoc_Shakhs.setValue(data.fldStateId);
                        App.CompanyProfile.queryById('cboCityLoc_Shakhs').clearValue(); App.CompanyProfile.queryById('cboCityLoc_Shakhs').getStore().load();
                        var cboCityLoc_Shakhs = App.CompanyProfile.queryById('cboCityLoc_Shakhs');
                        cboCityLoc_Shakhs.setValue(data.fldCityId);
                        FileId = data.shakhs_FileId;
                        LogoFileId = data.LogoFileId;
                        PersonId = data.fldId;

                        var cboTypeMojavez = App.CompanyProfile.queryById('cboTypeMojavez');
                        cboTypeMojavez.setValue(data.fldTypeMojavezId);
                        var txtCodeMojavez = App.CompanyProfile.queryById('txtCodeMojavez');
                        txtCodeMojavez.setValue(data.fldCodeMojavez);
                        descMojavez = data.fldDescMojavez;
                        if (data.fldDescMojavez != null && data.fldDescMojavez != "")
                            EstelamSenf = 1;
                        var lblCodeMojavez = App.CompanyProfile.queryById('lblCodeMojavez');
                        if (data.fldTypeMojavezId != "1") {
                            txtCodeMojavez.hide();
                            lblCodeMojavez.hide();
                        }

                        App.CompanyProfile.queryById('ShowButton_Shakhs').setDisabled(false);
                        App.CompanyProfile.queryById('ShowButtonLogo').setDisabled(false);
                        App.CompanyProfile.queryById('ShowButtonMohr').setDisabled(false);
                        flagEdit = 0;
                    }
                    if (data.fldUserAccept == null && !data.fldFinal_Sabt) {
                        App.CompanyProfile.queryById('btnSaveGhati').enable();
                        if (data.fldPersonalType == "2") {
                            txtShenase.setReadOnly(false); txtShenase.inputMask.disable();
                            txtName.setReadOnly(false);
                            if ('@ViewBag.FromService' == "0") {
                                txtTarikh.setReadOnly(false);
                                txtTarikhSabt.setReadOnly(false);
                                txtShomareSabt.setReadOnly(false);
                            }
                            cboComType.setReadOnly(false);
                        }
                    }
                    else if (data.fldUserAccept != null && !data.fldFinal_Sabt) {
                        App.CompanyProfile.queryById('btnSaveGhati').enable();
                        if (data.fldPersonalType == "2") {
                            txtShenase.setReadOnly(true); txtShenase.inputMask.disable();
                            txtName.setReadOnly(true);
                            txtTarikh.setReadOnly(true);
                            txtTarikhSabt.setReadOnly(true);
                            txtShomareSabt.setReadOnly(true);
                            cboComType.setReadOnly(true);
                        }
                    }
                        /*if (!data.fldFinal_Sabt) {
                            App.CompanyProfile.queryById('btnSaveGhati').enable();

                        }*/
                    else if (data.fldFinal_Sabt) {
                        if ('@ViewBag.SabtState' == 2) {
                            App.CompanyProfile.queryById('CapthaFieldSet').hide();
                            App.CompanyProfile.queryById('CapthaFieldSet').hide();
                            App.CompanyProfile.queryById('btnSave').hide();
                            App.CompanyProfile.queryById('btnSaveGhati').setText("ذخیره");
                            if ('@ViewBag.IsInClient' == 0)
                                App.CompanyProfile.queryById('btnSaveGhati').setDisabled(true);
                            App.CompanyProfile.queryById('btnEnseraf').setText("خروج");
                            App.CompanyProfile.setTitle("مشخصات عمومی شرکت");
                        }
                        else {
                            App.CompanyProfile.queryById('btnSaveGhati').setDisabled(true);
                            App.CompanyProfile.queryById('btnSave').setDisabled(true);
                        }

                        if (data.fldPersonalType == "2") {/*حقوقی*/

                            if ('@ViewBag.SabtState' == 2) {
                                txtShenase.setReadOnly(true); txtShenase.inputMask.disable(); txtShenase.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtName.setReadOnly(true); txtName.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtNameS.setReadOnly(true); txtNameS.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtTarikh.setReadOnly(true); txtTarikh.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtTarikhSabt.setReadOnly(true); txtTarikhSabt.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtShomareSabt.setReadOnly(true); txtShomareSabt.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                cboComType.setReadOnly(true); cboComType.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtCodeEghtesadi.setReadOnly(true); txtCodeEghtesadi.inputMask.disable(); txtCodeEghtesadi.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                cboCountry.setReadOnly(true); cboCountry.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                cboState.setReadOnly(true); cboState.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                cboCity.setReadOnly(true); cboCity.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                            }
                            else {
                                App.CompanyProfile.queryById('FileUploadFieldCompany').setDisabled(true);
                                App.CompanyProfile.queryById('FileUploadLogo').setDisabled(true);
                                App.CompanyProfile.queryById('FileUploadMohr').setDisabled(true);
                                txtNameP.setReadOnly(true);
                                txtFamilyP.setReadOnly(true);
                                txtNameModir.setReadOnly(true);
                                txtFamilyModir.setReadOnly(true);
                                txtMelicode_Modir.setReadOnly(true);
                                txtTavalod_Modir.setReadOnly(true);
                                txtShenase.setReadOnly(true); txtShenase.inputMask.disable();
                                txtName.setReadOnly(true);
                                txtNameS.setReadOnly(true);
                                txtMobile.setReadOnly(true); txtMobile.inputMask.disable(); txtMobile.setValue(data.fldMobileModir);
                                cboCountry.setReadOnly(true);
                                cboState.setReadOnly(true);
                                cboCity.setReadOnly(true);
                                cboCountryLoc.setReadOnly(true);
                                cboStateLoc.setReadOnly(true);
                                cboCityLoc.setReadOnly(true);
                                txtTarikh.setReadOnly(true);
                                txtShomareSabt.setReadOnly(true);
                                txtTarikhSabt.setReadOnly(true);
                                cboComType.setReadOnly(true);
                                txtCodeEghtesadi.setReadOnly(true); txtCodeEghtesadi.inputMask.disable();
                                txtAddress.setReadOnly(true);
                                txtCodePosti.setReadOnly(true); txtCodePosti.inputMask.disable();
                                txtTell.setReadOnly(true); txtTell.inputMask.disable();
                                txtCode.setReadOnly(true); txtCode.inputMask.disable(); txtCode.setValue(data.fldPishShomare_Tel);
                                txtNamabar.setReadOnly(true); txtNamabar.inputMask.disable();
                                txtPishNamabar.setReadOnly(true); txtPishNamabar.inputMask.disable(); txtPishNamabar.setValue(data.fldPishShomare_Namabar);
                                txtWeb.setReadOnly(true);
                                txtEmail1.setReadOnly(true);
                                txtEmail2.setReadOnly(true);
                                txtEmail3.setReadOnly(true);
                                txtTedadKolSaham.setReadOnly(true);
                                txtFaraBoors.setReadOnly(true);
                                txtMablaghSaham.setReadOnly(true);
                            }
                        }

                        if (data.fldPersonalType == "1") {/*حقیقی*/

                            if ('@ViewBag.SabtState' == 2) {
                                txtName_Shakhs.setReadOnly(true); txtName_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtFamily_Shakhs.setReadOnly(true); txtFamily_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtEkhtesari_Shakhs.setReadOnly(true); txtEkhtesari_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtCodeEghtesadi_Shakhs.setReadOnly(true); txtCodeEghtesadi_Shakhs.inputMask.disable(); txtCodeEghtesadi_Shakhs.setValue(data.fldCodeEghtesadi); txtCodeEghtesadi_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtPName_Shakhs.setReadOnly(true); txtPName_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtMelicode_Shakhs.setReadOnly(true); txtMelicode_Shakhs.inputMask.disable(); txtMelicode_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtShenasname_Shakhs.setReadOnly(true); txtShenasname_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtTavalod_Shakhs.setReadOnly(true); txtTavalod_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                CboMeliyat_Shakhs.setReadOnly(true); CboMeliyat_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                txtSh_Bime_Shakhs.setReadOnly(true); txtSh_Bime_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                CheckedMashmolGhanon_Shakhs.setReadOnly(true);
                                cboCity_Shakhs.setReadOnly(true); cboCity_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                cboCitySodur_Shakhs.setReadOnly(true); cboCitySodur_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                cboCountry_Shakhs.setReadOnly(true); cboCountry_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                cboState_Shakhs.setReadOnly(true); cboState_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                cboCountrySodur_Shakhs.setReadOnly(true); cboCountrySodur_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                                cboStateSodur_Shakhs.setReadOnly(true); cboStateSodur_Shakhs.setFieldStyle("background-image:none;background-color:#dfe8f6;");
                            }
                            else {
                                
                                App.CompanyProfile.queryById('FileUploadFieldCompany_Shakhs').setDisabled(true);
                                App.CompanyProfile.queryById('FileUploadLogo_Shakhs').setDisabled(true);

                                txtNameP.setReadOnly(true);
                                txtFamilyP.setReadOnly(true);
                                txtName_Shakhs.setReadOnly(true);
                                txtFamily_Shakhs.setReadOnly(true);
                                txtEkhtesari_Shakhs.setReadOnly(true);
                                txtCodeEghtesadi_Shakhs.setReadOnly(true); txtCodeEghtesadi_Shakhs.inputMask.disable(); txtCodeEghtesadi_Shakhs.setValue(data.fldCodeEghtesadi);
                                txtPName_Shakhs.setReadOnly(true);
                                txtMelicode_Shakhs.setReadOnly(true); txtMelicode_Shakhs.inputMask.disable();
                                txtShenasname_Shakhs.setReadOnly(true);
                                txtTavalod_Shakhs.setReadOnly(true);
                                CboMeliyat_Shakhs.setReadOnly(true);
                                txtSh_Bime_Shakhs.setReadOnly(true);
                                CheckedMashmolGhanon_Shakhs.setReadOnly(true);
                                txtEmail_Shakhs.setReadOnly(true);
                                cboCity_Shakhs.setReadOnly(true);
                                cboCitySodur_Shakhs.setReadOnly(true);
                                cboCountry_Shakhs.setReadOnly(true);
                                cboState_Shakhs.setReadOnly(true);
                                cboCountrySodur_Shakhs.setReadOnly(true);
                                cboStateSodur_Shakhs.setReadOnly(true);
                                cboCountryLoc_Shakhs.setReadOnly(true);
                                cboStateLoc_Shakhs.setReadOnly(true);
                                cboCityLoc_Shakhs.setReadOnly(true);
                                txtAddress_Shakhs.setReadOnly(true);
                                txtCodePosti_Shakhs.setReadOnly(true); txtCodePosti_Shakhs.inputMask.disable();
                                txtTell_Shakhs.setReadOnly(true); txtTell_Shakhs.inputMask.disable();
                                txtCode_Shakhs.setReadOnly(true); txtCode_Shakhs.inputMask.disable(); txtCode_Shakhs.setValue(data.fldPishShomare_Tel);
                                txtMobile_Shakhs.setReadOnly(true); txtMobile_Shakhs.inputMask.disable(); txtMobile_Shakhs.setValue(data.fldMobile);
                                txtNamabar_Shakhs.setReadOnly(true); txtNamabar_Shakhs.inputMask.disable();
                                txtPishNamabar_Shakhs.setReadOnly(true); txtPishNamabar_Shakhs.inputMask.disable(); txtPishNamabar_Shakhs.setValue(data.fldPishShomare_Namabar);
                                txtWeb_Shakhs.setReadOnly(true);
                                txtEmail1_Shakhs.setReadOnly(true);
                                txtEmail2_Shakhs.setReadOnly(true);
                            }
                        }

                    }
                    ChangePersonType(2);
                    if ('@ViewBag.SabtState' == 2) {
                        Sherkat_Modir.hide();

                    }

                }
                else {
                    FileId = 0;
                    LogoFileId = 0;
                    MohrFileId = 0;
                    App.CompanyProfile.queryById('ShowButton').setDisabled(true);
                    App.CompanyProfile.queryById('btnSaveGhati').setDisabled(true);
                    App.CompanyProfile.queryById('ShowButtonLogo').setDisabled(true);
                    App.CompanyProfile.queryById('ShowButtonMohr').setDisabled(true);

                    var cboTypeMojavez = App.CompanyProfile.queryById('cboTypeMojavez');
                    cboTypeMojavez.setValue("1");
                }
            }
        });
    }
    var showFile = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        if (v) {
            if (v.split('.').pop().toLowerCase() == "pdf") {
                if (document.getElementById(id).files[0].size <= 102400000) {
                    sizee = 1;
                }
                showProgressBar();
                Mojaz = 1;
                var el = Ext.get('fi-button-file');
                el.update('<b>فایل انتخاب شده:</b> ' + v);

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
        }
    };
    var showFileLogo = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        if (v) {
            if (v.split('.').pop().toLowerCase() == "jpg" || v.split('.').pop().toLowerCase() == "jpeg" || v.split('.').pop().toLowerCase() == "png") {
                if (document.getElementById(id).files[0].size <= 102400000) {
                    sizee3 = 1;
                }
                showProgressBar();
                Mojaz3 = 1;
                var el = Ext.get('fi-button-Logo');
                el.update('<b>فایل انتخاب شده:</b> ' + v);

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
        }
    };
    var showFileMohr = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        if (v) {
            if (v.split('.').pop().toLowerCase() == "jpg" || v.split('.').pop().toLowerCase() == "jpeg" || v.split('.').pop().toLowerCase() == "png") {
                if (document.getElementById(id).files[0].size <= 102400000) {
                    sizee4 = 1;
                }
                showProgressBar();
                Mojaz4 = 1;
                var el = Ext.get('fi-button-Mohr');
                el.update('<b>فایل انتخاب شده:</b> ' + v);

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
        }
    };
    var showFileLogo_Shakhs = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        if (v) {
            if (v.split('.').pop().toLowerCase() == "jpg" || v.split('.').pop().toLowerCase() == "jpeg" || v.split('.').pop().toLowerCase() == "png") {
                if (document.getElementById(id).files[0].size <= 102400000) {
                    sizee3 = 1;
                }
                showProgressBar();
                Mojaz3 = 1;
                var el = Ext.get('fi-button-Logo-shakhs');
                el.update('<b>فایل انتخاب شده:</b> ' + v);

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
        }
    };


    var showFile_Shakhs = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        if (v) {
            if (v.split('.').pop().toLowerCase() == "pdf") {
                if (document.getElementById(id).files[0].size <= 102400000) {
                    sizee2 = 1;
                }
                showProgressBar_Shakhs();
                Mojaz2 = 1;
                var el = Ext.get('fi-button-file_Shakhs');
                el.update('<b>فایل انتخاب شده:</b> ' + v);

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
        }
    };


    function ShowPic() {
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/HaveFile',
            params: {
                Id: ComId
            },
            success: function (data) {
                if (data.HaveFile) {
                    /*window.location.href = 'Url.Content("~/CompanyProfile/Download?id=")' + ComId + "&state=1";*/
                    $.ajax({
                        type: "POST",
                        dataType: 'native',
                        url: "/CompanyProfile/Download",
                        xhrFields: {
                            responseType: 'blob'
                        },
                        data: {
                            id: ComId,
                            state: 1
                        },
                        success: function (blob) {
                            x = blob;
                            var link = document.createElement('a');
                            link.href = window.URL.createObjectURL(blob);
                            link.download = "DownloadFile";
                            link.click();
                        }
                    });
                }
                else {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "فایل مورد نظر انتخاب نشده است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });
    }
    function ShowPic_Shakhs() {
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/HaveFile',
            params: {
                Id: PersonId
            },
            success: function (data) {
                if (data.HaveFile) {
                    /*window.location.href = 'Url.Content("~/CompanyProfile/Download?id=")' + PersonId + "&state=0";*/
                    $.ajax({
                        type: "POST",
                        dataType: 'native',
                        url: "/CompanyProfile/Download",
                        xhrFields: {
                            responseType: 'blob'
                        },
                        data: {
                            id: PersonId,
                            state: 0
                        },
                        success: function (blob) {
                            x = blob;
                            var link = document.createElement('a');
                            link.href = window.URL.createObjectURL(blob);
                            link.download = "DownloadFile";
                            link.click();
                        }
                    });
                }
                else {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "فایل مورد نظر انتخاب نشده است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });
    }
    function ShowPicLogo(s) {
        var fId = ComId;
        if (s == 2)
            fId = PersonId;
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/HaveFileLogo',
            params: {
                Id: fId
            },
            success: function (data) {
                if (data.HaveFile) {
                    /*window.location.href = 'Url.Content("~/CompanyProfile/DownloadLogo?id=")' + fId + "&state=" + s;*/
                    $.ajax({
                        type: "POST",
                        dataType: 'native',
                        url: "/CompanyProfile/DownloadLogo",
                        xhrFields: {
                            responseType: 'blob'
                        },
                        data: {
                            id: fId,
                            state: s
                        },
                        success: function (blob) {
                            x = blob;
                            var link = document.createElement('a');
                            link.href = window.URL.createObjectURL(blob);
                            link.download = "DownloadFile";
                            link.click();
                        }
                    });
                }
                else {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "فایل مورد نظر انتخاب نشده است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });
    }
    function ShowPicMohr(s) {
        var fId = ComId;
        if (s == 2)
            fId = PersonId;
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/HaveFileMohr',
            params: {
                Id: fId
            },
            success: function (data) {
                if (data.HaveFile) {
                    /*window.location.href = 'Url.Content("~/CompanyProfile/DownloadLogo?id=")' + fId + "&state=" + s;*/
                    $.ajax({
                        type: "POST",
                        dataType: 'native',
                        url: "/CompanyProfile/DownloadMohr",
                        xhrFields: {
                            responseType: 'blob'
                        },
                        data: {
                            id: fId,
                            state: s
                        },
                        success: function (blob) {
                            x = blob;
                            var link = document.createElement('a');
                            link.href = window.URL.createObjectURL(blob);
                            link.download = "DownloadFile";
                            link.click();
                        }
                    });
                }
                else {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "فایل مورد نظر انتخاب نشده است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });
    }
    function ExitLogon() {
        if ('@ViewBag.SabtState' == 2)
            App.CompanyProfile.destroy();
        else
            Ext.net.DirectMethod.request({
                url: '/Home/LogOut',
                success: function (data) {
                }
            });
    }
    function LoadCaptha() {
        var originalSrc = '@Url.Content("~/CompanyProfile/generateCaptcha")';
        var antiCachePart = (new Date()).getTime();
        var newSrc = originalSrc + '?dc=' + antiCachePart;
        $("#m_imgCaptcha").attr('src', newSrc);

        /*Ext.getCmp('ShowButton').getEl().on('click', function () {
            ShowPic();
        });*/
    }

    function SaveCompanyProfile(status) {

        var fldFinal_Sabt = false;
        if (status == 1)
            fldFinal_Sabt = true;
        if ('@ViewBag.SabtState' == 2) {
            fldFinal_Sabt = true;
        }

        var txtTavalod_Namayande = App.CompanyProfile.queryById('txtTavalod_Namayande');
        var txtMelicode_Namayande = App.CompanyProfile.queryById('txtMelicode_Namayande');
        var txtNameP = App.CompanyProfile.queryById('txtNameP');
        var txtFamilyP = App.CompanyProfile.queryById('txtFamilyP');
        var txtNameModir = App.CompanyProfile.queryById('txtNameModir');
        var txtFamilyModir = App.CompanyProfile.queryById('txtFamilyModir');
        var txtMelicode_Modir = App.CompanyProfile.queryById('txtMelicode_Modir');
        var txtTavalod_Modir = App.CompanyProfile.queryById('txtTavalod_Modir');
        var txtShenase = App.CompanyProfile.queryById('txtShenase');
        var txtName = App.CompanyProfile.queryById('txtName');
        var txtNameS = App.CompanyProfile.queryById('txtNameS');
        var txtMobile = App.CompanyProfile.queryById('txtMobile');
        var Id = App.CompanyProfile.queryById('fldId');
        var cboCountry = App.CompanyProfile.queryById('cboCountry');
        var cboState = App.CompanyProfile.queryById('cboState');
        var cboCity = App.CompanyProfile.queryById('cboCity');
        var txtTarikh = App.CompanyProfile.queryById('txtTarikh');
        var txtShomareSabt = App.CompanyProfile.queryById('txtShomareSabt');
        var txtTarikhSabt = App.CompanyProfile.queryById('txtTarikhSabt');
        var cboComType = App.CompanyProfile.queryById('cboComType');
        var txtCodeEghtesadi = App.CompanyProfile.queryById('txtCodeEghtesadi');
        var cboCountryLoc = App.CompanyProfile.queryById('cboCountryLoc');
        var cboStateLoc = App.CompanyProfile.queryById('cboStateLoc');
        var cboCityLoc = App.CompanyProfile.queryById('cboCityLoc');
        var txtAddress = App.CompanyProfile.queryById('txtAddress');
        var txtCodePosti = App.CompanyProfile.queryById('txtCodePosti');
        var txtTell = App.CompanyProfile.queryById('txtTell');
        var txtCode = App.CompanyProfile.queryById('txtCode');
        var txtNamabar = App.CompanyProfile.queryById('txtNamabar');
        var txtTedadKolSaham = App.CompanyProfile.queryById('txtTedadKolSaham');
        var txtFaraBoors = App.CompanyProfile.queryById('txtFaraBoors');
        var txtMablaghSaham = App.CompanyProfile.queryById('txtMablaghSaham');
        var txtPishNamabar = App.CompanyProfile.queryById('txtPishNamabar');
        var txtWeb = App.CompanyProfile.queryById('txtWeb');
        var txtEmail1 = App.CompanyProfile.queryById('txtEmail1');
        var txtEmail2 = App.CompanyProfile.queryById('txtEmail2');
        var txtEmail3 = App.CompanyProfile.queryById('txtEmail3');
        /*var txtCap = App.CompanyProfile.queryById('txtCap');*/
        var txtCap = $('#txtCap').val();

        var txtName_Shakhs = App.CompanyProfile.queryById('txtName_Shakhs');
        var txtFamily_Shakhs = App.CompanyProfile.queryById('txtFamily_Shakhs');
        var txtEkhtesari_Shakhs = App.CompanyProfile.queryById('txtEkhtesari_Shakhs');
        var txtCodeEghtesadi_Shakhs = App.CompanyProfile.queryById('txtCodeEghtesadi_Shakhs');
        var txtPName_Shakhs = App.CompanyProfile.queryById('txtPName_Shakhs');
        var txtMelicode_Shakhs = App.CompanyProfile.queryById('txtMelicode_Shakhs');
        var txtShenasname_Shakhs = App.CompanyProfile.queryById('txtShenasname_Shakhs');
        var txtTavalod_Shakhs = App.CompanyProfile.queryById('txtTavalod_Shakhs');
        var CboMeliyat_Shakhs = App.CompanyProfile.queryById('CboMeliyat_Shakhs');
        var txtSh_Bime_Shakhs = App.CompanyProfile.queryById('txtSh_Bime_Shakhs');
        var CheckedMashmolGhanon_Shakhs = App.CompanyProfile.queryById('CheckedMashmolGhanon_Shakhs');
        var txtEmail_Shakhs = App.CompanyProfile.queryById('txtEmail_Shakhs');
        var cboCity_Shakhs = App.CompanyProfile.queryById('cboCity_Shakhs');
        var cboCitySodur_Shakhs = App.CompanyProfile.queryById('cboCitySodur_Shakhs');
        var cboPersonType = App.CompanyProfile.queryById('cboPersonType');
        var cboCountryLoc_Shakhs = App.CompanyProfile.queryById('cboCountryLoc_Shakhs');
        var cboStateLoc_Shakhs = App.CompanyProfile.queryById('cboStateLoc_Shakhs');
        var cboCityLoc_Shakhs = App.CompanyProfile.queryById('cboCityLoc_Shakhs');
        var txtAddress_Shakhs = App.CompanyProfile.queryById('txtAddress_Shakhs');
        var txtCodePosti_Shakhs = App.CompanyProfile.queryById('txtCodePosti_Shakhs');
        var txtTell_Shakhs = App.CompanyProfile.queryById('txtTell_Shakhs');
        var txtCode_Shakhs = App.CompanyProfile.queryById('txtCode_Shakhs');
        var txtMobile_Shakhs = App.CompanyProfile.queryById('txtMobile_Shakhs');
        var txtNamabar_Shakhs = App.CompanyProfile.queryById('txtNamabar_Shakhs');
        var txtPishNamabar_Shakhs = App.CompanyProfile.queryById('txtPishNamabar_Shakhs');
        var txtWeb_Shakhs = App.CompanyProfile.queryById('txtWeb_Shakhs');
        var txtEmail1_Shakhs = App.CompanyProfile.queryById('txtEmail1_Shakhs');
        var txtEmail2_Shakhs = App.CompanyProfile.queryById('txtEmail2_Shakhs');
        var txtMobileNamayande = App.CompanyProfile.queryById('txtMobileNamayande');
        var txtEmailNamayande = App.CompanyProfile.queryById('txtEmailNamayande');


        var cboTypeMojavez = App.CompanyProfile.queryById('cboTypeMojavez');
        var txtCodeMojavez = App.CompanyProfile.queryById('txtCodeMojavez');

        var er = false;

        if (txtEmailNamayande.validate() == false) {
            er = true;
        }
        if (txtMobileNamayande.validate() == false) {
            er = true;
        }
        if (txtTavalod_Namayande.validate() == false) {
            er = true;
        }
        if (txtMelicode_Namayande.validate() == false) {
            er = true;
        }
        if (txtNameP.validate() == false) {
            er = true;
        }
        if (txtFamilyP.validate() == false) {
            er = true;
        }
        if (cboPersonType.getValue() == 2) {/*حقوقی*/

            if (txtNameModir.validate() == false) {
                er = true;
            }
            if (txtFamilyModir.validate() == false) {
                er = true;
            }
            if (txtTavalod_Modir.validate() == false) {
                er = true;
            }
            if (txtMelicode_Modir.validate() == false) {
                er = true;
            }
            if (txtShenase.validate() == false) {
                er = true;
                alert("لطفاً شناسه ملی شرکت را وارد نمایید.");
                return;
            }
            if (!checkShenaseMeli(txtShenase.getValue())) {
                alert("شناسه ملی نامعتبراست.");
                er = true;
                return;
            }
            if (txtName.validate() == false) {
                er = true;
            }
            if (txtNameS.validate() == false) {
                er = true;
            }
            if (cboCountry.validate() == false) {
                er = true;
            }
            if (cboState.validate() == false) {
                er = true;
            }
            if (cboCity.validate() == false) {
                er = true;
            }
            if (txtTarikh.validate() == false) {
                er = true;
            }
            if (txtShomareSabt.validate() == false) {
                er = true;
            }
            if (txtTarikhSabt.validate() == false) {
                er = true;
            }
            if (cboComType.validate() == false) {
                er = true;
            }
            if (txtCodeEghtesadi.validate() == false) {
                er = true;
                alert("لطفاً کد اقتصادی شرکت را وارد نمایید.");
                return;
            }
            if (cboCountryLoc.validate() == false) {
                er = true;
            }
            if (cboStateLoc.validate() == false) {
                er = true;
            }
            if (cboCityLoc.validate() == false) {
                er = true;
            }
            if (txtAddress.validate() == false) {
                er = true;
            }
            if (txtCodePosti.validate() == false) {
                er = true;
                alert("لطفاً کد پستی شرکت را وارد نمایید.");
                return;
            }

            if (txtTell.validate() == false) {
                er = true;
                alert("لطفاً شماره تلفن شرکت را وارد نمایید.");
                return;
            }
            if (txtCode.validate() == false) {
                er = true;
                alert("لطفاً پیش شماره تلفن شرکت را وارد نمایید.");
                return;
            }
            if (txtNamabar.validate() == false) {
                er = true;
                alert("لطفاً شماره نمابر شرکت را وارد نمایید.");
                return;
            }
            if (txtPishNamabar.validate() == false) {
                er = true;
                alert("لطفاً پیش شماره نمابر شرکت را وارد نمایید.");
                return;
            }
            if (txtMobile.validate() == false) {
                er = true;
                alert("لطفاً تلفن همراه مدیرعامل را وارد نمایید.");
                return;
            }
            /*if (txtWeb.validate() == false) {
                er = true;
            }*/
            if (txtEmail1.validate() == false) {
                er = true;
            }
            if (txtTedadKolSaham.validate() == false) {
                er = true;
            }
            /*   if (txtFaraBoors.validate() == false) {
                   er = true;
               }*/
            if (txtMablaghSaham.validate() == false) {
                er = true;
                alert("لطفاً مبلغ هر سهم را وارد نمایید.");
                return;
            }
        }
        else {
            if (txtCodeEghtesadi_Shakhs.validate() == false) {
                er = true;
                alert("لطفاً کد اقتصادی شخص را وارد نمایید.");
                return;
            }
            if (txtCodePosti_Shakhs.validate() == false) {
                er = true;
                alert("لطفاً کد پستی محل فعالیت را وارد نمایید.");
                return;
            }

            if (txtTell_Shakhs.validate() == false) {
                er = true;
                alert("لطفاً شماره تلفن محل فعالیت را وارد نمایید.");
                return;
            }
            if (txtCode_Shakhs.validate() == false) {
                er = true;
                alert("لطفاً پیش شماره تلفن محل فعالیت را وارد نمایید.");
                return;
            }
            if (txtNamabar_Shakhs.validate() == false) {
                er = true;
                alert("لطفاً شماره نمابر محل فعالیت را وارد نمایید.");
                return;
            }
            if (txtPishNamabar_Shakhs.validate() == false) {
                er = true;
                alert("لطفاً پیش شماره نمابر محل فعالیت را وارد نمایید.");
                return;
            }
            if (txtMobile_Shakhs.validate() == false) {
                er = true;
                alert("لطفاً تلفن همراه را وارد نمایید.");
                return;
            }
            if (txtName_Shakhs.validate() == false) {
                er = true;
            }
            if (txtFamily_Shakhs.validate() == false) {
                er = true;
            }
            if (txtEkhtesari_Shakhs.validate() == false) {
                er = true;
            }
            if (txtPName_Shakhs.validate() == false) {
                er = true;
            }
            if (txtMelicode_Shakhs.validate() == false) {
                er = true;
                alert("لطفاً کد ملی شخص را وارد نمایید.");
                return;
            }
            if (txtShenasname_Shakhs.validate() == false) {
                er = true;
            }
            if (txtTavalod_Shakhs.validate() == false) {
                er = true;
            }
            if (CboMeliyat_Shakhs.validate() == false) {
                er = true;
            }
            /* if (txtSh_Bime_Shakhs.validate() == false) {
                 er = true;
             }*/
            if (CheckedMashmolGhanon_Shakhs.validate() == false) {
                er = true;
            }
            if (txtEmail_Shakhs.validate() == false) {
                er = true;
            }
            if (cboCity_Shakhs.validate() == false) {
                er = true;
            }
            if (cboCitySodur_Shakhs.validate() == false) {
                er = true;
            }
            if (cboTypeMojavez.validate() == false) {
                er = true;
            }
            /*if (cboTypeMojavez.getValue()==1) {
                if (txtCodeMojavez.validate() == false) {
                    er = true;
                }
                if (EstelamSenf == 0) {
                    Ext.MessageBox.show({
                        title: 'خطا',
                        msg: 'استعلام پروانه کسب ضروری است.',
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }
            }*/

        }
        if (txtCap == "" && '@ViewBag.SabtState' == 1) {
            er = true;
            alert("لطفا کد امنیتی را وارد نمایید.");
        }


        if (er == true)
            return;

        var Em = txtEmail1.getValue();
        var T = false;
        if (cboPersonType.getValue() == 1) {/*حقیقی*/
            Em = txtEmail_Shakhs.getValue();
            T = true;
        }

        App.CompanyProfile.body.mask('در حال ذخیره سازی...');
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/checkEmail',
            params: {
                Email: Em,
                EmailNamayande: txtEmailNamayande.getValue()
            },
            success: function (data) {

                if (data.valid == false) {
                    Ext.MessageBox.show({
                        title: 'خطا',
                        msg: 'آدرس ایمیل نامعتبر است.',
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
                else if (data.validNamayande == false) {
                    Ext.MessageBox.show({
                        title: 'خطا',
                        msg: 'آدرس ایمیل نماینده نامعتبر است.',
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
                else {
                    App.CompanyProfile.body.mask('در حال ذخیره سازی...');
                    Ext.net.DirectMethod.request({
                        url: '/CompanyProfile/checkCap',
                        params: {
                            Cap: txtCap
                        },
                        success: function (data) {

                            if (data.Err == 1 && '@ViewBag.SabtState' == 1) {
                                App.CompanyProfile.body.mask().hide();
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: Ext.MessageBox.ERROR,
                                    buttons: Ext.MessageBox.OK
                                });
                                LoadCaptha();
                            }
                            else {
                                if ('@ViewBag.SabtState' == 1)
                                    App.CompanyProfile.queryById('btnSave').disable();
                                var SaveList = {
                                    RealPersonLocId: 0,
                                    fldId: Id.getValue(),
                                    fldNationalCode: txtShenase.getValue(),
                                    fldFullName: txtName.getValue(),
                                    fldNickName: txtNameS.getValue(),
                                    fldCityId: cboCity.getValue(),
                                    fldDateTasis: txtTarikh.rawValue,
                                    fldSh_Sabt: txtShomareSabt.getValue(),
                                    fldDateSabt: txtTarikhSabt.rawValue,
                                    fldTypeCompanyId: cboComType.getValue(),
                                    fldCodeEghtesadi: txtCodeEghtesadi.getValue(),
                                    fldShahrId: cboCityLoc.getValue(),
                                    fldAddress: txtAddress.getValue(),
                                    fldCodePosti: txtCodePosti.getValue(),
                                    fldTelphon: txtTell.getValue(),
                                    fldPishShomare_Tel: txtCode.getValue(),
                                    fldMobileModir: txtMobile.getValue(),
                                    fldNamabar: txtNamabar.getValue(),
                                    fldPishShomare_Namabar: txtPishNamabar.getValue(),
                                    fldAddressWebSite: txtWeb.getValue(),
                                    fldEmail1: txtEmail1.getValue(),
                                    fldEmail2: txtEmail2.getValue(),
                                    fldEmail3: txtEmail3.getValue(),
                                    fldTedadKolSaham: txtTedadKolSaham.getValue(),
                                    fldFaraBoors: txtFaraBoors.getValue(),
                                    fldMablaghSaham: txtMablaghSaham.getValue().replace(',', '').replace(',', '').replace(',', '').replace(',', '').replace(',', ''),
                                    fldNameModir: txtNameModir.getValue(),
                                    fldFamilyModir: txtFamilyModir.getValue(),
                                    fldCodeMeli: txtMelicode_Modir.getValue(),
                                    fldTarikhTavalod: txtTavalod_Modir.rawValue,

                                    FileId: FileId,
                                    LogoFileId: LogoFileId,
                                    MohrFileId: MohrFileId,
                                    TavalodNamayande: txtTavalod_Namayande.rawValue,
                                    MeliNamayande: txtMelicode_Namayande.getValue(),
                                    NameNamayande: txtNameP.getValue(),
                                    FamilyNamayande: txtFamilyP.getValue(),
                                    Mobile: txtMobileNamayande.getValue(),
                                    Email: txtEmailNamayande.getValue(),
                                    captcha: txtCap,
                                    fldFinal_Sabt: fldFinal_Sabt,
                                    fldPersonalType: T,
                                    fldEstelam: IsEstelam,
                                    fldEstelamNamayande: IsEstelamNamayande,
                                    fldFirstRegisterUser: '@ViewBag.FirstId',
                                    __RequestVerificationToken: App.CompanyProfile.queryById('AntiForgeryField').getValue()
                                };
                                if (T) {
                                    SaveList = {
                                        RealPersonLocId: RealPersonLocId,
                                        fldId: Id.getValue(),/*fldCompanyPersonalId*/
                                        fldName: txtName_Shakhs.getValue(),
                                        fldFamily: txtFamily_Shakhs.getValue(),
                                        fldFatherName: txtPName_Shakhs.getValue(),
                                        fldCodeMeli: txtMelicode_Shakhs.getValue(),
                                        fldShenasnameNo: txtShenasname_Shakhs.getValue(),
                                        fldBDate: txtTavalod_Shakhs.rawValue,
                                        fldMeliyat: CboMeliyat_Shakhs.getValue(),
                                        fldSh_Bime: txtSh_Bime_Shakhs.getValue(),
                                        fldEmail: txtEmail_Shakhs.getValue(),
                                        fldMashmolGhanon: CheckedMashmolGhanon_Shakhs.getValue(),
                                        fldMahalTavalodId: cboCity_Shakhs.getValue(),
                                        fldMahalSodoorId: cboCitySodur_Shakhs.getValue(),
                                        fldCityId: cboCityLoc_Shakhs.getValue(),
                                        fldAddress: txtAddress_Shakhs.getValue(),
                                        fldCodePosti: txtCodePosti_Shakhs.getValue(),
                                        fldTelphon: txtTell_Shakhs.getValue(),
                                        fldPishShomare_Tel: txtCode_Shakhs.getValue(),
                                        fldMobile: txtMobile_Shakhs.getValue(),
                                        fldNamabar: txtNamabar_Shakhs.getValue(),
                                        fldPishShomare_Namabar: txtPishNamabar_Shakhs.getValue(),
                                        fldAddressWebSite: txtWeb_Shakhs.getValue(),
                                        fldEmail1: txtEmail1_Shakhs.getValue(),
                                        fldEmail2: txtEmail2_Shakhs.getValue(),
                                        fldNickName: txtEkhtesari_Shakhs.getValue(),
                                        fldCodeEghtesadi: txtCodeEghtesadi_Shakhs.getValue(),

                                        FileId: FileId,
                                        LogoFileId: LogoFileId,
                                        MohrFileId: MohrFileId,
                                        fldPersonalType: T,
                                        TavalodNamayande: txtTavalod_Namayande.rawValue,
                                        MeliNamayande: txtMelicode_Namayande.getValue(),
                                        NameNamayande: txtNameP.getValue(),
                                        FamilyNamayande: txtFamilyP.getValue(),
                                        Mobile: txtMobileNamayande.getValue(),
                                        Email: txtEmailNamayande.getValue(),
                                        fldFinalSabt: fldFinal_Sabt,
                                        captcha: txtCap,
                                        fldTypeMojavezId: cboTypeMojavez.getValue(),
                                        fldCodeMojavez: txtCodeMojavez.getValue(),
                                        fldDescMojavez: descMojavez,
                                        fldEstelam: IsEstelam,
                                        fldEstelamNamayande: IsEstelamNamayande,
                                        fldFirstRegisterUser:'@ViewBag.FirstId',
                                        __RequestVerificationToken: App.CompanyProfile.queryById('AntiForgeryField').getValue()
                                    };
                                }
                                /*App.CompanyProfile.body.mask('در حال ذخیره سازی...');*/
                                Ext.net.DirectMethod.request({
                                    url: '/CompanyProfile/Save',
                                    params: SaveList,
                                    success: function (data) {
                                        if (data.Err == 1) {
                                            Ext.MessageBox.show({
                                                title: data.MsgTitle,
                                                msg: data.Msg,
                                                icon: Ext.MessageBox.ERROR,
                                                buttons: Ext.MessageBox.OK
                                            });
                                            App.CompanyProfile.body.mask().hide();
                                            if ('@ViewBag.SabtState' == 1)
                                                App.CompanyProfile.queryById('btnSave').enable();
                                            Ext.get('fi-button-file_Shakhs').update('');
                                            Ext.get('fi-button-file').update('');
                                        }
                                        else {
                                            FileId = data.IDFile;
                                            LogoFileId = data.IDLogoFile;
                                            MohrFileId = data.IDMohrFile;
                                            App.CompanyProfile.queryById('fldId').setValue(data.Id);
                                            App.CompanyProfile.queryById('ShowButton').setDisabled(false);
                                            App.CompanyProfile.queryById('ShowButtonLogo').setDisabled(false);
                                            App.CompanyProfile.queryById('ShowButtonMohr').setDisabled(false);

                                            if (status == 1 && '@ViewBag.SabtState' == 1) {
                                                Ext.net.DirectMethod.request({
                                                    url: '/Faces/CompanyProfile/PrintForm',
                                                    success: function (data) {
                                                        App.CompanyProfile.body.mask().hide();
                                                    }
                                                });
                                                App.CompanyProfile.destroy();
                                            }
                                            else if (status != 1 && '@ViewBag.SabtState' == 1) {
                                                App.CompanyProfile.queryById('btnSave').enable();
                                                Ext.MessageBox.show({
                                                    Name: "ذخیره موفق",
                                                    msg: "ثبت موقت اطلاعات با موفقیت انجام شد.",
                                                    icon: Ext.MessageBox.INFO,
                                                    buttons: Ext.MessageBox.OK
                                                });
                                                App.CompanyProfile.queryById('btnSaveGhati').enable();
                                                App.CompanyProfile.body.mask().hide();
                                            }
                                            else if ('@ViewBag.SabtState' == 2) {
                                                Ext.MessageBox.show({
                                                    Name: "ذخیره موفق",
                                                    msg: "ذخیره با موفقیت انجام شد.",
                                                    icon: Ext.MessageBox.INFO,
                                                    buttons: Ext.MessageBox.OK
                                                });
                                                App.CompanyProfile.body.mask().hide();
                                            }
                                        }
                                        /* App.CompanyProfile.queryById('btnSave').enable();*/
                                    },
                                    failure: function (data) {
                                        App.CompanyProfile.queryById('btnSave').enable();
                                    }
                                });
                            }
                            /*App.CompanyProfile.body.mask().hide();*/
                        }
                    });
                }
                /* App.CompanyProfile.body.mask().hide();*/
            }
        });
    }

    function checkEmail() {
        var txtEmail = App.CompanyProfile.queryById('txtEmail1');
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/checkEmail',
            params: {
                Email: txtEmail.getValue()
            },
            success: function (data) {

                if (data.valid == false) {
                    Ext.MessageBox.show({
                        title: 'خطا',
                        msg: 'آدرس ایمیل نامعتبر است.',
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }
            }
        });
    }
    function ChangePersonType(state) {
        var cboPersonType = App.CompanyProfile.queryById('cboPersonType');
        var Sherkat_Namayande = App.CompanyProfile.queryById('Sherkat_Namayande');
        var Sherkat_Modir = App.CompanyProfile.queryById('Sherkat_Modir');
        var Sherkat_Info = App.CompanyProfile.queryById('Sherkat_Info');
        var Sherkat_Location = App.CompanyProfile.queryById('Sherkat_Location');
        var Sherkat_File = App.CompanyProfile.queryById('Sherkat_File');
        var Sherkat_File1 = App.CompanyProfile.queryById('Sherkat_File1');
        var lblInfo = App.CompanyProfile.queryById('lblInfo');
        var Sherkat_File2 = App.CompanyProfile.queryById('Sherkat_File2');
        var Sherkat_Saham = App.CompanyProfile.queryById('Sherkat_Saham');
        var Shakhs_Location = App.CompanyProfile.queryById('Shakhs_Location');
        var Shakhs_File = App.CompanyProfile.queryById('Shakhs_File');
        var Shakhs_File1 = App.CompanyProfile.queryById('Shakhs_File1');
        var Shakhs_File2 = App.CompanyProfile.queryById('Shakhs_File2');
        var txtMobileNamayande = App.CompanyProfile.queryById('txtMobileNamayande');
        var lblMobileNamayande = App.CompanyProfile.queryById('lblMobileNamayande');
        var txtEmailNamayande = App.CompanyProfile.queryById('txtEmailNamayande');

        var lblNameP = App.CompanyProfile.queryById('lblNameP');
        var txtNameP = App.CompanyProfile.queryById('txtNameP');
        var lblFamilyP = App.CompanyProfile.queryById('lblFamilyP');
        var txtFamilyP = App.CompanyProfile.queryById('txtFamilyP');
        var Shakhs_Info = App.CompanyProfile.queryById('Shakhs_Info');

        if (cboPersonType.getValue() == 2) {/*حقوقی*/
            Sherkat_Modir.show(true);
            Sherkat_Info.show(true);
            Sherkat_Location.show(true);
            Sherkat_Saham.show(true);

            Shakhs_Info.hide(true);
            Shakhs_Location.hide(true);
            if ('@ViewBag.SabtState' != 2) {
                Shakhs_File.hide(true);
                Sherkat_File.show(true);
                /*txtMobileNamayande.hide();
                lblMobileNamayande.hide();*/
            }
            else {
                Shakhs_File.hide(true);
                Sherkat_File1.hide(true);
                lblInfo.hide(true);
                Sherkat_File2.hide(true);
                App.FileUploadFieldCompany.hide(true);
                App.ShowButton.hide(true);
                /*lblNameP.setMargin("0 0 0 20px");
                txtNameP.setWidth(180);
                lblFamilyP.setMargin("0 0 0 20px");
                txtFamilyP.setWidth(180);*/
                /*txtMobileNamayande.show();
                lblMobileNamayande.show();*/
            }
        }
        else {/*حقیقی*/
            Sherkat_Modir.hide(true);
            Sherkat_Info.hide(true);
            Sherkat_Location.hide(true);
            Sherkat_Saham.hide(true);
            Shakhs_Info.show(true);
            Shakhs_Location.show(true);

            if ('@ViewBag.SabtState' != 2) {
                Shakhs_File.show(true);
                Sherkat_File.hide(true);
            }
            else {
                Shakhs_File1.hide(true);
                Shakhs_File2.hide(true);
                App.FileUploadFieldCompany_Shakhs.hide(true);
                App.ShowButton_Shakhs.hide(true);
                Sherkat_File.hide(true);
            }

            if (state == 1)
                Ext.MessageBox.show({
                    title: 'توجه',
                    msg: '<div style="text-align: right;">لازم به ذکر است تنها افرادی که سازندگان قطعات می باشند، می توانند در انتخاب شخص،"حقیقی" را انتخاب نمایند.</div>',
                    icon: Ext.MessageBox.INFO,
                    buttons: Ext.MessageBox.OK
                });

        }
    }

    function ShowConversationCompanyProfile() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/ShowConversationCompanyProfile',
            params: {

            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function ClearCompanyProfile() {

        App.CompanyProfile.queryById('txtEmail').setValue("");
        App.CompanyProfile.queryById('txtUserName').setValue("");
        App.CompanyProfile.queryById('txtMobail').setValue("");
        App.CompanyProfile.queryById('fldId').setValue(0);
    }
    function ClearCompany(state) {
        /*if (state != 1)
            App.CompanyProfile.queryById('txtShenase').setValue("");
        if (state != 2)
            App.CompanyProfile.queryById('txtName').setValue("");*/
        if ('@ViewBag.FromService' == "1") {
            App.CompanyProfile.queryById('txtShomareSabt').setValue("");
            App.CompanyProfile.queryById('txtTarikhSabt').setValue("");
            App.CompanyProfile.queryById('txtTarikh').setValue("");
            App.CompanyProfile.queryById('txtAddress').setValue("");
            App.CompanyProfile.queryById('txtCodePosti').setValue("");
        }
    }
    function Estelam(state) {
        var txtShenase = App.CompanyProfile.queryById('txtShenase');
        var txtName = App.CompanyProfile.queryById('txtName');
        var d = txtShenase.getValue();
        if (state == 2)
            d = txtName.getValue();
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/LoadFromService',
            params: {
                state: state,
                data: d,
                __RequestVerificationToken: App.CompanyProfile.queryById('AntiForgeryField').getValue()
            },
            success: function (data) {
                if (data.Err == 1) {
                    Ext.MessageBox.show({
                        Name: "خطا",
                        msg: "عدم برقراری ارتباط با سرور.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    ClearCompany(state);
                    CheckHaveCompany();
                }
                else if (data.fldNationalCode == null) {
                    Ext.MessageBox.show({
                        Name: "خطا",
                        msg: "شرکتی با این مشخصات یافت نشد.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    ClearCompany(state);
                }
                else {
                    var txtShenase = App.CompanyProfile.queryById('txtShenase');
                    txtShenase.setValue(data.fldNationalCode);
                    var txtName = App.CompanyProfile.queryById('txtName');
                    txtName.setValue(data.fldFullName);
                    var txtShomareSabt = App.CompanyProfile.queryById('txtShomareSabt');
                    txtShomareSabt.setValue(data.fldSh_Sabt);
                    var txtTarikhSabt = App.CompanyProfile.queryById('txtTarikhSabt');
                    txtTarikhSabt.setValue(data.fldDateSabt);
                    var txtTarikh = App.CompanyProfile.queryById('txtTarikh');
                    txtTarikh.setValue(data.fldDateTasis);
                    var txtAddress = App.CompanyProfile.queryById('txtAddress');
                    txtAddress.setValue(data.fldAddress);
                    var txtCodePosti = App.CompanyProfile.queryById('txtCodePosti');
                    txtCodePosti.setValue(data.fldCodePosti);
                }
                Ext.net.Mask.hide();
            },
            failure: function (data) {
                Ext.net.Mask.hide();
                Ext.MessageBox.show({
                    Name: "خطا",
                    msg: "عدم برقراری ارتباط با سرور.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                ClearCompany(state);
            }
        });
    }
    function EstelamAdress(state) {
        var txtCodePosti_Shakhs = App.CompanyProfile.queryById('txtCodePosti_Shakhs');
        var txtCodePosti = App.CompanyProfile.queryById('txtCodePosti');
        var cboCountryLoc = App.CompanyProfile.queryById('cboCountryLoc');
        var cboStateLoc = App.CompanyProfile.queryById('cboStateLoc');
        var cboCityLoc = App.CompanyProfile.queryById('cboCityLoc');
        var txtAddress = App.CompanyProfile.queryById('txtAddress');
        var cboCountryLoc_Shakhs = App.CompanyProfile.queryById('cboCountryLoc_Shakhs');
        var cboStateLoc_Shakhs = App.CompanyProfile.queryById('cboStateLoc_Shakhs');
        var cboCityLoc_Shakhs = App.CompanyProfile.queryById('cboCityLoc_Shakhs');
        var txtAddress_Shakhs = App.CompanyProfile.queryById('txtAddress_Shakhs');
        var d = txtCodePosti.getValue();
        var valid = txtCodePosti.validate();
        if (state == 2) {
            d = txtCodePosti_Shakhs.getValue();
            valid = txtCodePosti_Shakhs.validate();
        }

        if (valid) {
            App.CompanyProfile.body.mask('در حال استعلام از سیتاد...');
            Ext.net.DirectMethod.request({
                url: '/CompanyProfile/EstelamCodePosti',
                params: {
                    CodePosti: d,
                    __RequestVerificationToken: App.CompanyProfile.queryById('AntiForgeryField').getValue()
                },
                success: function (data) {
                    if (data.Er != 0) {
                        Ext.MessageBox.show({
                            title: "خطا",
                            msg: data.Message,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK,
                            fn: function (btn) {
                                if (btn == "ok") {
                                    txtCodePosti.focus().selectText();
                                    if (state == 2)
                                        txtCodePosti_Shakhs.focus().selectText();
                                }
                            }
                        });
                    }
                    else {
                        if (state == 1) {
                            cboCountryLoc.setValue("1");
                            cboStateLoc.clearValue(); cboStateLoc.getStore().load();
                            cboStateLoc.setValue(data.stateId);
                            cboCityLoc.clearValue(); cboCityLoc.getStore().load();
                            cboCityLoc.setValue(data.cityId);
                            txtAddress.setValue(data.address);
                        }
                        else {
                            cboCountryLoc_Shakhs.setValue("1");
                            cboStateLoc_Shakhs.clearValue(); cboStateLoc_Shakhs.getStore().load();
                            cboStateLoc_Shakhs.setValue(data.stateId);
                            cboCityLoc_Shakhs.clearValue(); cboCityLoc_Shakhs.getStore().load();
                            cboCityLoc_Shakhs.setValue(data.cityId);
                            txtAddress_Shakhs.setValue(data.address);
                        }
                    }
                    App.CompanyProfile.body.mask().hide();
                }
                    , timeout: 7200000
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "ورود کدپستی برای استعلام از سیتاد، ضروری است.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function LoadPersons() {
        var txtMelicode_Shakhs = App.CompanyProfile.queryById('txtMelicode_Shakhs');
        var txtTavalod_Shakhs = App.CompanyProfile.queryById('txtTavalod_Shakhs');

        if (txtTavalod_Shakhs.getRawValue() != "" && txtMelicode_Shakhs.validate() && txtTavalod_Shakhs.validate()) {
            App.CompanyProfile.body.mask('در حال استعلام از ثبت احوال...');
            Ext.net.DirectMethod.request({
                url: '/CompanyProfile/LoadFromCompanyPersons',
                params: {
                    MeliCode: txtMelicode_Shakhs.getValue(),
                    __RequestVerificationToken: App.CompanyProfile.queryById('AntiForgeryField').getValue()
                },
                success: function (data) {
                    if (data.Error == 1) {
                        GotoSabtServer(1, "", "", "", "");
                        /* txtMelicode_Shakhs.setReadOnly(false);
                         Ext.MessageBox.show({
                             Name:"خطا",
                             msg: "شخصی با این کد ملی، در پرسنل ثبت شده، یافت نشد.",
                             icon: Ext.MessageBox.ERROR,
                             buttons: Ext.MessageBox.OK
                         });*/
                    }
                    else {
                        var Id = App.CompanyProfile.queryById('fldId');
                        Id.setValue(data.fldId);
                        var CboMeliyat_Shakhs = App.CompanyProfile.queryById('CboMeliyat_Shakhs');
                        CboMeliyat_Shakhs.setValue(data.fldMeliyat);
                        var txtSh_Bime_Shakhs = App.CompanyProfile.queryById('txtSh_Bime_Shakhs');
                        txtSh_Bime_Shakhs.setValue(data.fldSh_Bime);
                        var txtEmail_Shakhs = App.CompanyProfile.queryById('txtEmail_Shakhs');
                        txtEmail_Shakhs.setValue(data.fldEmail);
                        var CheckedMashmolGhanon_Shakhs = App.CompanyProfile.queryById('CheckedMashmolGhanon_Shakhs');
                        CheckedMashmolGhanon_Shakhs.setValue(data.fldMashmolGhanon);

                        var cboCountry_Shakhs = App.CompanyProfile.queryById('cboCountry_Shakhs');
                        cboCountry_Shakhs.setValue(data.fldCountryIdTavalod);
                        var cboState_Shakhs = App.CompanyProfile.queryById('cboState_Shakhs');
                        cboState_Shakhs.clearValue(); cboState_Shakhs.getStore().load();
                        cboState_Shakhs.setValue(data.fldStateIdTavalod);
                        App.CompanyProfile.queryById('cboCity_Shakhs').clearValue(); App.CompanyProfile.queryById('cboCity_Shakhs').getStore().load();
                        var cboCity_Shakhs = App.CompanyProfile.queryById('cboCity_Shakhs');
                        cboCity_Shakhs.setValue(data.fldMahalTavalodId);

                        var cboCountrySodur_Shakhs = App.CompanyProfile.queryById('cboCountrySodur_Shakhs');
                        cboCountrySodur_Shakhs.setValue(data.fldCountryIdSodoor);
                        var cboStateSodur_Shakhs = App.CompanyProfile.queryById('cboStateSodur_Shakhs');
                        cboStateSodur_Shakhs.clearValue(); cboStateSodur_Shakhs.getStore().load();
                        cboStateSodur_Shakhs.setValue(data.fldStateIdSodoor);
                        App.CompanyProfile.queryById('cboCitySodur_Shakhs').clearValue(); App.CompanyProfile.queryById('cboCitySodur_Shakhs').getStore().load();
                        var cboCitySodur_Shakhs = App.CompanyProfile.queryById('cboCitySodur_Shakhs');
                        cboCitySodur_Shakhs.setValue(data.fldMahalSodoorId);

                        if (data.fldFromSabtServer == false) {
                            GotoSabtServer(1, data.fldName, data.fldFamily, data.fldFatherName, data.fldShenasnameNo);
                        }
                        else {
                            txtMelicode_Shakhs.setReadOnly(true);

                            var txtName_Shakhs = App.CompanyProfile.queryById('txtName_Shakhs');
                            txtName_Shakhs.setValue(data.fldName);
                            var txtFamily_Shakhs = App.CompanyProfile.queryById('txtFamily_Shakhs');
                            txtFamily_Shakhs.setValue(data.fldFamily);
                            var txtPName_Shakhs = App.CompanyProfile.queryById('txtPName_Shakhs');
                            txtPName_Shakhs.setValue(data.fldFatherName);
                            var txtShenasname_Shakhs = App.CompanyProfile.queryById('txtShenasname_Shakhs');
                            txtShenasname_Shakhs.setValue(data.fldShenasnameNo);
                            var txtTavalod_Shakhs = App.CompanyProfile.queryById('txtTavalod_Shakhs');
                            txtTavalod_Shakhs.setValue(data.fldBDate);

                        }
                    }
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "ورود کدملی و تاریخ تولد برای استعلام از ثبت احوال، ضروری است.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ClearLoadPersons() {
        if (flagEdit == 0) {
            App.CompanyProfile.queryById('txtMelicode_Shakhs').setReadOnly(false);
            App.CompanyProfile.queryById('fldId').setValue("0");
            App.CompanyProfile.queryById('txtName_Shakhs').setValue("");
            App.CompanyProfile.queryById('txtFamily_Shakhs').setValue("");
            App.CompanyProfile.queryById('txtPName_Shakhs').setValue("");
            App.CompanyProfile.queryById('txtShenasname_Shakhs').setValue("");
            App.CompanyProfile.queryById('txtTavalod_Shakhs').setValue("");
            App.CompanyProfile.queryById('CboMeliyat_Shakhs').setValue("");
            App.CompanyProfile.queryById('txtSh_Bime_Shakhs').setValue("");
            App.CompanyProfile.queryById('txtEmail_Shakhs').setValue("");
            App.CompanyProfile.queryById('CheckedMashmolGhanon_Shakhs').setValue("");
            App.CompanyProfile.queryById('cboCity_Shakhs').setValue("");
            App.CompanyProfile.queryById('cboCitySodur_Shakhs').setValue("");
        }
    }
    function LoadPersonsModir() {
        var txtMelicode_Modir = App.CompanyProfile.queryById('txtMelicode_Modir');
        var txtTavalod_Modir = App.CompanyProfile.queryById('txtTavalod_Modir');

        if (txtTavalod_Modir.getRawValue() != "" && txtMelicode_Modir.validate() && txtTavalod_Modir.validate()) {
            App.CompanyProfile.body.mask('در حال استعلام از ثبت احوال...');
            Ext.net.DirectMethod.request({
                url: '/CompanyProfile/LoadFromCompanyPersons',
                params: {
                    MeliCode: txtMelicode_Modir.getValue(),
                    __RequestVerificationToken: App.CompanyProfile.queryById('AntiForgeryField').getValue()
                },
                success: function (data) {
                    if (data.Error == 1) {
                        GotoSabtServer(2, "", "", "", "");
                        /* txtMelicode_Shakhs.setReadOnly(false);
                         Ext.MessageBox.show({
                             Name:"خطا",
                             msg: "شخصی با این کد ملی، در پرسنل ثبت شده، یافت نشد.",
                             icon: Ext.MessageBox.ERROR,
                             buttons: Ext.MessageBox.OK
                         });*/
                    }
                    else {


                        if (data.fldFromSabtServer == false) {
                            GotoSabtServer(2, data.fldName, data.fldFamily, data.fldFatherName, data.fldShenasnameNo);
                        }
                        else {
                            txtMelicode_Modir.setReadOnly(true);

                            var txtNameModir = App.CompanyProfile.queryById('txtNameModir');
                            txtNameModir.setValue(data.fldName);
                            var txtFamilyModir = App.CompanyProfile.queryById('txtFamilyModir');
                            txtFamilyModir.setValue(data.fldFamily);
                            var txtTavalod_Modir = App.CompanyProfile.queryById('txtTavalod_Modir');
                            txtTavalod_Modir.setValue(data.fldBDate);

                        }
                    }
                    App.CompanyProfile.body.mask().hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "ورود کدملی و تاریخ تولد برای استعلام از ثبت احوال، ضروری است.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ClearLoadPersonsModir() {
        if (flagEdit == 0) {
            App.CompanyProfile.queryById('txtMelicode_Modir').setReadOnly(false);
            App.CompanyProfile.queryById('fldId').setValue("0");
            App.CompanyProfile.queryById('txtNameModir').setValue("");
            App.CompanyProfile.queryById('txtFamilyModir').setValue("");
            App.CompanyProfile.queryById('txtTavalod_Modir').setValue("");
        }
    }
    function LoadPersonsNamayande() {
        var txtMelicode_Namayande = App.CompanyProfile.queryById('txtMelicode_Namayande');
        var txtTavalod_Namayande = App.CompanyProfile.queryById('txtTavalod_Namayande');

        if (txtTavalod_Namayande.getRawValue() != "" && txtMelicode_Namayande.validate() && txtTavalod_Namayande.validate()) {
            App.CompanyProfile.body.mask('در حال استعلام از ثبت احوال...');
            Ext.net.DirectMethod.request({
                url: '/CompanyProfile/LoadFromCompanyPersons',
                params: {
                    MeliCode: txtMelicode_Namayande.getValue(),
                    __RequestVerificationToken: App.CompanyProfile.queryById('AntiForgeryField').getValue()
                },
                success: function (data) {
                    if (data.Error == 1) {
                        GotoSabtServer(3, "", "", "", "");
                        /* txtMelicode_Shakhs.setReadOnly(false);
                         Ext.MessageBox.show({
                             Name:"خطا",
                             msg: "شخصی با این کد ملی، در پرسنل ثبت شده، یافت نشد.",
                             icon: Ext.MessageBox.ERROR,
                             buttons: Ext.MessageBox.OK
                         });*/
                    }
                    else {


                        if (data.fldFromSabtServer == false) {
                            GotoSabtServer(3, data.fldName, data.fldFamily, data.fldFatherName, data.fldShenasnameNo);
                        }
                        else {
                            txtMelicode_Namayande.setReadOnly(true);

                            var txtNameP = App.CompanyProfile.queryById('txtNameP');
                            txtNameP.setValue(data.fldName);
                            var txtFamilyP = App.CompanyProfile.queryById('txtFamilyP');
                            txtFamilyP.setValue(data.fldFamily);
                            var txtTavalod_Namayande = App.CompanyProfile.queryById('txtTavalod_Namayande');
                            txtTavalod_Namayande.setValue(data.fldBDate);

                        }
                    }
                    App.CompanyProfile.body.mask().hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "ورود کدملی و تاریخ تولد برای استعلام از ثبت احوال، ضروری است.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ClearLoadPersonsNamayande() {
        if (flagEdit == 0) {
            App.CompanyProfile.queryById('txtMelicode_Namayande').setReadOnly(false);
            App.CompanyProfile.queryById('fldId').setValue("0");
            App.CompanyProfile.queryById('txtNameP').setValue("");
            App.CompanyProfile.queryById('txtFamilyP').setValue("");
            App.CompanyProfile.queryById('txtTavalod_Namayande').setValue("");
        }
    }
    function GotoSabtServer(state, Name, Family, FatherName, ShenasnameNo) {

        var txtMelicode_Shakhs = App.CompanyProfile.queryById('txtMelicode_Shakhs');
        var txtTavalod_Shakhs = App.CompanyProfile.queryById('txtTavalod_Shakhs');

        if (state == 2) {
            txtMelicode_Shakhs = App.CompanyProfile.queryById('txtMelicode_Modir');
            txtTavalod_Shakhs = App.CompanyProfile.queryById('txtTavalod_Modir');
        }
        if (state == 3) {
            txtMelicode_Shakhs = App.CompanyProfile.queryById('txtMelicode_Namayande');
            txtTavalod_Shakhs = App.CompanyProfile.queryById('txtTavalod_Namayande');
        }
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/EstelamSitaad',
            params: {
                BirthDate: txtTavalod_Shakhs.getRawValue(),
                NationalCode: txtMelicode_Shakhs.getValue(),
                __RequestVerificationToken: App.CompanyProfile.queryById('AntiForgeryField').getValue()
            },
            success: function (data) {
                if (data.Er != 0) {

                    if (data.Er == 1) {
                        if (state == 1) {
                            IsEstelam = false;
                            App.CompanyProfile.queryById('txtName_Shakhs').setValue(Name).setReadOnly(false);
                            App.CompanyProfile.queryById('txtFamily_Shakhs').setValue(Family).setReadOnly(false);
                            App.CompanyProfile.queryById('txtPName_Shakhs').setValue(FatherName).setReadOnly(false);
                            App.CompanyProfile.queryById('txtShenasname_Shakhs').setValue(ShenasnameNo).setReadOnly(false);
                        }
                        else if (state == 2) {
                            IsEstelam = false;
                            App.CompanyProfile.queryById('txtNameModir').setValue(Name).setReadOnly(false);
                            App.CompanyProfile.queryById('txtFamilyModir').setValue(Family).setReadOnly(false);
                        }
                        else if (state == 3) {
                            IsEstelamNamayande = false;
                            App.CompanyProfile.queryById('txtNameP').setValue(Name).setReadOnly(false);
                            App.CompanyProfile.queryById('txtFamilyP').setValue(Family).setReadOnly(false);
                        }
                    }
                    /*if (data.Er == 2) {
                        txtCodeMeli.setValue("");
                        txtBirthDate.setRawValue("");
                    }*/
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: data.Message,
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK,
                        fn: function (btn) {
                            if (btn == "ok") {
                                txtMelicode_Shakhs.focus().selectText();
                            }
                        }
                    });
                }
                else {

                    if (state == 1) {
                        IsEstelam = true;
                        App.CompanyProfile.queryById('txtName_Shakhs').setValue(data.Name).setReadOnly(true);
                        App.CompanyProfile.queryById('txtFamily_Shakhs').setValue(data.Family).setReadOnly(true);
                        App.CompanyProfile.queryById('txtPName_Shakhs').setValue(data.FatherName).setReadOnly(true);
                        App.CompanyProfile.queryById('txtShenasname_Shakhs').setValue(data.ShenasnameNo).setReadOnly(true);
                    }
                    else if (state == 2) {
                        IsEstelam = true;
                        App.CompanyProfile.queryById('txtNameModir').setValue(data.Name).setReadOnly(true);
                        App.CompanyProfile.queryById('txtFamilyModir').setValue(data.Family).setReadOnly(true);
                    }
                    else if (state == 3) {
                        IsEstelamNamayande = true;
                        App.CompanyProfile.queryById('txtNameP').setValue(data.Name).setReadOnly(true);
                        App.CompanyProfile.queryById('txtFamilyP').setValue(data.Family).setReadOnly(true);
                    }

                }
                App.CompanyProfile.body.mask().hide();
            }
            , timeout: 7200000
        });
    }
    function ChangeEstelam(state) {
        if (afterEdit == 1) {
            if (state == 1) {
                App.CompanyProfile.queryById('txtName_Shakhs').setValue("");
                App.CompanyProfile.queryById('txtFamily_Shakhs').setValue("");
                App.CompanyProfile.queryById('txtPName_Shakhs').setValue("");
                App.CompanyProfile.queryById('txtShenasname_Shakhs').setValue("");
            }
            else if (state == 2) {
                App.CompanyProfile.queryById('txtNameModir').setValue("");
                App.CompanyProfile.queryById('txtFamilyModir').setValue("");
            }
            else if (state == 3) {
                App.CompanyProfile.queryById('txtNameP').setValue("");
                App.CompanyProfile.queryById('txtFamilyP').setValue("");
            }
        }
    }
    function EnterNext() {
        var keyfield = App.CompanyProfile.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling();
        nextfld.focus();
        nextfld.selectText();

    }
    function CheckHaveCompany() {
        var Shenase = App.CompanyProfile.queryById('txtShenase').getValue();
        Shenase = Shenase.replace("_", "");
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/CheckHaveCompany',
            params: {
                Shenase: Shenase,
                __RequestVerificationToken: App.CompanyProfile.queryById('AntiForgeryField').getValue()
            },
            success: function (data) {
                Ext.net.Mask.hide();
                var txtShenase = App.CompanyProfile.queryById('txtShenase');
                var txtName = App.CompanyProfile.queryById('txtName');
                var txtShomareSabt = App.CompanyProfile.queryById('txtShomareSabt');
                var txtTarikhSabt = App.CompanyProfile.queryById('txtTarikhSabt');
                var cboComType = App.CompanyProfile.queryById('cboComType');

                var txtCodeEghtesadi = App.CompanyProfile.queryById('txtCodeEghtesadi');
                var txtTarikh = App.CompanyProfile.queryById('txtTarikh');
                var txtAddress = App.CompanyProfile.queryById('txtAddress');
                var txtCodePosti = App.CompanyProfile.queryById('txtCodePosti');
                if (data.Error != 1) {
                    txtShenase.setValue(data.fldNationalCode);
                    txtName.setValue(data.fldFullName);
                    txtShomareSabt.setValue(data.fldSh_Sabt);
                    txtTarikhSabt.setValue(data.fldDateSabt);
                    cboComType.setValue(data.fldTypeCompanyId);
                    txtCodeEghtesadi.setValue(data.fldCodeEghtesadi);
                    txtTarikh.setValue(data.fldTarikhTasis);
                    txtAddress.setValue(data.fldAddress);
                    txtCodePosti.setValue(data.fldCodePosti);
                }
            }
        });
    }
    function checkShenaseMeli(code) {

        var L = code.length;

        if (L < 11 || parseInt(code) == 0) return false;

        if (parseInt(code.substr(3, 6)) == 0) return false;
        var c = parseInt(code.substr(10, 1));
        var d = parseInt(code.substr(9, 1)) + 2;
        var z = new Array(29, 27, 23, 19, 17);
        var s = 0;
        for (var i = 0; i < 10; i++)
            s += (d + parseInt(code.substr(i, 1))) * z[i % 5];
        s = s % 11; if (s == 10) s = 0;
        return (c == s);

    }
    function ChangeTypeMojavez() {
        var cboTypeMojavez = App.CompanyProfile.queryById('cboTypeMojavez');
        var txtCodeMojavez = App.CompanyProfile.queryById('txtCodeMojavez');
        var lblCodeMojavez = App.CompanyProfile.queryById('lblCodeMojavez');
        if (cboTypeMojavez.getValue() != "1") {
            txtCodeMojavez.hide();
            lblCodeMojavez.hide();
            txtCodeMojavez.setValue("");
        }
        else {
            txtCodeMojavez.show();
            lblCodeMojavez.show();
        }
        descMojavez = "";
        EstelamSenf = 0;
    }
    function ChangeCodeMojaveztxt() {
        descMojavez = "";
        EstelamSenf = 0;
    }
    function EstelamMojavez() {
        var txtCodeMojavez = App.CompanyProfile.queryById('txtCodeMojavez');
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/EstelamMojavezWin',
            params: {
                Code: txtCodeMojavez.getValue()
            },
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function GotoMap() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/OpenMap',
            params: {
                FirstId: '@ViewBag.FirstId'
            },
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
</script>
<style>
    .x-fieldset-header-text {
        font: 11px/14px;
        color: #15428b;
        padding: 1px 0;
    }

    .editable-over {
        background-color: #ffc;
    }

    .lblColor {
        color: blue;
        text-decoration: underline;
    }
</style>