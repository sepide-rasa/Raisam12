@model IEnumerable<RaiSam.Models.prs_tblCh_CompanyProfileSelect>
@using Ext.Net.MVC;
@using Hogaf.ExtNet.UX;
@{

    var X = Html.X();
}

@(X.Window()
    .Height(550)
    .Width(865)
    .Modal(true)
    .ID("Ch_CompanyProfile")
    .Title("گفتگوها")
    .Icon(Ext.Net.Icon.UserComment2)
    .Closable(true)
    .Border(false)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(Ext.Net.LayoutType.Fit)
    .Items(
        X.Panel()
            .ItemID("PnlCh_CompanyProfile")
            .Border(false)
            .Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .TopBar(
                        Html.X().Toolbar()
                            .Items(
                                X.Button()
                                    .Text("جدید")
                                    .Listeners(l => l.Click.Handler = "NewCh_CompanyProfiles();")
                                    .Icon(Ext.Net.Icon.Add))
                                    )
                    .ItemID("GridCh_CompanyProfile")
                    .BottomBar(X.PagingToolbar())
                    .Store(
                        X.StoreForModel()
                            .Parameters(new { FristRegisterId = @ViewBag.FirstRegisterId })
                            .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("ReadCh_CompanyProfile"))
                            .Reader(Html.X().JsonReader().Root("data"))
        )
                    .PageSize(12)
                    .RemoteFilter(true)
                    .RemotePaging(true)
    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
    )
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                        Html.X().ActionColumn().Text("پیام جدید").Renderer("letterCP").Flex(1),
                            Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Hideable(false).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldFirstRegisterId).Text("کد شخص").Hidden(true).Hideable(false).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldSenderName).Text("فرستنده پیام").Flex(3).Wrap(true),
                        Html.X().Column().DataIndex(Model, m => m.fldSenderId).Text("کد فرستنده").Hidden(true).Hideable(false).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldMsg).Text("پیام").Flex(3),
                        Html.X().Column().DataIndex(Model, m => m.fldSentDate_Time).Text("تاریخ ارسال پیام").Flex(3),
                        Html.X().Column().DataIndex(Model, m => m.fldTypeMsg).Text("کد نوع پیام").Hidden(true).Hideable(false).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldTypeMsgName).Text("نوع پیام").Flex(2),
                        //Html.X().Column().DataIndex(Model, m => m.fldIsGrade).Text("کد مشمول امتیاز").Hidden(true).Hideable(false).Flex(1),
                        //Html.X().Column().DataIndex(Model, m => m.fldIsGradeName).Text("مشمول امتیاز").Wrap(true).Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldStatusMsg).Text("کد وضعیت پیام").Hidden(true).Hideable(false).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldStatusMsgName).Text("وضعیت پیام").Flex(2),
                        Html.X().ImageCommandColumn().Listeners(l => l.Command.Handler = "ShowMsgCompanyProfile(record);").Align(Ext.Net.Alignment.Center).Text("نمایش")
                            .Flex(1).Commands(Html.X().ImageCommand().Cls("margin:10px;").CommandName("InfoMsgCompanyProfile").Icon(Ext.Net.Icon.Information).ToolTip(tt => tt.Text = "نمایش"))
    )
                .SelectionModel(
                    Html.X().RowSelectionModel()
                        .Mode(Ext.Net.SelectionMode.Single)
    )
))
)

<script>


    var letterCP = function (value, metadata, record, rowIndex, colIndex, store) {
        if (record.data.fldStatusMsg == 0) {
            return '<img height="20" width="20" src="/Content/letter.png"/>';
        }
        else {
            return '<img height="20" width="20" src="/Content/letter2.png"/>';
        }
    };

    function ShowMsgCompanyProfile(record) {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/ShowMsgCompanyProfile',
            params: {
                Message: record.data.fldMsg,
                SenderId: record.data.fldSenderId,
                Id: record.data.fldId
            },
            success: function () {
                App.Ch_CompanyProfile.queryById("GridCh_CompanyProfile").store.load();
                Ext.net.Mask.hide();
            }
        });
    }

    function NewCh_CompanyProfiles() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/CompanyProfile/NewCh_CompanyProfile',
            params: {
                FirstRegisterId: '@ViewBag.FirstRegisterId'
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
</script>