@model IEnumerable<RaiSam.Models.prs_tblCompanyProfileSelect>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}
@(Html.X().Window().Modal(true)
                    .Width(800).Height(378)
       // .Listeners(l => l.Destroy.Handler = "SetFocusComponent()")   
            .Title(" شرکت ها  ")
            .Border(false)
            .ID("SearchCompany")
            .Closable(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.Panel().Border(false).Layout(Ext.Net.LayoutType.Fit)
                .Border(false)
                    .Items(
                 X.AntiForgeryField().ItemID("AntiForgeryField"),
                        X.GridPanel().AutoScroll(true)
                            .Listeners(l => l.ItemClick.Handler = "ReloadButtonEdit();")
                        .TopBar(
                            Html.X().Toolbar()
                            .Items(
                                    X.Button().Text("انتخاب").Icon(Ext.Net.Icon.ArrowRedo)
                                            .Listeners(li => li.Click.Handler = "NextSearchCompany();")
                                    , X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)//.ToolTip("کلید میانبر F8")
                                                .Listeners(li => li.Click.Handler = "NewCompany();"),
                                    X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)//.ToolTip("کلید میانبر F2")
                                    .ItemID("btnEditCo")
                                                 .Listeners(Li => Li.Click.Handler = "EditCompany();")
                            )
                        )
                        .ItemID("GridSearch").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(350)
        ////.ColumnWidth(0.6)
        ////.Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        X.StoreForModel()
                                           .Listeners(l => l.BeforeLoad.Handler = "App.SearchCompany.queryById('GridSearch').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.SearchCompany.queryById('AntiForgeryField').getValue());")
                                .Proxy(Html.X().AjaxProxy()
                                .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))
                .ExtraParams(ex => ex.Add(new { FristRegisterId = @ViewBag.FristRegisterId, Status = @ViewBag.Status }))
                        )
                        .PageSize(10)
                        .RemoteFilter(true)
                        .RemotePaging(true)

                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                        .ColumnModel(
                                Html.X().Column().DataIndex(Model, m => m.fldFirstRegisterUser).Text("کاربر").Flex(1).Hidden(true).Hideable(true),
                            Html.X().Column().DataIndex(Model, m => m.fldISAccept).Text("تایید").Flex(1).Hidden(true),
                            Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                            Html.X().Column().DataIndex(Model, m => m.fldFullName).Text("نام ثبتی").Flex(5),
                            Html.X().Column().DataIndex(Model, m => m.fldNickName).Text("نام اختصاری").Flex(5),
                            Html.X().Column().DataIndex(Model, m => m.fldSh_Sabt).Text("شماره ثبت").Flex(4),
                            Html.X().Column().DataIndex(Model, m => m.fldNationalCode).Text("شماره شناسایی ملی").Flex(4)
        // Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(5)
                    )
                    .Listeners(a => a.CellDblClick.Handler = "NextSearchCompany();")
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )

            )
        )
)

<script type="text/javascript">
    var State = '@ViewBag.State';
    var FristRegisterId = '@ViewBag.FristRegisterId';
   
    function NextSearchCompany() {
        var SelectedRow = App.SearchCompany.queryById('GridSearch').selModel.getLastSelected();

        if (SelectedRow != null) {
            if (State == 1) {
                Ext.net.DirectMethod.request({
                    url: '/Faces/Shareholders/CheckHoghoghiKhososi',
                    params: {
                        PersonalId: '@ViewBag.CompanyPersonalId',
                        CompanyId: SelectedRow.data.fldId,
                        ReqId: '@ViewBag.ReqId',
                        FirstId: '@ViewBag.FristRegisterId'
                    },
                    success: function (data) {
                        if (data.Err == 0) {
                            CompanyId = SelectedRow.data.fldId;
                            if ('@ViewBag.CompanyPersonalId' != "0" && CompanyId != "") {
                                Ext.net.DirectMethod.request({
                                    url: '/Faces/Shareholders/DetailsCompanyPerson',
                                    params: {
                                        Id: '@ViewBag.CompanyPersonalId',
                                        Type: 2,
                                        _Id: SelectedRow.data.fldId,
                                        ReqId: '@ViewBag.ReqId'/*,
                                        __RequestVerificationToken: App.SearchCompany.queryById('AntiForgeryField').getValue()*/
                                    },
                                    success: function (data1) {
                                        ShareholderId = data1.fldId;
                                        App.NewHoghoghiKhososi.queryById('txtTedadSaham').setValue(data1.fldTedadSaham);
                                        App.NewHoghoghiKhososi.queryById('txtDateSaham').setValue(data1.fldTarikhSaham);
                                    }
                                });
                            }
                            App.NewHoghoghiKhososi.queryById('txtSahamdarHoghoghi').setValue(SelectedRow.data.fldFullName);
                            App.NewHoghoghiKhososi.queryById('txtShomareSabt').setValue(SelectedRow.data.fldSh_Sabt);
                            App.NewHoghoghiKhososi.queryById('txtShomareMeli').setValue(SelectedRow.data.fldNationalCode);
                        }
                        else {
                            Ext.MessageBox.show({
                                Name: data.MsgName,
                                msg: data.Msg,
                                icon: Ext.MessageBox.ERROR,
                                buttons: Ext.MessageBox.OK
                            });
                        }
                    }
                });

            }
           

            App.SearchCompany.destroy();
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function NewCompany() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Faces/SearchCompony/NewWithService',
            params: {
                id: 0,
                FristId: '@ViewBag.FristRegisterId',
                ReqId: '@ViewBag.ReqId'
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function EditCompany() {
        var SelectedRow = App.SearchCompany.queryById('GridSearch').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Faces/SearchCompony/NewWithService',
                params: {
                    id: SelectedRow.data.fldId,
                    FristId: '@ViewBag.FristRegisterId',
                    ReqId: '@ViewBag.ReqId'
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function ReloadButtonEdit() {
        var SelectedRow = App.SearchCompany.queryById('GridSearch').selModel.getLastSelected();
        if (SelectedRow.data.fldISAccept == true) {
            App.SearchCompany.queryById('btnEditCo').disable(true);
        }
        else if (SelectedRow.data.fldFirstRegisterUser != FristRegisterId) {
            App.SearchCompany.queryById('btnEditCo').disable(true);
        }
        else {
            App.SearchCompany.queryById('btnEditCo').enable(true);
        }
    }
</script>
