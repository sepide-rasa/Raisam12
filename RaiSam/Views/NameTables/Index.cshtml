@model IEnumerable<RaiSam.Models.prs_tblNameTablesSelect>
@using Ext.Net.MVC;
@using Hogaf.ExtNet.UX
@{

    var X = Html.X();
}

<style>
    .borderrPersonInf {
        border-radius: 20px;
        border-width: 3px;
    }
</style>
<script>

    $().Ribbon({ theme: 'windows7' }, '1');
    Ext.net.FilterHeader.behaviour.string[0].match = function (recordValue, matchValue) {
        return (Ext.net.FilterHeader.behaviour.getStrValue(recordValue) || "").indexOf(matchValue) > -1;
    };

    Ext.net.FilterHeader.behaviour.string[0].getStrValue = function (value) {
        return value.toString();
    };

    Ext.net.FilterHeader.behaviour.string[0].serialize = function (value) {
        return {
            type: "string",
            op: "*",
            value: value
        };
    };

</script>

@(X.Panel().Border(false).Listeners(li => { li.AfterRender.Handler = "NameTablesSetSize();"; })
.Title("عنوان جداول")
             .ID("NameTables")
            .Closable(true)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                 X.AntiForgeryField()
                .ItemID("antiForgeryToken")
                .Hidden(true),
                X.Panel()
                .Border(false)
                .AutoScroll(true)
                .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button()
                            .Text("بارگذاری جداول")
                            .Icon(Ext.Net.Icon.Magnifier)
                                .Listeners(li => li.Click.Handler = "LoadGridLog();")
                                , X.SplitButton()
                                    .Text("راهنما")
                                    .Icon(Ext.Net.Icon.Help)
                                    .Menu(X.Menu()
                                    .Items(
                                    X.MenuItem()
                                        .Text("راهنما متنی")
                                        .Icon(Ext.Net.Icon.TextPaddingTop)
                                            .Listeners(l => l.Click.Handler = "HelpNameTables()")
                                                ,
                                        X.MenuItem()
                                                .Text("راهنما تصویری")
                                                .Icon(Ext.Net.Icon.PlayBlue)
                                                    .Listeners(l => l.Click.Handler = "showHelp_VideoNameTables()")

                                )
                            )
                        )
                    )
                     .ItemID("GridNameTables")
                    .BottomBar(X.PagingToolbar())
                    .Store(
                        X.StoreForModel()
                            .Listeners(l => l.BeforeLoad.Handler = "App.NameTables.queryById('GridNameTables').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.NameTables.queryById('antiForgeryToken').getValue());")
                            .Proxy(Html.X().AjaxProxy()
                            .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                            .Timeout(200000)
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                            .RemotePaging(true)
                            .Listeners(l => l.DataChanged.Handler = "App.NameTables.queryById('GridNameTables').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView()
                        .LoadingText("در حال بارگذاری...").RTL(true)
                    )
                        .Plugins(X.FilterHeader().Remote(true))
            .ColumnModel(
                        Html.X().RowNumbererColumn(),
                                Html.X().Column().DataIndex(Model, m => m.fldEnNameTables).Text("نام انگلیسی").Flex(2).Wrap(true),
                            Html.X().Column().DataIndex(Model, m => m.fldFaName).Text("نام فارسی").Flex(3).Wrap(true)

                                )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )
            )
        )
)
<script type="text/javascript">
    function showHelp_VideoNameTables() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NameTables/VideoWinNameTables',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });

    }
    function NameTablesSetSize() {
        App.NameTables.setWidth(App.EventsWin.getWidth());
        var grid = App.NameTables.queryById('GridNameTables');
        grid.setHeight(App.EventsWin.getHeight() - 82);
    }
    function LoadGridLog() {
            App.NameTables.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/NameTables/Reload',
                params: {
                    __RequestVerificationToken: App.NameTables.queryById('antiForgeryToken').getValue()
                },
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Er == 1) {
                        ic = Ext.MessageBox.ERROR;
                    }
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.NameTables.queryById('GridNameTables').store.load();
                    App.NameTables.body.mask().hide();
                }
            });
    }


    function HelpNameTables() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/NameTables/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
</script>