@model IEnumerable<RaiSam.Models.prs_tblItemsDynamicRatingSelect>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
<script>
    var ShowIcon_OperationSs = function (value, record) {
        if (value == null) {
            return "";
        }
        else {
            pic = "data:image/png;base64," + value;
            var template = "<img src=" + pic + " style='width:17px;height:17px;' />";
            return template;
        }
    };
</script>
@(Html.X().Window()
    .Modal(true)
    .Width(740)
    .Height(450)
    .Title("لیست مدارک")
    .ID("SearchDynamic")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(LayoutType.Fit)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
            .Listeners(l => l.Click.Handler = "SaveOpration_Action();"),
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .ToolTip("کلید میانبر Esc")
            .OnClientClick("App.SearchDynamic.hide();"))
    .Items(
            X.AntiForgeryField()
                .ItemID("antiForgeryToken")
                .Hidden(true),
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(LayoutType.Fit)
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .Border(false)
                    .ItemID("GridSearchDynamic")
                    .Store(
                        X.StoreForModel()
                                        .Listeners(l => l.BeforeLoad.Handler = "App.SearchDynamic.queryById('GridSearchDynamic').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.SearchDynamic.queryById('antiForgeryToken').getValue());")
                            .Listeners(l => l.Load.Handler = "LoadOpration()")
                            .Proxy(Html.X().AjaxProxy()
                                .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
                                                .ExtraParams(P => P.Add(new { GeneralRatingId = @ViewBag.GeneralRatingId, CharkheId = @ViewBag.CharkheId }))
                        )
                        .PageSize(1000000)
                        .RemoteFilter(false)
                        .RemotePaging(false)
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(false))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                            Html.X().Column().DataIndex(Model, m => m.fldDynamicRatingId).Text("کد").Hidden(true).Flex(1),
                            Html.X().Column().DataIndex(Model, m => m.fldTitleRatingDynamic).Text("عنوان").Flex(4).Wrap(true)
                    )
                    .Listeners(a => a.CellDblClick.Handler = "NextSearchDynamic();")
                    .SelectionModel(
                        Html.X().CheckboxSelectionModel().PruneRemoved(false)
                            .Mode(SelectionMode.Multi).CheckOnly(true))
                )
        )
)

<script type="text/javascript">
    var state = '@ViewBag.state';
    var CheckedArray_OPAC = '@ViewBag.checkId'.split(";");


    function LoadOpration() {
        var arrayy = '@ViewBag.checkId'.split(";");
        for (var j = 0; j < arrayy.length - 1; j++) {
            var index2 = App.SearchDynamic.queryById("GridSearchDynamic").getStore().findExact("fldDynamicRatingId", parseInt(arrayy[j]));
            App.SearchDynamic.queryById("GridSearchDynamic").getSelectionModel().select(index2, true);
        }
    }

    function SaveOpration_Action() {
        var GridRow = App.SearchDynamic.queryById("GridSearchDynamic").getSelectionModel().getSelection();
        var OprationArray = new Array();

        if (GridRow.length == 0) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا حداقل یک  مدرک را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            return;
        }

        for (var i = 0; i < GridRow.length ; i++) {
            var indexxx = App.SearchDynamic.queryById("GridSearchDynamic").store.indexOf(GridRow[i]);
            OprationArray.push({
                "fldTitleRatingDynamicId": GridRow[i].data.fldDynamicRatingId,
                "fldCherkhe_EghdamId": '@ViewBag.Charkhe_EghdamId'
            });
        }
        OprationArray = JSON.stringify(OprationArray);

        App.SearchDynamic.body.mask("در حال ذخیره سازی");
        $.ajax({
            type: "POST",
            url: '/SearchDynamicItem_CharkheEghdam/SaveTitleRatingDynamic_CharkheEghdam',
            datatype: "json",
            data: {
                OprationArray1: OprationArray,
                Charkhe_EghdamId: '@ViewBag.Charkhe_EghdamId',
                __RequestVerificationToken: App.SearchDynamic.queryById('antiForgeryToken').getValue()
            },
            /*contentType: 'application/json',*/
            success: function (result) {
                chat.server.reloadLog();
                var ic = Ext.MessageBox.INFO;
                if (result.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: result.MsgTitle,
                    msg: result.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
              
                App.SearchDynamic.body.mask().hide();
            },
            failure: function () {
            }
        });
    }
</script>
