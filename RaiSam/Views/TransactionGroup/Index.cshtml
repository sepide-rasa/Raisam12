@model IEnumerable<RaiSam.Models.prs_tblTransactionGroupSelect>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}
@using Hogaf.ExtNet.UX


@(X.Panel().Border(false).Listeners(li => { li.AfterRender.Handler = "TransactionGroupSetSize();"; })
.Title("گروه تراکنش")
                    .ID("TransactionGroup")
            .Closable(true)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                 X.AntiForgeryField()
                .ItemID("antiForgeryToken")
                .Hidden(true),
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)
                                     .Listeners(li => li.Click.Handler = "NewTransactionGroup();"),
                            X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                                     .Listeners(Li => Li.Click.Handler = "EditTransactionGroup();"),
                            X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)
                                .Listeners(de =>
                                {
                                    de.Click.Handler = "DeleteTransactionGroup();";
                                }),
                            X.SplitButton()
                                    .Text("راهنما")
                                    .Icon(Ext.Net.Icon.Help)
                                    .Menu(X.Menu()
                                    .Items(
                                    X.MenuItem()
                                                .Text("راهنما متنی")
                                                .Icon(Ext.Net.Icon.TextPaddingTop)
                                                .Listeners(l => l.Click.Handler = "HelpTransactionGroup()"),
                                        X.MenuItem()
                                                .Text("راهنما تصویری")
                                                .Icon(Ext.Net.Icon.PlayBlue)
                                                .Listeners(l => l.Click.Handler = "showHelp_VideoTransactionGroup()")

                                )
                            )
                        )
                    )
                        .ItemID("GridTransactionGroup").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Store(
                        X.StoreForModel()
                                .Listeners(l => l.BeforeLoad.Handler = "App.TransactionGroup.queryById('GridTransactionGroup').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.TransactionGroup.queryById('antiForgeryToken').getValue());")
                                .Proxy(Html.X().AjaxProxy()
                                .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(15)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                                   .Listeners(l => l.DataChanged.Handler = "App.TransactionGroup.queryById('GridTransactionGroup').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                         .Listeners(l =>
                         {
                             l.AfterRender.Handler = "var grid = App.TransactionGroup.queryById('GridTransactionGroup');grid.setHeight(App.EventsWin.getHeight() - 83); ";

                         })
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                            Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                Html.X().Column().DataIndex(Model, m => m.fldName).Text("عنوان").Flex(8).Wrap(true)
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )
            )
        )
)

<script type="text/javascript">

    function showHelp_VideoTransactionGroup() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/TransactionGroup/VideoWinTransactionGroup',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });

    }

    function TransactionGroupSetSize() {
        App.TransactionGroup.setWidth(App.EventsWin.getWidth());
        var grid = App.TransactionGroup.queryById('GridTransactionGroup');
        grid.setHeight(App.EventsWin.getHeight() - 83);
    }
    function NewTransactionGroup() {
        App.EventsWin.body.mask("در حال بارگذاری...");
        Ext.net.DirectMethod.request({
            url: '/TransactionGroup/new',
            params: {
                id: 0
            },
            success: function () {
                App.EventsWin.body.mask().hide();
            }
        });
    }
    function EditTransactionGroup() {
        var SelectedRow = App.TransactionGroup.queryById('GridTransactionGroup').selModel.getLastSelected();

        if (SelectedRow != null) {
            App.EventsWin.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/TransactionGroup/new',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function () {
                    App.EventsWin.body.mask().hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteTransactionGroup() {
        var SelectedHeaderRow = App.TransactionGroup.queryById('GridTransactionGroup').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        App.EventsWin.body.mask("در حال انجام عملیات...");
                        Ext.net.DirectMethod.request({
                            url: '/TransactionGroup/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId,
                                TimeStamp: SelectedHeaderRow.data.fldTimeStamp,
                                __RequestVerificationToken: App.TransactionGroup.queryById('antiForgeryToken').getValue()
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1) {
                                    ic = Ext.MessageBox.ERROR;
                                }
                                    Ext.MessageBox.show({
                                        title: data.MsgTitle,
                                        msg: data.Msg,
                                        icon: ic,
                                        buttons: Ext.MessageBox.OK
                                    });
                                    App.TransactionGroup.queryById('GridTransactionGroup').store.load();


                                    App.EventsWin.body.mask().hide();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function HelpTransactionGroup() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/TransactionGroup/HelpTransactionGroup',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
</script>

