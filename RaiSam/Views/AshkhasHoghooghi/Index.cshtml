@model RaiSam.Models.prs_tblAshkhasHoghooghiSelect
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;

@{
    var X = Html.X();
}
<style>
    .borderr {
        border-radius: 20px;
        border-width: 3px;
    }
</style>
@(X.Panel()
    .Title("اشخاص حقوقی")
    .Border(false)
    .ID("Hoghooghi")
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Listeners(li => li.AfterRender.Handler = "setHeightHoghooghi();")
    .Items(
             X.AntiForgeryField()
            .ItemID("antiForgeryToken")
            .Hidden(true),
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(Ext.Net.LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .ItemID("GridHoghooghi")
                    .BottomBar(X.PagingToolbar())
                    .TopBar(
                        Html.X().Toolbar()
                            .Items(
                                X.Button()
                                    .Text("جدید")
                                    .Icon(Ext.Net.Icon.Add)
                                    .Listeners(li => li.Click.Handler = "NewHoghooghi();"),
                                X.Button()
                                    .Text("ویرایش")
                                    .Icon(Ext.Net.Icon.Pencil)
                                    .Listeners(li => li.Click.Handler = "EditHoghooghi();"),
                                X.Button()
                                    .Text("حذف")
                                    .Icon(Ext.Net.Icon.Delete)
                                    .Listeners(li => li.Click.Handler = "DeleteHoghooghi();"),
                                X.Button()
                                    .Text("افزودن تماس")
                                    .Icon(Ext.Net.Icon.PhoneAdd)
                                    .Listeners(li => li.Click.Handler = "SaveContact();"),
                                X.SplitButton()
                                    .Text("راهنما")
                                    .Icon(Ext.Net.Icon.Help)
                                    .Menu(X.Menu()
                                    .Items(
                                    X.MenuItem()
                                                .Text("راهنما متنی")
                                                .Icon(Ext.Net.Icon.TextPaddingTop)
                                                        .Listeners(l => l.Click.Handler = "HelpHoghooghi()")
                                                .ItemID("btnshowHelpDirectorate"),
                                        X.MenuItem()
                                                .Text("راهنما تصویری")
                                                .Icon(Ext.Net.Icon.PlayBlue)
                                                    .Listeners(l => l.Click.Handler = "showHelp_VideoHoghooghi()")

                                )
                            )
                        )
                    )
                    .Store(
                        X.StoreForModel()
                             .Listeners(l => l.BeforeLoad.Handler = "App.Hoghooghi.queryById('GridHoghooghi').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.Hoghooghi.queryById('antiForgeryToken').getValue());")
                            .Listeners(l => l.DataChanged.Handler = "App.Hoghooghi.queryById('GridHoghooghi').selModel.refresh();")
                            .Proxy(Html.X().AjaxProxy()
                                .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                                .Url(Url.Action("Read"))
                                .Reader(Html.X().JsonReader().Root("data"))
                        )
                            .PageSize(20)
                            .RemoteFilter(true)
                            .RemotePaging(true)
                    )
                    .ViewConfig(
                        X.GridView()
                            .LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                        Html.X().RowNumbererColumn(),
                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                             Html.X().Column().DataIndex(Model, m => m.fldTimeStamp).Text("").Hidden(true).Flex(1),
                            Html.X().Column().DataIndex(Model, m => m.fldName).Text("نام").Flex(7).Wrap(true),
                            Html.X().Column().DataIndex(Model, m => m.fldNationalCode).Text("شناسه ملی").Flex(2).Wrap(true),
                            Html.X().Column().DataIndex(Model, m => m.fldTarikhTasis).Text("تاریخ تاسیس").Flex(2)
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )
                )
            )
)

<script type="text/javascript">
    function showHelp_VideoHoghooghi() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/AshkhasHoghooghi/VideoWinAshkhasHoghooghi',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });

    }
    function HelpHoghooghi() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/AshkhasHoghooghi/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }



    function setHeightHoghooghi() {
        App.Hoghooghi.queryById('GridHoghooghi').setHeight(App.BasicInfWin.getHeight() - 83);
        Ext.net.Mask.hide();
        InsertToLog("تعریف اشخاص حقوقی",2, true);
    }



    function EditHoghooghi() {
        var SelectedRow = App.Hoghooghi.queryById('GridHoghooghi').selModel.getLastSelected();
        if (SelectedRow != null) {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: '/AshkhasHoghooghi/New',
                    params: {
                        Id: SelectedRow.data.fldId
                    },
                    success: function () {
                        /*Ext.net.Mask.hide();*/
                    }
                });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function NewHoghooghi() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/AshkhasHoghooghi/New',
            params: {
                Id: 0
            },
            success: function () {
                /*Ext.net.Mask.hide();*/
            }
        });
    }

    function SaveContact() {
        var SelectedRow = App.Hoghooghi.queryById('GridHoghooghi').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Contact/NewPerHuman',
                params: {
                    ShakhsId: SelectedRow.data.fldId,
                    Name: SelectedRow.data.fldName ,
                    State:3
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک شخص را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteHoghooghi() {
        var SelectedRow = App.Hoghooghi.queryById('GridHoghooghi').selModel.getLastSelected();
        if (SelectedRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                            Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                            Ext.net.DirectMethod.request({
                                url: '/AshkhasHoghooghi/Delete',
                                params: {
                                    Id: SelectedRow.data.fldId,
                                    TimeStamp: SelectedRow.data.fldTimeStamp,
                                    __RequestVerificationToken: App.Hoghooghi.queryById('antiForgeryToken').getValue()
                                },
                                success: function (data) {
                                    chat.server.reloadLog();
                                    if (data.Er == 1 && data.Change == 1) {/*vaghti TimeStamp==0*/
                                        Ext.MessageBox.show({
                                            title: data.MsgTitle,
                                            msg: data.Msg,
                                            icon: Ext.MessageBox.WARNING,
                                            buttons: Ext.MessageBox.OK,
                                            fn: function (btn) {
                                                if (btn == 'ok') {
                                                    App.Hoghooghi.queryById('GridHoghooghi').store.load();
                                                }
                                            }
                                        });
                                    }
                                    else if (data.Er == 1 && data.Change == 2) {/*vaghti TimeStamp==2*/
                                        Ext.MessageBox.show({
                                            title: data.MsgTitle,
                                            msg: data.Msg,
                                            icon: Ext.MessageBox.ERROR,
                                            buttons: Ext.MessageBox.OK,
                                            fn: function (btn) {
                                                if (btn == 'ok') {
                                                    App.Hoghooghi.queryById('GridHoghooghi').store.load();
                                                }
                                            }
                                        });
                                    }
                                    else if (data.Er == 1) {
                                        Ext.MessageBox.show({
                                            title: data.MsgTitle,
                                            msg: data.Msg,
                                            icon: Ext.MessageBox.ERROR,
                                            buttons: Ext.MessageBox.OK
                                        });
                                    }
                                    else {
                                        Ext.MessageBox.show({
                                            title: data.MsgTitle,
                                            msg: data.Msg,
                                            icon: Ext.MessageBox.INFO,
                                            buttons: Ext.MessageBox.OK
                                        });
                                        App.Hoghooghi.queryById('GridHoghooghi').store.load();
                                    }


                                    Ext.net.Mask.hide();
                                }
                            });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>

