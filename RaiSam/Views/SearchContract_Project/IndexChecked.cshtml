@model IEnumerable<RaiSam.Models.prs_tblContract_ProjectSelect>
@using Ext.Net.MVC;
@{
    var X = Html.X();
}
<script>
    Ext.net.FilterHeader.behaviour.string[0].match = function (recordValue, matchValue) {
        return (Ext.net.FilterHeader.behaviour.getStrValue(recordValue) || "").indexOf(matchValue) > -1;
    };

    Ext.net.FilterHeader.behaviour.string[0].getStrValue = function (value) {
        return value.toString();
    };


    Ext.net.FilterHeader.behaviour.string[0].serialize = function (value) {
        return {
            type: "string",
            op: "*",
            value: value
        };
    };
</script>
@(Html.X().Window()
    .Width(600)
    .Height(350)
    .Title("لیست پروژه ها")
    .ID("SearchContract")
    .Closable(true)
    .Modal(true)
    .Layout(Ext.Net.LayoutType.Fit)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .Border(false)
                    .TopBar(
                        Html.X().Toolbar()
                            .Items(
                                X.Button()
                                    .Text("انتخاب")
                                    .Icon(Ext.Net.Icon.ArrowRedo)
                                    .Listeners(li => li.Click.Handler = "NextSearchContract();")
                                )
                        )
                    .ItemID("GridSearchContract")
                    .Store(
                        X.StoreForModel()
                            .Listeners(l => l.Load.Handler = "GetCheckedData()")
                            .Proxy(Html.X().AjaxProxy()
                                    .Url(Url.Action("ReadChecked"))
                                    .Reader(Html.X().JsonReader().Root("data"))
                                            .ExtraParams(x => x.Add(new { state = @ViewBag.state, Malek = @ViewBag.Malek }))
                        )
                        .PageSize(20000)
                        .RemoteFilter(false)
                        .RemotePaging(false)
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(false))
                    .ColumnModel(
                                  Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("عنوان").Wrap(true).Flex(7),
        // Html.X().Column().DataIndex(Model.Project, m => m.fldNameCompany).Text("نام شرکت").Wrap(true).Flex(7),
                                Html.X().Column().DataIndex(Model, m => m.fldShomareContract).Text("شماره قرارداد").Wrap(true).Flex(5),
                                Html.X().Column().DataIndex(Model, m => m.fldTarikhContract).Text("تاریخ قرارداد").Wrap(true).Flex(5),
                                Html.X().Column().DataIndex(Model, m => m.fldShomareMovafeghat).Text("شماره موافقتنامه").Wrap(true).Flex(5),
                                Html.X().Column().DataIndex(Model, m => m.fldTarikhMovafeghat).Text("تاریخ موافقتنامه").Wrap(true).Flex(5)
                    )
                  //  .Listeners(a => a.CellDblClick.Handler = "NextSearchContract();")
                    .SelectionModel(
                        Html.X().CheckboxSelectionModel().CheckOnly(true)
        //.Listeners(l =>
        //{
        //    l.Deselect.Fn = "getDeselectData";
        //})
                            .PruneRemoved(false)
                            .Mode(Ext.Net.SelectionMode.Multi)
                    )
            )
        )
)

<script type="text/javascript">
    /*var editMode = false;*/
    /*var deletedata = new Array();*/
    function GetCheckedData() {

        var ContractId = "";
        if ('@ViewBag.state' == 1)
            ContractId = App.RptBarname.queryById("fldContractId").getValue();
        else if ('@ViewBag.state' == 2)
            ContractId = App.RptKoliBarname.queryById("fldContractId").getValue();

        var AllRow = ContractId.split(',');
        for (var i = 0; i < AllRow.length-1; i++) {
            var index2 = App.SearchContract.queryById("GridSearchContract").getStore().findExact("fldId", parseInt(AllRow[i]));
            App.SearchContract.queryById("GridSearchContract").getSelectionModel().select(index2, true);
        }
    }


    function NextSearchContract() {
        var SelectedRow = App.SearchContract.queryById('GridSearchContract').getSelectionModel().getSelection();
        var ContractTitle = "";
        var ContractId = "";
        for (var i = 0; i < SelectedRow.length; i++) {

            ContractId = ContractId + SelectedRow[i].data.fldId + ",";
            ContractTitle = ContractTitle + SelectedRow[i].data.fldTitle + "،";
        }
        if ('@ViewBag.state' == 1) {
            App.RptBarname.queryById("txtContract").setValue(ContractTitle);
            App.RptBarname.queryById("fldContractId").setValue(ContractId);
        }
        else if ('@ViewBag.state' == 2) {
            App.RptKoliBarname.queryById("txtContract").setValue(ContractTitle);
            App.RptKoliBarname.queryById("fldContractId").setValue(ContractId);
        }
        App.SearchContract.destroy();

    }
</script>