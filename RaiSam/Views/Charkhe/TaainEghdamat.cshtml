@model RaiSam.Models.CharkheAction
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
    var perr = false;
    if (RaiSam.Models.Permission.haveAccess(153, "tblCharkhe_Eghdam", "0"))/*دسترسی اقدامات*/
    {
        perr = true;
    }
}
<script>
    Ext.net.FilterHeader.behaviour.string[0].match = function (recordValue, matchValue) {
        return (Ext.net.FilterHeader.behaviour.getStrValue(recordValue) || "").indexOf(matchValue) > -1;
    };

    Ext.net.FilterHeader.behaviour.string[0].getStrValue = function (value) {
        return value.toString();
    };

    Ext.net.FilterHeader.behaviour.string[0].serialize = function (value) {
        return {
            type: "string",
            op: "*",
            value: value
        };
    };

    var ShowIcon_Action_Charkhe = function (value, record) {
        if (value == null) {
            return "";
        }
        else {
            pic = "data:image/png;base64," + value;
            var template = "<img src=" + pic + " style='width:17px;height:17px;' />";
            return template;
        }
    };
</script>
@(Html.X().Window()
    .Closable(true)
    .CloseAction(CloseAction.Destroy)
    .Layout(LayoutType.Fit)
    .Modal(true)
    .ID("TaainEghdamat_Charkhe")
    .Listeners(l => l.AfterRender.Handler = "setSizeTaainEghdamat_Charkhe();LoadTaainEghdamat_Charkhe();")
    .Title("تعیین اقدامات")
    .ButtonAlign(Alignment.Center)
    .Buttons(
        Html.X().Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
            .ItemID("btnSave")
            .Listeners(l => l.Click.Handler = "Save()"),
        Html.X().Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .Listeners(l => l.Click.Handler = "App.TaainEghdamat_Charkhe.hide()")
    )
    .Items(
            X.AntiForgeryField()
            .ItemID("antiForgeryToken")
            .Hidden(true),
        X.Hidden().ItemID("fldCharkheId"),
        X.Panel()
            .Border(false)
            .Layout(LayoutType.VBox)
            .ItemID("pnlOne")
            .Padding(0)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                 X.FieldSet()
                    .Padding(0)
                    .Defaults(new { Margin = 2 })
                    .Border(false)
                    .Layout(LayoutType.Table)
                    .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                    .Items(
                        X.GridPanel()
                            .AutoScroll(true)
                            .Title("<div>لیست اقدامات&nbsp;&nbsp<input id=btnnewaction style='font-family:tahoma;font-size:11px;display: none;' type='button' value='جدید' onclick='javascript:GotoNewActions()'></div>")
                            .TitleAlign(TitleAlign.Right)
                            .Frame(true)
                            .ItemID("GridActions")
                            .Listeners(l =>
                            {
                                l.Select.Fn = "AddGridSelectedActions";
                                l.Deselect.Fn = "RemoveGridSelectedActions";
                            })
                            .Store(
                                X.StoreFor(Model.Actions)
                                    .Listeners(l => l.Load.Handler = "setCheckedItem()")
                                        .Listeners(l => l.BeforeLoad.Handler = "App.TaainEghdamat_Charkhe.queryById('GridActions').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.TaainEghdamat_Charkhe.queryById('antiForgeryToken').getValue());")
                                    .Proxy(Html.X().AjaxProxy()
                                        .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                                        .Url(Url.Action("ReadAction"))
                                        .Reader(Html.X().JsonReader().Root("data"))
                                        .ExtraParams(x => x.Add(new { NoeGhabelCharkheshId = @ViewBag.NoeGhabelCharkheshId }))
                                    )
                                    .PageSize(1000)
                                    .RemoteFilter(false)
                                    .RemotePaging(false)
                            )
                            .View(
                                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                            )
                            .Plugins(X.FilterHeader().Remote(false))
                            .ColumnModel(
                                Html.X().RowNumbererColumn(),
                                Html.X().Column().DataIndex(Model.Actions, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                Html.X().Column().DataIndex(Model.Actions, m => m.fldFile).Text("").Filterable(false).Flex(1).Renderer("ShowIcon_Action_Charkhe").Align(Ext.Net.Alignment.Center),
                                Html.X().Column().DataIndex(Model.Actions, m => m.fldName).Text("نام اقدام").Flex(4).Wrap(true),
                                Html.X().Column().DataIndex(Model.Actions, m => m.fldDesc).Text("توضیحات").Flex(3).Wrap(true)
                            )
                            .SelectionModel(
                                Html.X().CheckboxSelectionModel().CheckOnly(true).PruneRemoved(false)
                                    .Mode(Ext.Net.SelectionMode.Multi)
                            ),
                        X.GridPanel()
                            .AutoScroll(true)
                            .Title("لیست اقدامات انتخاب شده")
                            .Frame(true)
                            .TitleAlign(TitleAlign.Right)
                            .ItemID("GridSelectedActions")
                            .Features(X.Grouping().EnableGroupingMenu(true).StartCollapsed(false).GroupHeaderTplString("{name}"))
                            .Store(
                                X.StoreFor(Model.Charkhe_Eghdam)
                                    .AutoLoad(false)
                                         .Listeners(l => l.BeforeLoad.Handler = "App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.TaainEghdamat_Charkhe.queryById('antiForgeryToken').getValue());")
                                            .Proxy(Html.X().AjaxProxy()
                                            .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                                        .Url(Url.Action("ReadEkhtesas"))
                                        .Reader(Html.X().JsonReader().Root("data"))
                                    )
                                    .PageSize(25)
                                    .RemoteFilter(false)
                                    .RemotePaging(false)
                            )
                            .View(
                                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                            )
                            .Plugins(X.FilterHeader().Remote(false))
                            .ColumnModel(
                                Html.X().Column().DataIndex(Model.Charkhe_Eghdam, m => m.fldId).Text("کد جدول").Hidden(true).Flex(1),
                                Html.X().Column().DataIndex(Model.Charkhe_Eghdam, m => m.fldEghdamId).Text("کد اقدام").Hidden(true).Flex(1),
                                Html.X().ImageCommandColumn().Align(Ext.Net.Alignment.Center).Sortable(false).Listeners(l => l.Command.Fn = "SetOrder").PrepareCommand("showhideorder").Flex(1).Commands(
                                Html.X().ImageCommand().CommandName("RowDown").Icon(Ext.Net.Icon.ArrowDown),
                                Html.X().ImageCommand().CommandName("RowUp").Icon(Ext.Net.Icon.ArrowUp)),
                                Html.X().Column().DataIndex(Model.Charkhe_Eghdam, m => m.fldNameEghdam).Text("نام اقدام").Flex(3),
                                Html.X().ComponentColumn().ID("ColActive_CharkheEghdam").DataIndex(Model.Charkhe_Eghdam, m => m.fldActive).Listeners(l => l.Bind.Fn = "setValueCboTypeActive").Flex(1).Editor(false).Text("وضعیت")
                                    .Component(
                                        X.ComboBox()
                                            .ItemID("CboTypeActive")
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .BlankText("لطفا وضعیت اقدام را در چرخه مورد نظر انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .AllowBlank(false)
                                            .EmptyText("وضعیت...")
                                            .Items(
                                                new ListItem("فعال", 1),
                                                new ListItem("غیرفعال", 0)
                                            )
                                    ),
                                Html.X().ImageCommandColumn().Align(Ext.Net.Alignment.Center).Listeners(l => l.Command.Fn = "DeleteGridSelectedActions").Flex(1)
                                    .Commands(
                                        Html.X().ImageCommand().CommandName("CmpDel").Icon(Ext.Net.Icon.Delete).ToolTip(tt => tt.Text = "حذف")
                                    )
                            )
                            .SelectionModel(
                                Html.X().RowSelectionModel()
                                    .Mode(Ext.Net.SelectionMode.Single)
                            )
                        )
                )
        )
)

<script type="text/javascript">

    var setValueCboTypeActive = function (columnn, component, record, rowIndex) {
        if (record.data.fldActive == true) {
            component.setValue(1);
        }
        else {
            component.setValue(0);
        }
    };

    var SetOrder = function (grid, command, record, rowIndex) {
        var grid = App.TaainEghdamat_Charkhe.queryById("GridSelectedActions");
        if (command == 'RowDown') {
            grid.getStore().remove(record);
            grid.getStore().insert(rowIndex + 1, record);
            grid.getView().refresh();
        }
        else {
            grid.getStore().remove(record);
            grid.getStore().insert(rowIndex - 1, record);
            grid.getView().refresh();
        }
    };

    var showhideorder = function (grid, command, record, rowIndex) {
        if (command.command == 'RowDown') {
            if (rowIndex == App.TaainEghdamat_Charkhe.queryById("GridSelectedActions").store.count() - 1) {
                command.disabled = true;
            }
            else {
                command.disabled = false;
            }
        }
        else {
            if (rowIndex == 0) {
                command.disabled = true;
            }
            else {
                command.disabled = false;
            }
        }
    };

    function setSizeTaainEghdamat_Charkhe() {
        var splitWidth = (Ext.getBody().getViewSize().width - 400) / 2;
        var Height = (Ext.getBody().getViewSize().height - 260);
        App.TaainEghdamat_Charkhe.setWidth(Ext.getBody().getViewSize().width - 380);
        App.TaainEghdamat_Charkhe.queryById('GridActions').setSize(splitWidth, Height);
       App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').setSize(splitWidth, Height);
    }

    function Save() {
        var fldCharkheId = App.TaainEghdamat_Charkhe.queryById('fldCharkheId').getValue();
        var Grid = App.TaainEghdamat_Charkhe.queryById('GridSelectedActions');
        var Actions = new Array();
        var er = false;

        if (Grid.store.count() == 0) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا اقدامات مورد نظر خود را انتخاب کنید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            er = true;
        }
        if (er == true) {
            return;
        }
        else {
            for (var i = 0; i < Grid.store.count() ; i++) {
                var item = Grid.store.data.items[i];
                Actions.push({
                    "fldId": item.data.fldId,
                    "fldEghdamId": item.data.fldEghdamId,
                    "fldNameEghdam": item.data.fldNameEghdam,
                    "fldOrderId": Grid.store.indexOf(item) + 1,
                    "fldActive": App.ColActive_CharkheEghdam.getComponent(i).getValue(),
                    "fldActiveName": App.ColActive_CharkheEghdam.getComponent(i).getDisplayValue()
                });
            }
            var data = {
                Actions1: JSON.stringify(Actions),
                CharkheId: fldCharkheId,
                __RequestVerificationToken: App.TaainEghdamat_Charkhe.queryById('antiForgeryToken').getValue()
            };
            App.TaainEghdamat_Charkhe.body.mask("در حال ذخیره سازی");
            $.ajax({
                type: "POST",
                url: '/Charkhe/SaveAction',
                /*datatype: "json",*/
                data: data,
                /*contentType: 'application/json',*/
                success: function (result) {
                    chat.server.reloadLog();
                     var ic = Ext.MessageBox.INFO;
                    if (result.Er == 1) {
                        ic = Ext.MessageBox.ERROR;
                    }

                    Ext.MessageBox.show({
                        title: result.MsgTitle,
                        msg: result.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                    App.TaainEghdamat_Charkhe.body.mask().hide();
                    App.Charkhe.queryById('GridCharkhe').store.load();
                },
                failure: function (data) {
                    alert(data.data);
                }
            });
        }

    }

    function GotoNewActions() {
        App.TaainEghdamat_Charkhe.body.mask("در حال بارگذاری...");
        Ext.net.DirectMethod.request({
            url: '/Actions/New',
            params: {
                id: 0
            },
            success: function (data) {
                App.TaainEghdamat_Charkhe.body.mask().hide();
            }
        });
    };

    function LoadTaainEghdamat_Charkhe() {
        if ('@perr' == 'True') {
            $('#btnnewaction').show();
        }
        App.TaainEghdamat_Charkhe.queryById('fldCharkheId').setValue(@ViewBag.CharkheId);
        App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').getStore().getProxy().setExtraParam("CharkheId", '@ViewBag.CharkheId');
        App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').getStore().load();
    }

      var SearchMatch = function (record) {
        return record.query = new RegExp(record.query.replace("(", "[(]").replace(")", "[)]"), 'i');
    };

    var AddGridSelectedActions = function (selectionModell, rec, index) {
        if (App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').store.findExact("fldEghdamId", rec.data.fldId) == -1) {
            var index = App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').getStore().count();
            App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').store.insert(index, {
                fldId: 0, fldEghdamId: rec.data.fldId, fldNameEghdam: rec.data.fldName,fldActive:true
            });
            App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').store.group();
        }
    };

    var RemoveGridSelectedActions = function (selectionModell, rec, index) {
        App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').store.removeAt(App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').store.findExact("fldEghdamId", rec.data.fldId));
    };

    function DeleteGridSelectedActions(grid, command, record, row) {
        if (command == 'CmpDel') {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').store.remove(record);
                        var indexx = App.TaainEghdamat_Charkhe.queryById('GridActions').store.findExact("fldId", record.data.fldEghdamId);
                        if (indexx != -1) {
                            App.TaainEghdamat_Charkhe.queryById('GridActions').getSelectionModel().deselect(indexx, true);
                        }
                    }
                }
            });
        }
    }

    function setCheckedItem() {
        App.TaainEghdamat_Charkhe.queryById('GridSelectedActions').getStore().each(function (record) {
            var indexx = App.TaainEghdamat_Charkhe.queryById('GridActions').store.findExact("fldId", record.data.fldEghdamId);
            if (indexx != -1) {
                App.TaainEghdamat_Charkhe.queryById('GridActions').getSelectionModel().select(indexx, true);
            }
        });
    }

</script>