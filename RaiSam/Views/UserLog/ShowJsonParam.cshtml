@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
    .Width(740)
    .Height(250)
    .Title("لیست پارامتر ها")
    .ID("WinJsonParam")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(LayoutType.Fit)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .OnClientClick("App.WinJsonParam.hide();"))
    .Items(
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(LayoutType.Fit)
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .Border(false)
                    .ItemID("GridJsonParam")
                    .Listeners(l => l.AfterRender.Handler = "loadJsonParams()")
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(SelectionMode.Single))
                )
        )
)

<script type="text/javascript">
    function loadJsonParams() {
        var grid=App.WinJsonParam.queryById("GridJsonParam");
        Ext.net.DirectMethod.request({
            url: '/UserLog/GetFieldFromJson',
            params: {
                JsonParametr:JSON.stringify(@Html.Raw(ViewBag.JsonParametr))
            },
            success: function (data) {
                var modelFields = new Array();
                for (var i = 0; i < data.Keys.length; i++) {
                    modelFields.push(data.Keys[i]);
                    var column = Ext.create('Ext.grid.column.Column', {
                        text: data.Keys[i],
                        dataIndex: data.Keys[i],
                        wrap: true,
                        flex:1
                    });
                    grid.headerCt.insert(
                      grid.columns.length-1,
                      column);
                }
                Ext.define('JsonParamModel', {
                    extend: 'Ext.data.Model',
                    fields: modelFields
                });
                var myStore = Ext.create('Ext.data.Store', {
                    model: 'JsonParamModel',
                    proxy: {
                        type: 'ajax',
                        url: '@Url.Action("LoadJsonData", "UserLog")',
                        reader: {
                            type: 'json',
                            root: 'data'
                        }
                    },
                    autoLoad:false
                });
                grid.bindStore(myStore);
                grid.getStore().getProxy().setExtraParam('JsonParametr', JSON.stringify(@Html.Raw(ViewBag.JsonParametr)));
                grid.getStore().load();
                grid.getView().refresh();
            }
        });
    }
</script>
