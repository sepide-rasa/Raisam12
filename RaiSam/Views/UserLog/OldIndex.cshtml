@model IEnumerable<RaiSam.Models.prs_UserLogSelect>
@using Ext.Net.MVC
@using RaiSam.Models
@using Ext.Net;
@using Hogaf.ExtNet.UX
@{
    var X = Html.X();
    UserInfo user = (UserInfo)(Session["User"]);
    var useridd = user.UserId;



}

<script>

    $().Ribbon({ theme: 'windows7' }, '1');
    Ext.net.FilterHeader.behaviour.string[0].match = function (recordValue, matchValue) {
        return (Ext.net.FilterHeader.behaviour.getStrValue(recordValue) || "").indexOf(matchValue) > -1;
    };

    Ext.net.FilterHeader.behaviour.string[0].getStrValue = function (value) {
        return value.toString();
    };

    Ext.net.FilterHeader.behaviour.string[0].serialize = function (value) {
        return {
            type: "string",
            op: "*",
            value: value
        };
    };

</script>
<style>
    .row-imagecommand {
        display: inline-block;
        float: none !important;
    }

    .borderrGK {
        border-radius: 20px;
        border-width: 3px;
    }

    .disabled-row .x-grid-cell {
        color: gray !important;
    }

    .fontCls {
        font-size: 10px;
        word-wrap: break-word;
        text-align: center;
    }

    .ColorrRowGK .x-grid-cell, .x-grid-rowwrap-div {
        background-color: #55F0EC !important;
    }

    .infoPanelSuccess {
        border: solid 1px #d6e9c6 !important;
        background: #dff0d8 !important;
        border-radius: 4px !important;
        box-shadow: 0 0 10px #ccc !important;
    }

    .infoPanelError {
        border: solid 1px #ebccd1 !important;
        background: #f2dede !important;
        border-radius: 4px !important;
        box-shadow: 0 0 10px #ccc !important;
    }

    .x-infopanel-danger .x-infopanel-body {
        background: #f2dede !important;
        color: #a94442 !important;
    }

    .x-infopanel-success .x-infopanel-body {
        background: #dff0d8 !important;
        color: #3c763d !important;
    }
</style>

@(X.Panel()
    .Border(false)
    .Title("ردپای کاربران")
    .ID("UserLog")
    .Listeners(l => l.AfterRender.Handler = "UserLogSetSize()")
    .Closable(true)
        .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
                            .Listeners(l => l.BeforeClose.Handler = "OpenedLogForm=false;")
    .Layout(LayoutType.Fit)
    .Items(
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Items(
                X.Panel()
                    .ID("pnlParentSearch")
                    .Border(false)
                    .Padding(5)
                    .Frame(true)
                    .Layout(LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    .MarginSpec("5px 5px 5px 5px")
                    .Items(
                        X.Panel()
                            .Title("فیلتر جستجو")
                            .ItemID("pnlSearch")
                            .Collapsible(true)
                            .AnimCollapse(true)
                            .Listeners(l =>
                            {
                                l.Collapse.Handler = "DecreaseGridSize()";
                                l.Expand.Handler = "IncreaseGridSize()";
                            })
                            .Layout(LayoutType.VBox)
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                            .Items(
                                X.Panel()
                                    .Layout(LayoutType.Table)
                                    .Border(false)
                                    .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                                    .Padding(10)
                                    .Defaults(new { Margin = 2 })
                                        .Items(
                                        X.Label("از تاریخ:"),
                                    X.PDateField()
                                        .ItemID("txtStartDate")
                                        .AutoFocus(true)
                                        .AllowBlank(false)
                                        .BlankText("لطفا تاریخ شروع را وارد کنید.")
                                        .Editable(true)
                                        .MaskRe("/[0-9 /]/")
                                        .MaxLength(10)
                                        .EnforceMaxLength(true)
                                        ,
                                             X.Label("تا تاریخ:"),
                                        X.PDateField()
                                            .ItemID("txtEndDate")
                                            .AutoFocus(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا تا تاریخ را وارد کنید.")
                                            .Editable(true)
                                            .MaskRe("/[0-9 /]/")
                                            .MaxLength(10)
                                            .EnforceMaxLength(true)
                                            ,
                                        X.FieldSet()
                                            .Border(false)
                                            .ColSpan(4)
                                            .Layout(LayoutType.VBox)
                                            .Padding(0)
                                            .ItemID("FieldsetSearch")
                                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Left })
                                                .Listeners(l => l.AfterRender.Handler = "App.UserLog.queryById('FieldsetSearch').setWidth(App.UserLogWin.width-984)")
                                            .Items(
                                                X.Button()
                                                    .Text("جستجو")
                                                    .Icon(Ext.Net.Icon.Magnifier)
                                                        .Listeners(li => li.Click.Handler = "LoadGridLog();"))
                                        )
                            )
                ),
                X.Panel()
                    .Border(false)
                    .Frame(true)
                    .MarginSpec("5px 5px 5px 5px")
                    .Items(

                        X.GridPanel()
                            .AutoScroll(true)
                            .ItemID("GridUserLog")
                            .BottomBar(X.PagingToolbar().HideRefresh(true))
                            .Store(
                                X.StoreForModel()
                                    .PageSize(25)
                                    .RemoteFilter(false)
                                    .RemotePaging(false)
                                    .Listeners(l => l.DataChanged.Handler = "App.UserLog.queryById('GridUserLog').selModel.refresh();")
                            )
                            .ViewConfig(
                                X.GridView()
                                    .PreserveScrollOnRefresh(true)
        // .GetRowClass(l => l.Fn = "getRowClassGridLocGK")
                                    .LoadingText("در حال بارگذاری...").RTL(true)
                            )
                            .Plugins(X.FilterHeader().Remote(false))
                            .ColumnModel(
                                    Html.X().RowNumbererColumn(),
        //Html.X().Column().DataIndex(Model, m => m.fldGroupName).Text("نام تراکنش").Flex(2).Wrap(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldName).Text("نام کاربر").Flex(2).Wrap(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldFamily).Text("نام خانوادگی").Flex(3).Wrap(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldCodeMeli).Text("کد ملی").Flex(2),
                                    Html.X().Column().DataIndex(Model, m => m.fldCodeEnhesari).Text("کد انحصاری").Flex(2).Wrap(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldFaName).Text("نام جدول").Flex(3).Wrap(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldTypeName).Text("نوع عملیات").Flex(2).Wrap(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldStatusName).Text("نتیجه تراکنش").Flex(2).Wrap(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldTarikh).Text("تاریخ").Flex(2).Wrap(true),
                                    Html.X().Column().DataIndex(Model, m => m.fldTime).Text("ساعت").Flex(2).Wrap(true)

                            )
                            .SelectionModel(
                                Html.X().RowSelectionModel()
                                    .Mode(Ext.Net.SelectionMode.Single)
                            )
                    )
            )
        )
)

<script type="text/javascript">

    function UserLogSetSize() {
        OpenedLogForm = true;
        App.UserLog.queryById("GridUserLog").setHeight(App.UserLogWin.height - 140);
        App.UserLog.queryById('txtStartDate').setRawValue('@ViewBag.CurrentDate');
        App.UserLog.queryById('txtEndDate').setRawValue('@ViewBag.CurrentDate');
        LoadGridLog();
        Ext.net.Mask.hide();
    }
    function DecreaseGridSize() {
        App.UserLog.queryById("GridUserLog").setHeight(App.UserLogWin.height - 95);
        App.pnlParentSearch.doLayout();
    }

    function IncreaseGridSize() {
        App.UserLog.queryById("GridUserLog").setHeight(App.UserLogWin.height - 140);
        App.pnlParentSearch.doLayout();
    }

    function LoadGridLog() {
        var txtStartDate=App.UserLog.queryById("txtStartDate").getRawValue();
        var txtEndDate=App.UserLog.queryById("txtEndDate").getRawValue();
        if (txtStartDate != "" && txtEndDate != "") {
            App.UserLog.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/UserLog/Search',
                params: {
                    StartDate: txtStartDate,
                    EndDate: txtEndDate
                },
                success: function (data) {
                    if (data.Er == 0) {
                        App.UserLog.queryById('GridUserLog').store.loadData(data.ListUserLog);
                    }
                    else {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK
                        });
                    }
                    App.UserLog.body.mask().hide();
                },
                timeout: 7200000
            });
        }
    }

    $('#HelpMatni').click(function () {
            App.UserLog.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/UserLog/Help',
                success: function (data) {
                    App.UserLog.body.mask().hide();
                },
            });
    });
    $('#HelpVideo').click(function () {
        App.UserLog.body.mask("در حال بارگذاری...");
        Ext.net.DirectMethod.request({
            url: '/UserLog/VideoWinGeneralKartabl',
            success: function (data) {
                App.UserLog.body.mask().hide();
            },
        });
    });
</script>

