@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

@(Html.X().Window()
    .Modal(true)
    .Width(1100)
    .Height(350)
    .Title("تاریخچه رکورد")
    .ID("HistoryRec")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(LayoutType.Fit)
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        X.Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.DoorOut)
            .OnClientClick("App.HistoryRec.hide();"))
    .Items(
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(LayoutType.Fit)
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .Border(false)
                    .ItemID("GridHistoryRec")
                    .Listeners(l => l.AfterRender.Handler = "loadGridHistoryRec()")
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                            .GetRowClass(l => l.Fn = "typeIdRecColor")
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(SelectionMode.Single))
                )
        )
)

<script type="text/javascript">
    var typeIdRecColor = function (record, rowIndex, rowParams, store) {
        if (record.data.typeId == 3) {
            return "redroww";
        }
        if (record.data.typeId == 2) {
            return "yellowroww";
        }
    };

    function loadGridHistoryRec() {
        var grid = App.HistoryRec.queryById("GridHistoryRec");
        Ext.net.DirectMethod.request({
            url: '/UserLog/GetHistoryRec',
            params: {
                fldId: '@ViewBag.fldId',
                tableName: '@ViewBag.tableName'
            },
            success: function (data) {
                var modelFields = new Array();
                for (var i = 0; i < data.ColName.length; i++) {
                    modelFields.push(data.ColName[i]);
                    if (data.ColName[i] != "typeId") {
                        var column = Ext.create('Ext.grid.column.Column', {
                            text: data.ColName[i],
                            dataIndex: data.ColName[i],
                            wrap: true,
                            flex: 1
                        });
                        grid.headerCt.insert(
                          grid.columns.length - 1,
                          column);
                    }
                }
                grid.headerCt.setHeight(30);
                Ext.define('HistoryLogModel', {
                    extend: 'Ext.data.Model',
                    fields: modelFields
                });
                var myStore = Ext.create('Ext.data.Store', {
                    model: 'HistoryLogModel',
                    autoLoad: false
                });
                grid.bindStore(myStore);
                grid.store.loadData(data.Info);
            }
        });
    }
</script>
