@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}

<style>
    .custom-icon {
        margin-right: 124px !important;
    }
</style>
@(Html.X().Window().Modal(true).Listeners(li => { li.AfterRender.Handler = "LoadErja()"; li.Render.Fn = "addKeyMapErja"; })
.Width(500)//.Height(300)
    .Title("ثبت ارجاع")
             .ID("NewErja")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
        .ButtonAlign(Ext.Net.Alignment.Center)
        .Buttons(X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk)
                    .Listeners(l =>
                    {
                        l.Click.Handler = "SaveErja()";

                    })
                            .ItemID("btnSaveErja")
                    ,
                    X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                                .OnClientClick("App.NewErja.destroy();"))
    .Items(
        X.AntiForgeryField()
            .ItemID("antiForgeryToken").Hidden(true),
            X.FormPanel().Border(false)
            .Items(
                X.FieldSet().Border(true).Title("ارجاع")
                .Center()
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                .Defaults(new { Margin = 2 })
                .Items(
                X.Hidden().ItemID("fldId"),
                    X.Hidden().ItemID("ErjadahandeId"),
                    X.Label("تاریخ ارجاع:"),
                        X.PDateField()
                         .Listeners(l => l.AfterRender.Handler = "setDateTarikhErja()")
                        .AutoFocus(true)
                            .ItemID("txtTarikhErja")
                            .AllowBlank(false)
                            .BlankText("لطفا تاریخ ارجاع را وارد کنید.")
                            .Editable(true)
                            .MaskRe("/[0-9/]/")
                            .MaxLength(10)
                            .MinLength(10)
                            .EnforceMaxLength(true),
                    X.Label("ارجاع دهنده:"),
                        X.TextField()
                            .ItemID("txtErjaDahande")
                            .AllowBlank(false)
                            .ReadOnly(true)
                            .FieldStyle("padding-right:4px;")
                            .Icon(Icon.UserAdd)
                            .BlankText("لطفا ارجاع دهنده را وارد کنید.")
                            .Listeners(l =>
                            {
                                l.SpecialKey.Handler = "searchHuman(e.getKey())";
                                l.IconClick.Handler = "searchHuman(45)";
                                l.AfterRender.Handler = "App.NewErja.queryById('txtErjaDahande').icon.dom.classList.add('custom-icon');";
                            }),
                            X.Label("ساعت ارجاع:"),
                                 X.TextField()
                                .MaskRe("/[0-9/]/")
                                .FieldStyle("direction:ltr;")
                                .EmptyText("مثال: 730")
                                .MaxLength(4)
                                .MinLength(3)
                                .ItemID("txtSaatErja")
                                .AllowBlank(false)
                                .BlankText("لطفا ساعت ارجاع را وارد کنید.")
                                    .Listeners(l =>
                                    {
                                        l.Blur.Handler = "CheckSaat()";
                                    }),
                        X.Label("نوع ارجاع:"),
                        X.ComboBox()
                            .ItemID("CboTypeErja")
                            .Editable(false)
                            .TypeAhead(true)
                            .BlankText("لطفا نوع ارجاع را انتخاب کنید.")
                            .QueryMode(DataLoadMode.Local)
                            .TriggerAction(TriggerAction.All)
                            .AllowBlank(false)
                            .EmptyText("نوع ارجاع...")
                            .Items(
                                new ListItem("توسعه", "1"),
                                new ListItem("پشتیبانی", "0")
                                )
                            .SelectedItems(new { Value = "1" })

                    , X.Label("شرح ارجاع:"),
                        X.TextArea().Width(363)
                        .BlankText("لطفا شرح ارجاع را انتخاب کنید.")
                        .AllowBlank(false)
                        .ColSpan(4)
                    .ItemID("txtSharh")
                                 .Listeners(l => l.Focus.Handler = "App.NewErja.queryById('txtSharh').el.swallowEvent(['keypress', 'keydown']);")
                        )
                        , X.FieldSet().Width(460)
                            .Border(true)
                            .AutoScroll(true)
                            .Title("انتخاب فایل(حداکثر حجم مجاز: 30MB)")
                            .ID("fieldsetforfile")
                            .Layout(LayoutType.HBox)
                            .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Stretch })
                            .Items(
                                X.FormPanel()
                                    .Border(false)
                                    .Width(380)
                                    .Layout(LayoutType.HBox)
                                    .ItemID("fieldsetShowFile")
                                    .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Middle })
        //.Listeners(l => l.AfterRender.Handler = "App.NewHuman.queryById('fieldsetShowFile').setWidth(App.BasicInfWin.getWidth() - 1050)")
                                    .Items(
                                        X.FileUploadField()
                                            .MarginSpec("0 10px 10px 0")
                                            .Icon(Ext.Net.Icon.DiskUpload)
                                            .ButtonOnly(true)
                                            .ButtonText("انتخاب فایل")
                                            .DirectEvents(l =>
                                            {
                                                l.Change.Action = "Upload";
                                                l.Change.Delay = 1000;
                                                l.Change.Before = "if(GotoServerErja==false){return false;}";
                                                l.Change.Success = "hideprogressErja";
                                            })
                                                .Listeners(l => l.Change.Fn = "showFileErja"),
                                        X.Container()
                                            .Content(@<div id="fi-button-msg" style="width:570px;text-align:right;"><b>فایل انتخاب شده:</b></div>)
                                        )
                            )

                )
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
        )
)
<script type="text/javascript">
    var fldTimeStamp = 0;
    var FileId = 0;
    var DeleteFileErja = false;

    var GotoServerErja = false;
    var EndUploadErja = false;

    var CheckErja = setInterval(CheckEndErja, 500);

    function setDateTarikhErja() {
        if ('@ViewBag.Id' == '0') {
            var txtTarikh = App.NewErja.queryById('txtTarikhErja');
            var Maxdate = '@ViewBag.Tarikh';
            txtTarikh.setMaxValue(Maxdate);
            txtTarikh.maxText = "تاریخ ارجاع نمی تواند بزرگتر از تاریخ روز باشد.";
        }
    }
    function CheckEndErja() {
        if (EndUploadErja == true) {
            GotoServerErja = false;
            Ext.MessageBox.hide();
            Ext.Msg.alert('عملیات موفق', 'فایل با موفقیت آپلود شد.');
            clearInterval(CheckEndErja);
            EndUploadErja = false;
        }
    }
    var showFileErja = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        var el = Ext.get('fi-button-msg');
        if (v) {
            showProgressBarErja();
            if (v.split('.').pop().toLowerCase() == "xls" || v.split('.').pop().toLowerCase() == "xlsx" || v.split('.').pop().toLowerCase() == "pdf" ||
                v.split('.').pop().toLowerCase() == "doc" || v.split('.').pop().toLowerCase() == "docx" || v.split('.').pop().toLowerCase() == "ppt"
                || v.split('.').pop().toLowerCase() == "pps" || v.split('.').pop().toLowerCase() == "pptx" || v.split('.').pop().toLowerCase() == "ppsx") {
                if (document.getElementById(id).files[0].size <= 31457280) {
                    GotoServerErja = true;
                    el.update('<b>فایل انتخاب شده: ' + v + '</b>' + "&nbsp;&nbsp;" + '<img id="DeleteActionFileimg6" title="حذف فایل" src="/Content/cancel.png" style="width:15px;height:15px;margin-bottom: -4px;" onclick="javascript:DeleteFile_Erja()" />');
                }
                else {
                    clearInterval(CheckEndErja);
                    el.update('<b>فایل انتخاب شده:</b> ');
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "حجم فایل انتخاب شده غیرمجاز است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                }

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
            else {
                clearInterval(CheckEndErja);
                el.update('<b>فایل انتخاب شده:</b> ');
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "فایل انتخاب شده غیرمجاز است.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
            }
        }
    };

    function DeleteFile_Erja() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Erja/DeleteSessionFile',
            success: function (data) {
                DeleteFileErja = true;
                Ext.get('fi-button-msg').update('<b>فایل انتخاب شده:</b>');
                Ext.net.Mask.hide();
            }
        });
    }

    var hideprogressErja = function (Responsdtxt, ResponseObj) {
        if (ResponseObj.IsValid == true) {
            EndUploadErja = true;
        }
        else {
            var el = Ext.get('fi-button-msg');
            GotoServerErja = false;
            clearInterval(CheckEndErja);
            EndUploadErja = false;
            el.update('<b>فایل انتخاب شده:</b> ');
            Ext.MessageBox.show({
                title: "خطا",
                msg: ResponseObj.Message,
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    };

    function showProgressBarErja() {
        Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال آپلود فایل...',
            width: 300,
            wait: true,
            waitConfig:
            {
                interval: 200,
                text: 'در حال آپلود فایل...',
                scope: this
            }
        });
    }


    function searchHuman(Code) {
        if (Code == 45) {
            App.NewErja.body.mask("در حال بارگذاری");
            Ext.net.DirectMethod.request({
                url: '/SearchHuman/Index',
                params: {
                    State: 9,
                },
                success: function () {
                    App.NewErja.body.mask().hide();
                }
            });
        }
    }
    function LoadErja() {
        ReplaceArabic();
        if ('@ViewBag.Id' != '0') {
            App.NewErja.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/Erja/Details',
                params: {
                    Id: '@ViewBag.Id',
                    __RequestVerificationToken: App.NewErja.queryById('antiForgeryToken').getValue()
                },
                success: function (data) {
                    var ErjadahandeId = App.NewErja.queryById('ErjadahandeId');
                    ErjadahandeId.setValue(data.fldErjadahandeId);
                    var txtTarikhErja = App.NewErja.queryById('txtTarikhErja');
                    txtTarikhErja.setValue(data.fldTarikhErja);
                    var txtErjaDahande = App.NewErja.queryById('txtErjaDahande');
                    txtErjaDahande.setValue(data.fldNameErjadahande);
                    var CboTypeErja = App.NewErja.queryById('CboTypeErja');
                    CboTypeErja.setValue(data.fldTypeErja);
                    var txtSharh = App.NewErja.queryById('txtSharh');
                    txtSharh.setValue(data.fldSharh);
                    var Id = App.NewErja.queryById('fldId');
                    Id.setValue(data.fldId);

                    var txtSaatErja = App.NewErja.queryById("txtSaatErja");
                    txtSaatErja.setValue(data.fldSaatErja);
                    fldTimeStamp = data.fldTimeStamp;
                    if (data.fldFileName != "")
                        Ext.get('fi-button-msg').update('<b>فایل انتخاب شده: ' + data.fldFileName + '</b>' + "&nbsp;&nbsp;" + '<img id="DeleteActionFileimg6" title="حذف فایل" src="/Content/cancel.png" style="width:15px;height:15px;margin-bottom: -4px;" onclick="javascript:DeleteFile_Erja()" />');
                    FileId = data.fldFileId;
                    App.NewErja.body.mask().hide();
                }
            });
        }
        else {

        }

    }
    function CheckSaat() {
        var txtSaatErja = App.NewErja.queryById("txtSaatErja");
        if (txtSaatErja.getValue().length == 3) {
            App.NewErja.queryById("txtSaatErja").setValue("0" + App.NewErja.queryById("txtSaatErja").getValue());
        }
        if (txtSaatErja.getValue() > 2359) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "ساعت ارجاع معتبر نمی باشد.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            txtSaatErja.setValue("");
        }
        if (txtSaatErja.getValue().length == 3) {
            if (txtSaatErja.getValue().substring(1, 3) > 59) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "ساعت ارجاع معتبر نمی باشد.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                txtSaatErja.setValue("");
            }
        }
        else if (txtSaatErja.getValue().length == 4) {
            if (txtSaatErja.getValue().substring(2, 4) > 59 || txtSaatErja.getValue().substring(0, 2) > 23) {
                Ext.MessageBox.show({
                    title: "خطا",
                    msg: "ساعت ارجاع معتبر نمی باشد.",
                    icon: Ext.MessageBox.ERROR,
                    buttons: Ext.MessageBox.OK
                });
                txtSaatErja.setValue("");
            }
        }
    }
    function SaveErja() {
        var ErjadahandeId = App.NewErja.queryById('ErjadahandeId');
        var txtTarikhErja = App.NewErja.queryById('txtTarikhErja');
        var txtErjaDahande = App.NewErja.queryById('txtErjaDahande');
        var CboTypeErja = App.NewErja.queryById('CboTypeErja');
        var txtSharh = App.NewErja.queryById('txtSharh');
        var Id = App.NewErja.queryById('fldId');
        var txtSaatErja = App.NewErja.queryById("txtSaatErja");
        var er = false;
        if (txtTarikhErja.validate() == false) {
            er = true;
        }
        if (txtErjaDahande.validate() == false) {
            er = true;
        }
        if (CboTypeErja.validate() == false) {
            er = true;
        }
        if (txtSharh.validate() == false) {
            er = true;
        }
        if (txtSaatErja.validate() == false) {
            er = true;
        }
        if (er == true)
            return;
        var SaatErja = "";

        SaatErja = txtSaatErja.getValue().substring(0, 2) + ":" + txtSaatErja.getValue().substring(2, 4);

        var TypeErja=false;
        if(CboTypeErja.getValue()=="1")
            TypeErja=true;
        App.NewErja.body.mask("در حال ذخیره سازی");
        Ext.net.DirectMethod.request({
            url: '/Erja/Save',
            params: {
                fldId: Id.getValue(),
                fldTarikhErja: txtTarikhErja.rawValue,
                fldTime: SaatErja,
                fldErjadahandeId: ErjadahandeId.getValue(),
                fldNameErjadahande: txtErjaDahande.getValue(),
                fldTypeErjaName: CboTypeErja.getDisplayValue(),
                fldTypeErja:TypeErja,
                fldSharh:txtSharh.getValue(),
                fldTimeStamp: fldTimeStamp,
                fldFileId: FileId,
                DeleteFileErja:DeleteFileErja,
                __RequestVerificationToken: App.NewErja.queryById('antiForgeryToken').getValue()
            },
            success: function (data) {
                chat.server.reloadLog();
                if (data.Er == 1 && data.Change == 1) {/*vaghti TimeStamp==0*/
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: Ext.MessageBox.WARNING,
                        buttons: Ext.MessageBox.OK,
                        fn: function (btn) {
                            if (btn == 'ok') {
                                LoadErja();
                            }
                        }
                    });
                }
                else if (data.Er == 1 && data.Change == 2) {/*vaghti TimeStamp==2*/
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK,
                        fn: function (btn) {
                            if (btn == 'ok') {
                                App.NewErja.destroy();
                            }
                        }
                    });

                }
                else if (data.Er == 1) {
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK,
                    });
                }
                else {
                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: Ext.MessageBox.INFO,
                        buttons: Ext.MessageBox.OK,
                    });
                }

                App.Erja.queryById('GridErja').store.load();
                if (data.Er != 1)
                    ClearErja();
                App.NewErja.body.mask().hide();
            }

        });
    }
    function ClearErja() {
        App.NewErja.queryById('ErjadahandeId').setValue(0);
        App.NewErja.queryById('txtTarikhErja').setValue("");
        App.NewErja.queryById('txtErjaDahande').setValue("");
        App.NewErja.queryById('txtSharh').setValue("");
        App.NewErja.queryById('fldId').setValue(0);
        App.NewErja.queryById("txtSaatErja").setValue("");
        FileId = 0;
        Ext.get('fi-button-msg').update('<b>فایل انتخاب شده:</b> ');
    }
    var addKeyMapErja = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.NewErja.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtSharh") {
                        nextfld = App.NewErja.queryById('btnSaveErja');
                        SaveErja();
                        return;
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }
</script>
