@model IEnumerable<RaiSam.Models.prs_NameItemDynamicRatingForHadafId>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}



@(X.Panel().Border(false)
    .Title("مدارک حوزه های سرمایه گذاری")
                .ID("ItemsDynamicRating")
            .Closable(true)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)

                    .Items(
                             X.AntiForgeryField()
                            .ItemID("antiForgeryToken")
                            .Hidden(true),
                                             X.TabPanel().ID("ItemsDynamicRatingTab")
                        .AutoScroll(true)//.Height(540)
                        .Items(
                        X.Panel().ItemID("GridPanel")
                                    .Title("مدارک مورد نیاز")
                        .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)
                                                            .Listeners(li => li.Click.Handler = "NewItemsDynamicRating();"),
                            X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                                                            .Listeners(Li => Li.Click.Handler = "EditItemsDynamicRating();"),
                            X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)
                                .Listeners(de =>
                                {
                                    de.Click.Handler = "if (App.ItemsDynamicRating.queryById('GridItemsDynamicRating').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteItemsDynamicRating();";
                                })
                                    , X.SplitButton()
                                        .Text("راهنما")
                                        .Icon(Ext.Net.Icon.Help)
                                        .Menu(X.Menu()
                                        .Items(
                                        X.MenuItem()
                                            .Text("راهنما متنی")
                                            .Icon(Ext.Net.Icon.TextPaddingTop)
                                                            .Listeners(l => l.Click.Handler = "HelpItemsDynamicRating()"),
                                            X.MenuItem()
                                                    .Text("راهنما تصویری")
                                                    .Icon(Ext.Net.Icon.PlayBlue)
                                                            .Listeners(l => l.Click.Handler = "showHelp_VideoItemsDynamicRating()")
                                    )
                                )
                        )
                    )
                                .ItemID("GridItemsDynamicRating").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(540)
        //.ColumnWidth(0.6)
        //    .Layout(Ext.Net.LayoutType.Column)
                                            .Listeners(l => l.AfterRender.Handler = "var grid=App.ItemsDynamicRating.queryById('GridItemsDynamicRating');grid.setHeight(App.OperationWin.height-112);")
                    .Store(
                            X.StoreForModel()
                                             .Listeners(l => l.BeforeLoad.Handler = "App.ItemsDynamicRating.queryById('GridItemsDynamicRating').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.ItemsDynamicRating.queryById('antiForgeryToken').getValue());")
                            .Proxy(Html.X().AjaxProxy()
                                        .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)
             .Listeners(l => l.DataChanged.Handler = "App.ItemsDynamicRating.queryById('GridItemsDynamicRating').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                                  Html.X().Column().DataIndex(Model, m => m.fldHadafId).Text("کد هدف").Flex(2).Hidden(true),
                                  Html.X().Column().DataIndex(Model, m => m.fldNameItem).Text("عناوین مدرک").Flex(2),
                                  Html.X().Column().DataIndex(Model, m => m.fldNameHadaf).Text("هدف ثبت نام").Flex(2)
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )

                ))
            )
        )
)

<script type="text/javascript">

    function NewItemsDynamicRating() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/ItemsDynamicRating/new',
            params: {
                id: 0
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function EditItemsDynamicRating() {
        var SelectedRow = App.ItemsDynamicRating.queryById('GridItemsDynamicRating').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/ItemsDynamicRating/new',
                params: {
                    id: SelectedRow.data.fldHadafId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteItemsDynamicRating() {
        var SelectedHeaderRow = App.ItemsDynamicRating.queryById('GridItemsDynamicRating').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/ItemsDynamicRating/DeleteItemsDynamicRating',
                            params: {
                                id: SelectedHeaderRow.data.fldHadafId,
                                State: 2,
                                __RequestVerificationToken: App.ItemsDynamicRating.queryById('antiForgeryToken').getValue()
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.ItemsDynamicRating.queryById('GridItemsDynamicRating').store.load()
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function HelpItemsDynamicRating() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/ItemsDynamicRating/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function showHelp_VideoItemsDynamicRating() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/ItemsDynamicRating/VideoWinItemsDynamicRating',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
</script>
