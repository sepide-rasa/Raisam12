@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
<style>
    .custom-icon {
        margin-right: 380px !important;
    }
</style>

@(Html.X().Window().Modal(true).Listeners(li =>
        {
            li.Render.Fn = "addKeyMapContract_Project";
           // li.AfterRender.Handler = "LoadContract_Project();";
        })
.Width(550)//.Height(300)
    .Title("ثبت قرارداد و پروژه")
             .ID("NewContract_Project")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .ButtonAlign(Ext.Net.Alignment.Center)
        .Buttons(X.Button().Text("ذخیره").Icon(Ext.Net.Icon.Disk)
                .Listeners(l =>
                {
                    l.Click.Handler = "SaveContract_Project();";

                })
                        .ItemID("btnSaveContract_Project")
                ,
                X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                .OnClientClick("App.NewContract_Project.hide();"))
    .Items(
        X.AntiForgeryField()
                .ItemID("antiForgeryToken").Hidden(true),
            X.Panel().Border(false)
            .Items(
                X.FieldSet().Border(true).Title("قرارداد/پروژه")
                .Center()
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                .Defaults(new { Margin = 2 })
                .Items(
                X.Hidden().ItemID("fldId"),
                    X.Label("عنوان:"),
                     X.TextField()
                                .ItemID("txtName")
                                    .MaxLength(200)
                            .EnforceMaxLength(true)
                            .AllowBlank(false)
                            .BlankText("لطفا عنوان قرارداد/پروژه را وارد کنید.")
                            .MsgTarget(Ext.Net.MessageTarget.Side)
                                .Width(400)
                    .ColSpan(5)
                                             ,
                                 X.Hidden().ItemID("fldMalekId"),
                                 X.Hidden().ItemID("fldHoghughiId"),
                     X.Label("شرکت:"),
                            X.TextField()
                                .ItemID("txtMalek")
                                .AllowBlank(false)
                                .ReadOnly(true)
                                .FieldStyle("padding-right:4px;")
                                .Icon(Icon.UserAdd)
                                .BlankText("لطفا شرکت را انتخاب کنید.")
                                .Listeners(l =>
                                {
                                    l.SpecialKey.Handler = "searchMalek(e.getKey())";
                                    l.IconClick.Handler = "searchMalek(45)";
                                    l.AfterRender.Handler = "App.NewContract_Project.queryById('txtMalek').icon.dom.classList.add('custom-icon');";
                                })
                                .Width(400)
                    .ColSpan(5),
  
                     X.Label("شماره قرارداد:"),
                     X.TextField()
                         .ItemID("txtShomareContract")
                        .MaxLength(50)
                        .Width(90)
                    .EnforceMaxLength(true)
                    .AllowBlank(false)//.MaskRe("[1-9 ,),(,ا-ی-آ-ئ-ء]")
                    .BlankText("لطفا شماره قرارداد را وارد کنید.")
                            //.EmptyText("100/102973" + "/ص")
                            //                        .Plugins(X.InputMask()
                            //                            .Mask("BBB/BBBBBB"+"/A")
                            //                            .ClearWhenInvalid(true)
                            //                            .MaskSymbols(ls =>
                            //                            {
                            //                                ls.Add(new MaskSymbol { Name = "A", Regex = "[ا-ی-آ-ئ-ء]", Placeholder = "_".ToCharArray()[0] });
                            //                                ls.Add(new MaskSymbol { Name = "B", Regex = "[0-9]", Placeholder = "_".ToCharArray()[0] });
                            //                            })
                            //                        )
                            ,
                                 X.Label("/"),
                         X.TextField()
                             .ItemID("txtShomareContract2")
                            .MaxLength(1)
                            .Width(30)
                        .EnforceMaxLength(true)
                        .AllowBlank(false)
                        .MaskRe("[ا-ی-آ-ئ-ء]")
                        .BlankText("لطفا کاراکتر شماره قرارداد را وارد کنید.")
                                                    ,
                     X.Label("تاریخ قرارداد:"),
                        X.PDateField()
                        .ItemID("txtTarikhContract")
                    .AllowBlank(false)
                        .BlankText("لطفا تاریخ قرارداد را وارد کنید.")
                    .Editable(true)
                    .MaskRe("/[0-9/]/")
                    .MaxLength(10)
                    .MinLength(10)
                    .EnforceMaxLength(true)
                   , X.Label("شماره موافقتنامه:"),
                     X.TextField()
                         .ColSpan(3)
                             .ItemID("txtShomareMovafeghat")
                        .MaxLength(100)//.Width(330)
                    .EnforceMaxLength(true)
                        .AllowBlank(true)//.MaskRe("[1-9 ,),(,ا-ی-آ-ئ-ء]")
                        .BlankText("لطفا شماره موافقتنامه را وارد کنید."),
                     X.Label("تاریخ موافقتنامه:"),
                        X.PDateField()
                            .ItemID("txtTarikhMovafeghat")
                    .AllowBlank(true)
                    .BlankText("لطفا تاریخ موافقتنامه را وارد کنید.")
                    .Editable(true)
                    .MaskRe("/[0-9/]/")
                    .MaxLength(10)
                    .MinLength(10)
                    .EnforceMaxLength(true)
                         ,
                         X.Label("نوع قرارداد:"),
                             //        X.ComboBox()
                             //.ColSpan(3)
                             //           .ItemID("cboTypeContract")
                             //       .LabelAlign(Ext.Net.LabelAlign.Top)
                             //       .Editable(false)
                             //       .TypeAhead(true)
                             //       .QueryMode(DataLoadMode.Local)
                             //       .TriggerAction(TriggerAction.All)
                             //                   .SelectedItems(new { Value = "0" })
                             //           .Items(
                             //                   new ListItem("واگن باری", "0"),
                             //                   new ListItem("واگن مسافری", "1"),
                             //               new ListItem("لکوموتیو", "2")
                             //               )
                             //               ,
                                                      X.ComboBox()
                                 .ColSpan(3)
                                    .ItemID("cboTypeContract")
                                .TypeAhead(true)
                                .Editable(false)
                                .ForceSelection(true)
                                .QueryMode(DataLoadMode.Local)
                                .TriggerAction(TriggerAction.All)
                                .AllowBlank(false)
                                .BlankText("لطفا نوع قرارداد را انتخاب کنید.")
                                .DisplayField("fldName")
                                .ValueField("fldId")
                                .Listeners(l => l.Select.Handler = "ClearMalek()")
                                .EmptyText("...")
                                .Store(X.Store()
                                            .Listeners(l => l.Load.Handler = "setDefaultCboTypeContract();LoadContract_Project();")
                                    .Model(X.Model()
                                        .IDProperty("fldId")
                                        .Fields(
                                            new ModelField("fldId", ModelFieldType.String) { Mapping = "fldId" },
                                            new ModelField("fldName", ModelFieldType.String) { Mapping = "fldName" }
                                            )
                                    )
                                                        .Listeners(l => l.BeforeLoad.Handler = "App.NewContract_Project.queryById('cboTypeContract').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.NewContract_Project.queryById('antiForgeryToken').getValue());")
                                        .Proxy(Html.X().AjaxProxy()
                                            .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                                        .Timeout(200000000)
                                                .Url(Url.Action("GetTypeContract"))
                                        .Reader(X.JsonReader().Root("data"))
                                    )
                            )
                            ,
                                X.Label("سقف سرمایه گذاری:"),
                         X.NumberField()
                 
                                     .ItemID("txtSaghfSarmayeGozari")
                            .MaxLength(17)//.Width(330)
                        .EnforceMaxLength(true)
                            .AllowBlank(true)
                            .MaskRe("[0-9]")
                            .BlankText("لطفا سقف سرمایه گذاری را وارد کنید.")
                        )

                )
                    .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
        )
)
<script type="text/javascript">
    var fldTimeStamp = 0;
    function ClearMalek() {
     App.NewContract_Project.queryById('txtMalek').setValue("");
     App.NewContract_Project.queryById('fldMalekId').setValue(0);
     App.NewContract_Project.queryById('fldHoghughiId').setValue(0);
    }
    function setDefaultCboTypeContract() {
        if ('@ViewBag.Id' == '0')
            App.NewContract_Project.queryById("cboTypeContract").setValue(App.NewContract_Project.queryById("cboTypeContract").store.getAt(0));
    }
    function searchMalek(Code) {
        var cboTypeContract = App.NewContract_Project.queryById('cboTypeContract');
        if (Code == 45) {
            App.NewContract_Project.body.mask("در حال بارگذاری");
            if (cboTypeContract.getValue() == "4") {
                Ext.net.DirectMethod.request({
                    url: '/SearchAshkhasHoghooghi/Index',
                    params: {
                        State: 3,
                    },
                    success: function () {
                        App.NewContract_Project.body.mask().hide();
                    }
                });
            }
            else {
                Ext.net.DirectMethod.request({
                    url: '/SearchMalek_Vagon/Index',
                    params: {
                        State: 2,
                    },
                    success: function () {
                        App.NewContract_Project.body.mask().hide();
                    }
                });
            }
        }
    }
    function LoadContract_Project() {
        ReplaceArabic();
        if ('@ViewBag.Id' != '0') {
            App.NewContract_Project.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/Contract_Project/Details',
                params: {
                    Id: '@ViewBag.Id',
                    __RequestVerificationToken: App.NewContract_Project.queryById('antiForgeryToken').getValue()
                },
                success: function (data) {

                    var txtName = App.NewContract_Project.queryById('txtName');
                    txtName.setValue(data.fldTitle);
                    var txtTarikhContract = App.NewContract_Project.queryById('txtTarikhContract');
                    txtTarikhContract.setValue(data.fldTarikhContract); 
                    var txtShomareContract = App.NewContract_Project.queryById('txtShomareContract');
                    var ss = data.fldShomareContract.split('/');
                    var ShomareContract2 = ss[ss.length - 1];
                    kk = data.fldShomareContract;
                    txtShomareContract.setValue(data.fldShomareContract.replace("/"+ShomareContract2 , ""));
                    var txtShomareContract2 = App.NewContract_Project.queryById('txtShomareContract2');
                    txtShomareContract2.setValue(ShomareContract2);
                    var txtTarikhMovafeghat = App.NewContract_Project.queryById('txtTarikhMovafeghat');
                    txtTarikhMovafeghat.setValue(data.fldTarikhMovafeghat);
                    var txtShomareMovafeghat = App.NewContract_Project.queryById('txtShomareMovafeghat');
                    txtShomareMovafeghat.setValue(data.fldShomareMovafeghat);
                    var txtSaghfSarmayeGozari = App.NewContract_Project.queryById('txtSaghfSarmayeGozari');
                    txtSaghfSarmayeGozari.setValue(data.fldSaghfSarmayeGozari);
                    var txtMalek = App.NewContract_Project.queryById('txtMalek');
                    txtMalek.setValue(data.fldNameCompany);
                    
                    var fldMalekId = App.NewContract_Project.queryById('fldMalekId');
                    fldMalekId.setValue(data.fldMalekId);
                    var fldHoghughiId = App.NewContract_Project.queryById('fldHoghughiId');
                    fldHoghughiId.setValue(data.fldHoghoghiId);
                    var cboTypeContract = App.NewContract_Project.queryById('cboTypeContract');
                    cboTypeContract.setValue(data.fldTypeContract);
                    var Id = App.NewContract_Project.queryById('fldId');
                    Id.setValue(data.fldId);
                    fldTimeStamp = data.fldTimeStamp;
                    App.NewContract_Project.body.mask().hide();
                }
            });
        }
        else {
            App.NewContract_Project.queryById('txtName').validate();
            App.NewContract_Project.queryById('txtTarikhContract').validate();
            App.NewContract_Project.queryById('txtShomareContract').validate();
            App.NewContract_Project.queryById('txtShomareContract2').validate();
            /*App.NewContract_Project.queryById('txtTarikhMovafeghat').validate();
            App.NewContract_Project.queryById('txtShomareMovafeghat').validate();*/
            App.NewContract_Project.queryById('txtMalek').validate();
        }

    }
    var kk;
    function SaveContract_Project() {
        
        var txtName = App.NewContract_Project.queryById('txtName');
        var txtMalek = App.NewContract_Project.queryById('txtMalek');
        var Id = App.NewContract_Project.queryById('fldId');
        var fldMalekId = App.NewContract_Project.queryById('fldMalekId');
        var fldHoghughiId = App.NewContract_Project.queryById('fldHoghughiId');
        var txtShomareContract = App.NewContract_Project.queryById('txtShomareContract');
        var txtShomareContract2 = App.NewContract_Project.queryById('txtShomareContract2');
        var txtTarikhContract = App.NewContract_Project.queryById('txtTarikhContract'); 
        var txtShomareMovafeghat = App.NewContract_Project.queryById('txtShomareMovafeghat');
        var txtSaghfSarmayeGozari = App.NewContract_Project.queryById('txtSaghfSarmayeGozari');
        var txtTarikhMovafeghat = App.NewContract_Project.queryById('txtTarikhMovafeghat');
        var cboTypeContract = App.NewContract_Project.queryById('cboTypeContract');
            var er = false;

            /*if (txtTarikhMovafeghat.validate() == false) {
                er = true;
            }
            if (txtShomareMovafeghat.validate() == false) {
                er = true;
            }*/
            if (txtTarikhContract.validate() == false) {
                er = true;
            }
            if (txtShomareContract.validate() == false) {
                er = true;
            }
            if (txtShomareContract2.validate() == false) {
                er = true;
            }
            if (txtMalek.validate() == false) {
                er = true;
            }
            if (txtName.validate() == false) {
                er = true;
            }
            if (cboTypeContract.validate() == false) {
                er = true;
            }
            if (er == true)
                return;

            App.NewContract_Project.body.mask("در حال ذخیره سازی");
            Ext.net.DirectMethod.request({
                url: '/Contract_Project/Save',
                params: {
                    fldId: Id.getValue(),
                    fldTitle: txtName.getValue(),
                    fldMalekId: fldMalekId.getValue(),
                    fldShomareContract:txtShomareContract.getValue()+"/"+ txtShomareContract2.getValue(),
                    fldTarikhContract: txtTarikhContract.rawValue,
                    fldShomareMovafeghat: txtShomareMovafeghat.getValue(),
                    fldSaghfSarmayeGozari: txtSaghfSarmayeGozari.getValue(),
                    fldTarikhMovafeghat: txtTarikhMovafeghat.rawValue,
                    fldTypeContract: cboTypeContract.getValue(),
                    fldHoghoghiId: fldHoghughiId.getValue(),
                    /*fldShomareVagon: txtVagon.getValue(),*/
                    fldTimeStamp: fldTimeStamp,
                    __RequestVerificationToken: App.NewContract_Project.queryById('antiForgeryToken').getValue()
                },
                success: function (data) {
                    chat.server.reloadLog();
                    if (data.Er == 1 && data.Change == 1) {/*vaghti TimeStamp==0*/
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.WARNING,
                            buttons: Ext.MessageBox.OK,
                            fn: function (btn) {
                                if (btn == 'ok') {
                                    LoadContract_Project();
                                }
                            }
                        });
                    }
                    else if (data.Er == 1 && data.Change == 2) {/*vaghti TimeStamp==2*/
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK,
                            fn: function (btn) {
                                if (btn == 'ok') {
                                    App.NewContract_Project.destroy();
                                }
                            }
                        });

                    }
                    else if (data.Er == 1) {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.ERROR,
                            buttons: Ext.MessageBox.OK,
                        });
                    }
                    else {
                        Ext.MessageBox.show({
                            title: data.MsgTitle,
                            msg: data.Msg,
                            icon: Ext.MessageBox.INFO,
                            buttons: Ext.MessageBox.OK,
                        });
                    }
                    App.contract_project.queryById('Gridcontract_project').store.load();
                    if (data.Er != 1)
                        ClearContract_Project();
                    App.NewContract_Project.body.mask().hide();
                }

            });
        }
    function ClearContract_Project() {


          App.NewContract_Project.queryById('txtTarikhMovafeghat').setValue("");
          App.NewContract_Project.queryById('txtShomareMovafeghat').setValue("");
          App.NewContract_Project.queryById('txtTarikhContract').setValue("");
          App.NewContract_Project.queryById('txtShomareContract').setValue("");
          App.NewContract_Project.queryById('txtShomareContract2').setValue("");
          App.NewContract_Project.queryById('txtSaghfSarmayeGozari').setValue("");
          App.NewContract_Project.queryById('txtMalek').setValue("");
          App.NewContract_Project.queryById('fldMalekId').setValue(0);
          App.NewContract_Project.queryById('txtName').setValue("");
        App.NewContract_Project.queryById('fldId').setValue(0);
    }
    var addKeyMapContract_Project = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.NewContract_Project.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtTarikhContract") {
                        nextfld = App.NewContract_Project.queryById('btnSaveContract_Project');
                        SaveContract_Project();
                        return;
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }
</script>
