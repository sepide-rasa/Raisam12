<meta http-equiv="content-type" content="text/html; charset=Error" />
@{

    RaiSam.Models.RaiSamEntities hh = new RaiSam.Models.RaiSamEntities();
    string IP = System.Web.HttpContext.Current.Request.ServerVariables["REMOTE_HOST"];

    RaiSam.Models.UserInfo u = (RaiSam.Models.UserInfo)Session["User"];
    int Userr = u.UserId;

   

    var user = hh.prs_tblUserSelect("fldId", u.UserId.ToString(),"",1).ToList();
    
    var LastLogin = hh.prs_tblInputInfoSelect("fldUserId", u.UserId.ToString(),"",true,2).ToList();
    string _Date = "", Time = "", Ip = "", Name = "", Location = "";

    int UserLoginCount = RaiSam.Models.UserLoginCount.userObj.Count;
    //if (Session["User"] != null)
    //{
    //    param.Value = u.TreeId.ToString();
    //    param.FieldName = "TreeId";
    //    Location = hh.GetTreeStructureTitle(param, u.UserKey, IP).TreeStructurelist.FirstOrDefault().fldTitle;
    //}

    Name = user[0].fldNamePersonal;
    if (LastLogin.Count == 2)
    {
        _Date = LastLogin[1].fldTarikh.ToString();
        Time = LastLogin[1].fldTime.ToString();
        Ip = LastLogin[1].fldIP.ToString();
    }
    string NameUserSecond = "";

    if (u.UserId != u.UserSecondId)
    {
      

        var userSecond = hh.prs_tblUserSelect("fldId", u.UserSecondId.ToString(),"",1).ToList();
        NameUserSecond = "(در نقش " + userSecond[0].fldNamePersonal + ")";
    }

    //param.FieldName = "LastVersion";
    //param.Top = 0;
    string LastVersion = "";
    int VersionId = 0;

    var Version = hh.prs_tblVersionSelect("LastVersion","",0).FirstOrDefault();
    if (Version != null)
    {
        LastVersion = "ورژن برنامه: " + Version.fldVersion;
        VersionId = Version.fldId;
    }


    //var t = hh.prs_tblTreeStructureSelect("fldId", user.fldTreeId.ToString(), 1).FirstOrDefault();
    //string TypeUser = "0";
    //if (user.fldTreeId == 1)
    //{
    //    TypeUser = "1";
    //}

    string DesktopPic = "~/Content/Back.png";
    var t = hh.prs_tblThemDesktop_UserSelect("fldUserId", u.UserSecondId.ToString(),1).FirstOrDefault();
    if (t != null)
    {
        if (t.fldType == 2)
        {
            DesktopPic = "";
        }
        else if (t.fldType == 3 && t.fldFileDesktopId != null)
        {
            var f = hh.prs_tblFileDesktop_UserSelect("fldId", t.fldFileDesktopId.ToString(),1).FirstOrDefault();
            DesktopPic = "data:image/gif;base64," + Convert.ToBase64String(f.fldFileDesktop);
        }
    }

    int SmsErr = 0;
    string smsPanelInfo = "";
    //var haveSmsPanel = hh.prs_tblSMSSettingSelect("", "", 1).FirstOrDefault();
    //try
    //{
    //    RaiSam.RaiSms.Service w = new RaiSam.RaiSms.Service();
    //    var smsPanel = w.GetuserInfo(haveSmsPanel.fldUserName, haveSmsPanel.fldPassword, "RailWay");
    //    smsPanelInfo = smsPanel[1];
    //}
    //catch (Exception)
    //{
    //    smsPanelInfo = "";
    //    SmsErr = 1;
    //}
}
<script src="~/Scripts/jquery-ajax-native.js"></script>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using RaiSam.Models;

@{var X = Html.X();}
@(Html.X().Desktop()
    .ID("Desktop1")
        .Listeners(l => l.Ready.Handler = "CheckMsgUserSecound();WinInfoShow();CheckEtelaie();ShowLastVertion();$('.ux-start-button .x-btn-inner').html('شروع');")
    .Modules(
        X.DesktopModule()
            .AutoRun(true)
            .ModuleID("InfoModule1")
            .Window(
                X.Window()
                    .Plain(true)
                    .AutoScroll(true)
                    .ID("AnnouncementWin")
                    .Padding(5)
                    .Height(200)
                    .Width(500)
                    .Modal(true)
                    .Title("اطلاعیه های مهم")
                    .CloseAction(CloseAction.Destroy)
                    .Maximizable(false)
                    .Minimizable(false)
                    .Items(
                        X.RadioGroup()
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                    .PaddingSpec("5px 8px 0 0")
                            .Defaults(new { Margin = 2 })
                                    .Listeners(l => l.Change.Handler = "loadEtelaie()")
                            .Items(
                                X.Radio()
                                    .ItemID("RadioNotSeen")
                                    .Checked(true)
                                    .FieldLabel("اطلاعیه های خوانده نشده")
                                    .LabelWidth(150)
                                    .LabelAlign(Ext.Net.LabelAlign.Right)
                                    .LabelSeparator("")
                                    .RTL(false),
                                X.Radio()
                                    .ItemID("RadioAll")
                                    .FieldLabel("کلیه اطلاعیه ها")
                                    .LabelAlign(Ext.Net.LabelAlign.Right)
                                    .LabelSeparator("")
                                    .RTL(false)
                            ),
                        Html.X().Panel()
                            .PaddingSpec("5px 0 0 0")
                            .Border(false)
                            .Layout(LayoutType.VBox).ID("PnlAnnouncemenContainerNotSeen")
                            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
                    )
                ),
        X.DesktopModule()
            .AutoRun(true)
            .ModuleID("InfoModule")
            .Window(
                X.Window()
                    .ID("WinInfoModule")
                    .Plain(true)
                    .Padding(10)
                    .Height(200)
                    .Width(500)
                    .Modal(true)
                    .Title("اطلاعیه")
                    .CloseAction(CloseAction.Destroy)
                    .Maximizable(false)
                    .Minimizable(false)
                    .Content(@<p id="Info"></p>)
        ),
        X.DesktopModule()
            .AutoRun(true)
                .ModuleID("InfoModuleUserSecound")
            .Window(
                X.Window()
                        .ID("WinUserSecound")
                    .Plain(true)
                    .Padding(10)
                    .Height(100)
                    .Width(300)
                    .Modal(true)
                    .Title("توجه")
                    .CloseAction(CloseAction.Destroy)
                    .Maximizable(false)
                    .Minimizable(false)
                    .Content(@<p id="InfoUserSecound"></p>)
        ),
        //X.DesktopModule()
        //    .AutoRun(true)
        //    .ModuleID("InfoModule1Version")
        //    .Window(
        //        X.Window()
        //            .Plain(true)
        //            .AutoScroll(true)
        //            .ID("VersionWin")
        //            .Padding(5)
        //            .Height(200)
        //            .Width(500)
        //            .Modal(true)
        //            .Title("اطلاعات ورژن")
        //            .CloseAction(CloseAction.Destroy)
        //            .Maximizable(false)
        //            .Minimizable(false)
        //            .Items(
        //                Html.X().Panel()
        //                    .PaddingSpec("5px 0 0 0")
        //                    .Border(false)
        //                    .Layout(LayoutType.VBox).ID("PnlVersion")
        //                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Stretch })
        //            )
        //        ),
        X.DesktopModule()
            .ModuleID("create-BasicInf")
            .Shortcut(
                Html.X().DesktopShortcut()
                    .Name("اطلاعات پایه")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(1, "", "0"))
                    .IconCls("shortcut-BasicInf")
                    .SortIndex(0)
            )
            .Launcher(
                Html.X().MenuItem()
                    .Text("اطلاعات پایه")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(1, "", "0"))
                    .IconCls("MiniBasicInf")
            )
            .Window(
                Html.X().Window()
                    .RTL(true)
                    .ID("BasicInfWin")
                    .AutoScroll(true)
                    .Title("اطلاعات پایه")
                    .Icon(Ext.Net.Icon.DatabaseAdd)
                    .BodyStyle("background-color:rergb(244, 247, 249;")
                        .CloseAction(Ext.Net.CloseAction.Destroy)
                                .Listeners(l =>
                                {
                                    l.BeforeClose.Handler ="FnCloseFrm('پنجره اطلاعات پایه');";
                                    l.Minimize.Handler = "FnMinimizeFrm('پنجره اطلاعات پایه');";
                                    l.Show.Handler ="FnOpenFrm('پنجره اطلاعات پایه');";})
                    .Layout(Ext.Net.LayoutType.Anchor)
                    .Maximized(true)
                    .Height(600)
                    .Items(
                        X.Panel()
                            .Border(false)
                            .Items(
                                Html.X().TabPanel()
                                    .Border(false)
                                    .Items(
                                        X.Panel()
                                            .Title("اطلاعات پایه")
                                            .Border(false)
                                            .TabMenu(m => m.Add(X.Menu().Items(
                                                    X.MenuItem().Text("تعریف شخص").DirectClickUrl("/Human/index?containerId=BasicInfTab").IconCls("MiniHuman").Hidden(!RaiSam.Models.Permission.haveAccess(17, "", "0")),
                                                    X.MenuItem().Text("تعریف اشخاص حقوقی").DirectClickUrl("/AshkhasHoghooghi/index?containerId=BasicInfTab").IconCls("MiniAshkhasHoghooghi").Hidden(!RaiSam.Models.Permission.haveAccess(56, "", "0")),
                                                    X.MenuItem().Text("اطلاعات پرسنل").DirectClickUrl("/PersonalInfo/index?containerId=BasicInfTab").IconCls("PersonalInfo").Hidden(!RaiSam.Models.Permission.haveAccess(60, "", "0")),
                                                    X.MenuItem().Text("اطلاعیه").DirectClickUrl("/Announcement/index?containerId=BasicInfTab").IconCls("MinAnnouncement").Hidden(!RaiSam.Models.Permission.haveAccess(61, "", "0")),
                                                    X.MenuItem().Text("بررسی خطاها").DirectClickUrl("/Error/index?containerId=BasicInfTab").IconCls("HappenedError").Hidden(!RaiSam.Models.Permission.haveAccess(69, "", "0")),
                                                    X.MenuItem().Text("راهنمای فرم ها").DirectClickUrl("/Help/index?containerId=BasicInfTab").IconCls("HelpMini").Hidden(!RaiSam.Models.Permission.haveAccess(79, "", "0")),
                                                    X.MenuItem().Text("انواع واگن").DirectClickUrl("/TypeVagon/index?containerId=BasicInfTab").IconCls("TypeVagonMini").Hidden(!RaiSam.Models.Permission.haveAccess(169, "", "0")),
                                                    X.MenuItem().Text("مالکان نت").DirectClickUrl("/Malek_Vagon/index?containerId=BasicInfTab").IconCls("Malek_VagonMini").Hidden(!RaiSam.Models.Permission.haveAccess(173, "", "0")),
                                                    X.MenuItem().Text("تعریف واگن").DirectClickUrl("/Vagon/index?containerId=BasicInfTab").IconCls("VagonMini").Hidden(!RaiSam.Models.Permission.haveAccess(177, "", "0")),
                                                    X.MenuItem().Text("هدف ثبت نام").DirectClickUrl("/HadafSabtNam/index?containerId=BasicInfTab").IconCls("HadafSabtNamMini").Hidden(!RaiSam.Models.Permission.haveAccess(181, "", "0")),
                                                    X.MenuItem().Text("گروه بندی هدف ثبت نام").DirectClickUrl("/HadafGroupName/index?containerId=BasicInfTab").IconCls("HadafGroupNameMini").Hidden(!RaiSam.Models.Permission.haveAccess(185, "", "0")),
                                                        X.MenuItem().Text("ثبت پروژه ها و قراردادها").DirectClickUrl("/contract_project/index?containerId=BasicInfTab").IconCls("contract_projectMini").Hidden(!RaiSam.Models.Permission.haveAccess(208, "", "0"))
                                                
                                                )))
                                            .Items(
                                                Html.X().TabPanel()
                                                    .Border(false)
                                                    .ID("BasicInfTab")
                                                    .ManageHeight(true)
                                                    .Items(
                                                        X.Panel()
                                                            .Title("میزکار")
                                                            .ItemID("pnlBasicInfTab")
                                                            .Border(false)
                                                            .Listeners(l => l.AfterRender.Handler = "App.BasicInfTab.queryById('pnlBasicInfTab').setSize(App.BasicInfWin.getWidth()-10,App.BasicInfWin.getHeight()-135);")
                                                            .AutoScroll(true)
                                                            .Margins("30 0 0 0")
        //.Height(550)
                                                            .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
                                                            .Items(
                                                                X.Container()
                                                                    .Region(Ext.Net.Region.Center)
                                                                    .Layout(Ext.Net.LayoutType.Table)
                                                                    .Center()
                                                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 7 })
                                                                    .Defaults(new { Width = 110, Height = 110 })
                                                                    .Items(
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(17, "", "0"))
                                                                                .ImageUrl("/Content/icon/BasicInf/تعریف اشخاص1.png")
                                                                                .OverImageUrl("/Content/icon/BasicInf/تعریف اشخاص.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/Human/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                    de.Click.Before = "if(App.Human!=null){var tab =App.BasicInfTab.getComponent('Human');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            ),
                                                                            X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(56, "", "0"))
                                                                                            .ImageUrl("/Content/icon/BasicInf/تعریف اشخاص حقوقی1.png")
                                                                                            .OverImageUrl("/Content/icon/BasicInf/تعریف اشخاص حقوقی.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/AshkhasHoghooghi/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                    de.Click.Before = "if(App.AshkhasHoghooghi!=null){var tab =App.BasicInfTab.getComponent('AshkhasHoghooghi');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            ),
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(60, "", "0"))
                                                                                        .ImageUrl("/Content/icon/BasicInf/اطلاعات پرسنل1.png")
                                                                                        .OverImageUrl("/Content/icon/BasicInf/اطلاعات پرسنل.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/PersonalInfo/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                    de.Click.Before = "if(App.PersonalInfo!=null){var tab =App.BasicInfTab.getComponent('PersonalInfo');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            ),
                                                                                X.ImageButton()
                                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(61, "", "0"))
                                                                                        .ImageUrl("/Content/icon/BasicInf/ثبت اطلاعیه1.png")
                                                                                    .OverImageUrl("/Content/icon/BasicInf/ثبت اطلاعیه.png")
                                                                                .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/Announcement/Index";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                        de.Click.Before = "if(App.Announcement!=null){var tab =App.BasicInfTab.getComponent('Announcement');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                ),
                                                                            X.ImageButton()
                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(69, "", "0"))
                                                                                        .ImageUrl("/Content/icon/BasicInf/بررسی خطاها1.png")
                                                                                    .OverImageUrl("/Content/icon/BasicInf/بررسی خطاها.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/Error/Index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                    de.Click.Before = "if(App.Error!=null){var tab =App.BasicInfTab.getComponent('Error');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                                )
                                                                                , X.ImageButton()
                                                                                            .Hidden(!RaiSam.Models.Permission.haveAccess(79, "", "0"))
                                                                                            .ImageUrl("/Content/icon/BasicInf/راهنمای فرمها1.png")
                                                                                            .OverImageUrl("/Content/icon/BasicInf/راهنمای فرمها.png")
                                                                                    .DirectEvents(
                                                                                        de =>
                                                                                        {
                                                                                            de.Click.Url = "/Help/Index";
                                                                                            de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                            de.Click.Before = "if(App.Help!=null){var tab =App.BasicInfTab.getComponent('Help');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
                                                                                        }
                                                                                    )
                                                                                      , X.ImageButton()
                                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(169, "", "0"))
                                                                                                    .ImageUrl("/Content/icon/BasicInf/انواع واگن1.png")
                                                                                                    .OverImageUrl("/Content/icon/BasicInf/انواع واگن.png")
                                                                                        .DirectEvents(
                                                                                            de =>
                                                                                            {
                                                                                                de.Click.Url = "/TypeVagon/Index";
                                                                                                de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                                de.Click.Before = "if(App.TypeVagon!=null){var tab =App.BasicInfTab.getComponent('TypeVagon');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                de.Click.Success = "Ext.net.Mask.hide();";
                                                                                            }
                                                                                        )
                                                                                        , X.ImageButton()
                                                                                            .Hidden(!RaiSam.Models.Permission.haveAccess(173, "", "0"))
                                                                                                .ImageUrl("/Content/icon/BasicInf/اطلاعات مالکان1.png")
                                                                                                .OverImageUrl("/Content/icon/BasicInf/اطلاعات مالکان.png")
                                                                                    .DirectEvents(
                                                                                        de =>
                                                                                        {
                                                                                            de.Click.Url = "/Malek_Vagon/Index";
                                                                                            de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                            de.Click.Before = "if(App.Malek_Vagon!=null){var tab =App.BasicInfTab.getComponent('Malek_Vagon');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
                                                                                        }
                                                                                    )
                                                                                        , X.ImageButton()
                                                                                            .Hidden(!RaiSam.Models.Permission.haveAccess(177, "", "0"))
                                                                                                .ImageUrl("/Content/icon/BasicInf/ثبت واگن1.png")
                                                                                                .OverImageUrl("/Content/icon/BasicInf/ثبت واگن.png")
                                                                                    .DirectEvents(
                                                                                        de =>
                                                                                        {
                                                                                            de.Click.Url = "/Vagon/Index";
                                                                                            de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                            de.Click.Before = "if(App.Vagon!=null){var tab =App.BasicInfTab.getComponent('Vagon');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
                                                                                        }
                                                                                    )
                                                                                        , X.ImageButton()
                                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(181, "", "0"))
                                                                                            .ImageUrl("/Content/icon/BasicInf/هدف ثبت نام1.png")
                                                                                            .OverImageUrl("/Content/icon/BasicInf/هدف ثبت نام.png")
                                                                                .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/HadafSabtNam/Index";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                        de.Click.Before = "if(App.HadafSabtNam!=null){var tab =App.BasicInfTab.getComponent('HadafSabtNam');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                )
                                                                                , X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(185, "", "0"))
                                                                                    .ImageUrl("/Content/icon/BasicInf/گروه بندی هدف ثبت نام1.png")
                                                                                    .OverImageUrl("/Content/icon/BasicInf/گروه بندی هدف ثبت نام.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/HadafGroupName/Index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                    de.Click.Before = "if(App.HadafGroupName!=null){var tab =App.BasicInfTab.getComponent('HadafGroupName');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            )    
                                                                                 , X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(208, "", "0"))
                                                                                        .ImageUrl("/Content/icon/BasicInf/ثبت پروژه ها و قراردادها1.png")
                                                                                        .OverImageUrl("/Content/icon/BasicInf/ثبت پروژه ها و قراردادها.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/contract_project/Index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                    de.Click.Before = "if(App.contract_project!=null){var tab =App.BasicInfTab.getComponent('contract_project');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            )
                                                                                , X.ImageButton()
                                            .Hidden(!RaiSam.Models.Permission.haveAccess(223, "", "0"))
                                                                                            .ImageUrl("/content/icon/BasicInf/عناوین امتیاز داینامیک1.png")
                                                                                                            .OverImageUrl("/content/icon/BasicInf/عناوین امتیاز داینامیک .png")
                                                                                .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/TitleRatingDynamic/index";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                        de.Click.Before = "if(App.TitleRatingDynamic!=null){var tab =App.BasicInfTab.getComponent('TitleRatingDynamic');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                )
                                                                                    , X.ImageButton()
                                .Hidden(!RaiSam.Models.Permission.haveAccess(227, "", "0"))
                                                                                                    .ImageUrl("/content/icon/BasicInf/خواص آیتم های داینامیک1.png")
                                                                                                    .OverImageUrl("/content/icon/BasicInf/خواص آیتم های داینامیک.png")
                                                                                    .DirectEvents(
                                                                                        de =>
                                                                                        {
                                                                                            de.Click.Url = "/ItemDynamicProperties/index";
                                                                                            de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                            de.Click.Before = "if(App.ItemDynamicProperties!=null){var tab =App.BasicInfTab.getComponent('ItemDynamicProperties');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
                                                                                        }
                                                                                    )
                                                                                         , X.ImageButton()
                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(234, "", "0"))
                                                                                                            .ImageUrl("/content/icon/BasicInf/عناوین زمان بندی 1.png")
                                                                                                            .OverImageUrl("/content/icon/BasicInf/عناوین زمان بندی.png")
                                                                                        .DirectEvents(
                                                                                            de =>
                                                                                            {
                                                                                                de.Click.Url = "/ScheduleTitle/index";
                                                                                                de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                                de.Click.Before = "if(App.ScheduleTitle!=null){var tab =App.BasicInfTab.getComponent('ScheduleTitle');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                de.Click.Success = "Ext.net.Mask.hide();";
                                                                                            }
                                                                                        )
                                                                                             , X.ImageButton()
                                                                            .Hidden(!RaiSam.Models.Permission.haveAccess(238, "", "0"))
                                                                                                                .ImageUrl("/content/icon/BasicInf/زمان بندی در هر هدف 1.png")
                                                                                                                .OverImageUrl("/content/icon/BasicInf/زمان بندی در هر هدف.png")
                                                                                            .DirectEvents(
                                                                                                de =>
                                                                                                {
                                                                                                    de.Click.Url = "/ScheduleTitle_Hadaf/index";
                                                                                                    de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                                    de.Click.Before = "if(App.ScheduleTitle_Hadaf!=null){var tab =App.BasicInfTab.getComponent('ScheduleTitle_Hadaf');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                }
                                                                                            )
                                                                                                , X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(240, "", "0"))
                                                                                                                    .ImageUrl("/content/icon/BasicInf/ارزش مالی سرمایه گذاری 1.png")
                                                                                                                    .OverImageUrl("/content/icon/BasicInf/ارزش مالی سرمایه گذاری.png")
                                                                                                .DirectEvents(
                                                                                                    de =>
                                                                                                    {
                                                                                                        de.Click.Url = "/FinancialValue/index";
                                                                                                        de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                                        de.Click.Before = "if(App.FinancialValue!=null){var tab =App.BasicInfTab.getComponent('FinancialValue');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                    }
                                                                                                    )
                                                                                                    , X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(245, "", "0"))
                                                                                                                        .ImageUrl("/content/icon/BasicInf/تاییدات لازم2.png")
                                                                                                                        .OverImageUrl("/content/icon/BasicInf/تاییدات لازم.png")
                                                                                                .DirectEvents(
                                                                                                    de =>
                                                                                                    {
                                                                                                        de.Click.Url = "/TaeedItems/index";
                                                                                                        de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                                        de.Click.Before = "if(App.TaeedItems!=null){var tab =App.BasicInfTab.getComponent('TaeedItems');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                    }
                                                                                                )
                                                                                                     , X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(252, "", "0"))
                                                                                                                            .ImageUrl("/content/icon/BasicInf/اطلاعات کاربرگ1.png")
                                                                                                                            .OverImageUrl("/content/icon/BasicInf/اطلاعات کاربرگ.png")
                                                                                                .DirectEvents(
                                                                                                    de =>
                                                                                                    {
                                                                                                        de.Click.Url = "/CarBarg/index";
                                                                                                        de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                                        de.Click.Before = "if(App.CarBarg!=null){var tab =App.BasicInfTab.getComponent('CarBarg');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                    }
                                                                                                )
                                                                                                     , X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(258, "", "0"))
                                                                                                                            .ImageUrl("/content/icon/BasicInf/اطلاعات کاربرگ1.png")
                                                                                                                            .OverImageUrl("/content/icon/BasicInf/اطلاعات کاربرگ.png")
                                                                                                .DirectEvents(
                                                                                                    de =>
                                                                                                    {
                                                                                                        de.Click.Url = "/Mosavabat/index";
                                                                                                        de.Click.ExtraParams.Add(new { containerId = "BasicInfTab" });
                                                                                                        de.Click.Before = "if(App.Mosavabat!=null){var tab =App.BasicInfTab.getComponent('Mosavabat');App.BasicInfTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                    }
                                                                                                )
                                                                    )
                                                            )
                                                    )
                                            )
                                    )
                            )
                    )
            ),
            
                Html.X().DesktopModule()
                .ModuleID("_MonitoringFirstRegister")
                    .Shortcut(
                        Html.X().DesktopShortcut().SortIndex(1)
                             .Hidden(!RaiSam.Models.Permission.haveAccess(190, "", "0"))
                        .Name("مانیتورینگ ثبت نام اولیه")
                        .IconCls("shortcut_MonitoringFirstRegister")
                        .Handler("Ext.net.DirectMethod.request({url: '/MonitoringFirstRegister/Index'})")

                    )

                .Launcher(
                    Html.X().MenuItem()
                        .Text("مانیتورینگ ثبت نام اولیه")
                                 .Hidden(!RaiSam.Models.Permission.haveAccess(190, "", "0"))
                        .IconCls("shortcut_MonitoringFirstRegister")
                    .Handler("Ext.net.DirectMethod.request({url: '/MonitoringFirstRegister/Index'})")
                    )
            ,
      

                              Html.X().DesktopModule()
                    .ModuleID("_MonitoringRegisterComplete")
                .Shortcut(
                        Html.X().DesktopShortcut().SortIndex(1)
                                 .Hidden(!RaiSam.Models.Permission.haveAccess(191, "", "0"))
                                .Name("مانیتورینگ تکمیل ثبت نامی ها")
                                .IconCls("shortcut_MonitoringRegisterComplete")
                                   // .Handler("Ext.net.DirectMethod.request({url: '/faces/SelectRequest/Index'})").SortIndex(6)

                )

            .Launcher(
                Html.X().MenuItem()
                      .Text("مانیتورینگ تکمیل ثبت نامی ها")
                                 .Hidden(!RaiSam.Models.Permission.haveAccess(191, "", "0"))
                                .IconCls("shortcut_MonitoringRegisterComplete")
                                      // .Handler("Ext.net.DirectMethod.request({url: '/faces/SelectRequest/Index'})")
                )
                    .Window(
                    Html.X().Window()
                        .RTL(true)
                            .ID("MonitoringRegisterCompleteWin")
                       // .Tools(X.Tool().Type(Ext.Net.ToolType.Help).Listeners(l => l.Click.Handler = "showHelpKartabl()").ToolTip("راهنما"))
                            .Title("مانیتورینگ تکمیل ثبت نامی ها")
                        .Closable(true)
                        .Border(false)
                        .AutoScroll(true)
                        .CloseAction(CloseAction.Destroy)
                        .Icon(Icon.ApplicationForm)
                        .Layout(LayoutType.Fit)
                        .Height(500)
                        .Maximized(true)
                        .Items(
                            X.TabPanel()
                                    .ID("TabMonitoring")
                                .Border(false)
                                .Layout(LayoutType.Fit)
                                    .Listeners(l => l.AfterRender.Handler = "App.TabMonitoring.tabBar.hide();")
                                )
                        .DirectEvents(
                            de =>
                            {
                                de.Render.Before = "Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                de.Render.Url = "/MonitoringRegisterComplete/Index";
                                de.Render.ExtraParams.Add(new { containerId = "TabMonitoring"/*, StateLoad="0"*/ });
                            }
                            )
                        )
                        ,
               X.DesktopModule()
                    .ModuleID("Operation")
                    .Shortcut(
                        Html.X().DesktopShortcut()
                            .Name("عملیات")
                                .Hidden(!RaiSam.Models.Permission.haveAccess(92,"","0"))
                            .IconCls("shortcut-Operation")
                            .SortIndex(3)
                    )
                    .Launcher(
                        Html.X().MenuItem()
                            .Text("عملیات")
                                    .Hidden(!RaiSam.Models.Permission.haveAccess(92, "", "0"))
                            .IconCls("shortcut-Operation")
                    )
                    .Window(
                        Html.X().Window()
                            .RTL(true)
                            .ID("OperationWin")
                            .AutoScroll(true)
                            .Title("عملیات")
                            .Icon(Ext.Net.Icon.TableSave)
                            .BodyStyle("background-color:rergb(244, 247, 249;")
                                .CloseAction(Ext.Net.CloseAction.Destroy)
                                        .Listeners(l =>
                                        {
                                            l.BeforeClose.Handler = "FnCloseFrm('پنجره عملیات');";
                                            l.Minimize.Handler = "FnMinimizeFrm('پنجره عملیات');";
                                            l.Show.Handler = "FnOpenFrm('پنجره عملیات');";
                                        })
                            .Layout(Ext.Net.LayoutType.Anchor)
                            .Maximized(true)
                            .Height(600)
                            .Items(
                                X.Panel()
                                    .Border(false)
                                    .Items(
                                        Html.X().TabPanel()
                                            .Border(false)
                                            .Items(
                                                X.Panel()
                                                    .Border(false)
                                                    .Title("عملیات")
                                                    .TabMenu(m => m.Add(X.Menu().Items(
                                                                X.MenuItem().Text("تعریف اقدامات").DirectClickUrl("/Actions/index?containerId=OperationTab").IconCls("Action").Hidden(!RaiSam.Models.Permission.haveAccess(93, "", "0")),
                                                             X.MenuItem().Text("تعریف اکشن").DirectClickUrl("/Operation/index?containerId=OperationTab").IconCls("OperationMini").Hidden(!RaiSam.Models.Permission.haveAccess(99, "", "0")),

                                                                    X.MenuItem().Text("تعریف چرخه").DirectClickUrl("/Charkhe/index?containerId=OperationTab").IconCls("Charkhe").Hidden(!RaiSam.Models.Permission.haveAccess(116, "", "0")),
                                                                    X.MenuItem().Text("تعریف کارتابل").DirectClickUrl("/Kartabl/index?containerId=OperationTab").IconCls("Cartable").Hidden(!RaiSam.Models.Permission.haveAccess(120, "", "0")),
                                                                X.MenuItem().Text("عوامل موثر در چرخه").DirectClickUrl("/AvamelMoasser_Upgrade/index?containerId=OperationTab").IconCls("minAvamelMoaser").Hidden(!RaiSam.Models.Permission.haveAccess(132, "", "0")),
                                                                    X.MenuItem().Text("مقادیر عوامل موثر در چرخه").DirectClickUrl("/FactorsAffectingValues/index?containerId=OperationTab").IconCls("minFactorsAffectingValues").Hidden(!RaiSam.Models.Permission.haveAccess(136, "", "0")),
                                                                    X.MenuItem().Text("قوانین چرخه").DirectClickUrl("/Rules/index?containerId=OperationTab").IconCls("minRules").Hidden(!RaiSam.Models.Permission.haveAccess(140, "", "0"))
                                                                )))
                                                    .Items(
                                                        Html.X().TabPanel()
                                                            .Border(false)
                                                            .ID("OperationTab")
                                                            .ManageHeight(true)
                                                            .Items(
                                                                X.Panel()
                                                                    .Title("میزکار")
                                                                    .ItemID("pnlOperationTab")
                                                                    .Border(false)
                                                                        .Listeners(l => l.AfterRender.Handler = "App.OperationTab.queryById('pnlOperationTab').setSize(App.OperationWin.getWidth()-10,App.OperationWin.getHeight()-135);")
                                                                    .AutoScroll(true)
                                                                    .Margins("30 0 0 0")
                                                                    .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
                                                                    .Items(
                                                                        X.Container()
                                                                            .Region(Ext.Net.Region.Center)
                                                                            .Layout(Ext.Net.LayoutType.Table)
                                                                            .Center()
                                                                            .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 7 })
                                                                            .Defaults(new { Width = 110, Height = 110 })
                                                                            .Items(
                                                                            X.ImageButton()
                                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(93, "", "0"))
                                                                                        .ImageUrl("/Content/icon/Operation/تعریف اقدامات1.png")
                                                                                    .OverImageUrl("/Content/icon/Operation/تعریف اقدامات.png")

                                                                                .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/Actions/Index";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "OperationTab" });
                                                                                        de.Click.Before = "if(App.Actions!=null){var tab =App.OperationTab.getComponent('Actions');App.OperationTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                    )
                                                                                        ,
                                                                                        X.ImageButton()
                                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(99, "", "0"))
                                                                                                .ImageUrl("/Content/icon/Operation/تعریف اکشن1.png")
                                                                                                .OverImageUrl("/Content/icon/Operation/تعریف اکشن.png")

                                                                                        .DirectEvents(
                                                                                            de =>
                                                                                            {
                                                                                                de.Click.Url = "/Operation/Index";
                                                                                                de.Click.ExtraParams.Add(new { containerId = "OperationTab" });
                                                                                                de.Click.Before = "if(App.Operation!=null){var tab =App.OperationTab.getComponent('Operation');App.OperationTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                de.Click.Success = "Ext.net.Mask.hide();";
                                                                                            }
                                                                                            ),
                                                                                            X.ImageButton()
                                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(116, "", "0"))
                                                                                            .ImageUrl("/Content/icon/Operation/تعریف چرخه1.png")
                                                                                            .OverImageUrl("/Content/icon/Operation/تعریف چرخه.png")

                                                                                        .DirectEvents(
                                                                                            de =>
                                                                                            {
                                                                                                de.Click.Url = "/Charkhe/Index";
                                                                                                de.Click.ExtraParams.Add(new { containerId = "OperationTab" });
                                                                                                de.Click.Before = "if(App.Charkhe!=null){var tab =App.OperationTab.getComponent('Charkhe');App.OperationTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                de.Click.Success = "Ext.net.Mask.hide();";
                                                                                            }
                                                                                            ),
                                                                                        X.ImageButton()
                                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(120, "", "0"))
                                                                                            .ImageUrl("/Content/icon/Operation/تعریف کارتابل1.png")
                                                                                                .OverImageUrl("/Content/icon/Operation/تعریف کارتابل.png")

                                                                                    .DirectEvents(
                                                                                        de =>
                                                                                        {
                                                                                            de.Click.Url = "/Kartabl/Index";
                                                                                            de.Click.ExtraParams.Add(new { containerId = "OperationTab" });
                                                                                            de.Click.Before = "if(App.Kartabl!=null){var tab =App.OperationTab.getComponent('Kartabl');App.OperationTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
                                                                                        }
                                                                                        ),

                                                                                        X.ImageButton()
                                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(132, "", "0"))
                                                                                        .ImageUrl("/Content/icon/Operation/عوامل موثر در چرخه1.png")
                                                                                        .OverImageUrl("/Content/icon/Operation/عوامل موثر در چرخه.png")
                                                                                    .DirectEvents(
                                                                                        de =>
                                                                                        {
                                                                                            de.Click.Url = "/AvamelMoasser_Upgrade/Index";
                                                                                            de.Click.ExtraParams.Add(new { containerId = "OperationTab" });
                                                                                            de.Click.Before = "if(App.AvamelMoasser_Upgrade!=null){var tab =App.OperationTab.getComponent('AvamelMoasser_Upgrade');App.OperationTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
                                                                                        }
                                                                                        ),

                                                                                        X.ImageButton()
                                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(136, "", "0"))
                                                                                            .ImageUrl("/Content/icon/Operation/مقادیرعوامل موثر در چرخه1.png")
                                                                                            .OverImageUrl("/Content/icon/Operation/مقادیرعوامل موثر در چرخه.png")
                                                                                    .DirectEvents(
                                                                                        de =>
                                                                                        {
                                                                                            de.Click.Url = "/FactorsAffectingValues/Index";
                                                                                            de.Click.ExtraParams.Add(new { containerId = "OperationTab" });
                                                                                            de.Click.Before = "if(App.FactorsAffectingValues!=null){var tab =App.OperationTab.getComponent('FactorsAffectingValues');App.OperationTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
                                                                                        }
                                                                                        ),

                                                                                        X.ImageButton()
                                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(140, "", "0"))
                                                                                                .ImageUrl("/Content/icon/Operation/قوانین چرخه1.png")
                                                                                                .OverImageUrl("/Content/icon/Operation/قوانین چرخه.png")
                                                                                    .DirectEvents(
                                                                                        de =>
                                                                                        {
                                                                                            de.Click.Url = "/Rules/Index";
                                                                                            de.Click.ExtraParams.Add(new { containerId = "OperationTab" });
                                                                                            de.Click.Before = "if(App.Rules!=null){var tab =App.OperationTab.getComponent('Rules');App.OperationTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
                                                                                        }
                                                                                            ),
                                                                                             X.ImageButton()
                                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(230, "", "0"))
                                                                                                    .ImageUrl("/content/icon/Operation/آیتم های داینامیک امتیاز1.png")
                                                                                                    .OverImageUrl("/content/icon/Operation/آیتم های داینامیک امتیاز.png")
                                                                                .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/ItemsDynamicRating/index";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "OperationTab" });
                                                                                        de.Click.Before = "if(App.ItemsDynamicRating!=null){var tab =App.OperationTab.getComponent('ItemsDynamicRating');App.OperationTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                )
                                                                                                 
                                                                                )
                                                                    )
                                                            )
                                                    )
                                            )
                                    )
                            )
                    )
           ,
        X.DesktopModule()
            .ModuleID("Ticketing")
            .Shortcut(
                Html.X().DesktopShortcut()
                    .Name("تیکت")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(27, "", "0"))
                    .IconCls("shortcut-Ticketing")
                    .SortIndex(6)
            )
            .Launcher(
                Html.X().MenuItem()
                    .Text("تیکت")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(27, "", "0"))
                    .IconCls("shortcut-Ticketing")
            )
            .Window(
                Html.X().Window()
                    .RTL(true)
                    .ID("TicketingWin")
                    .AutoScroll(true)
                    .Title("تیکت")
                    .Icon(Ext.Net.Icon.CogGo)
                    .BodyStyle("background-color:rergb(244, 247, 249;")
                        .CloseAction(Ext.Net.CloseAction.Destroy)
                                    .Listeners(l =>
                                    {
                                        l.BeforeClose.Handler = "FnCloseFrm('پنجره تیکت');";
                                        l.Minimize.Handler = "FnMinimizeFrm('پنجره تیکت');";
                                        l.Show.Handler = "FnOpenFrm('پنجره تیکت');";
                                    })
                    .Layout(Ext.Net.LayoutType.Anchor)
                    .Maximized(true)
                    .Height(600)
                    .Items(
                        X.Panel()
                            .Border(false)
                            .Items(
                                Html.X().TabPanel()
                                    .Border(false)
                                    .Items(
                                        X.Panel()
                                            .Border(false)
                                            .Title("تیکت")
                                            .TabMenu(m => m.Add(X.Menu().Items(
                                                    X.MenuItem().Text("موضوع گفتگو").DirectClickUrl("/TicketCategory/index?containerId=TicketingTab").IconCls("minTicketCategory").Hidden(!RaiSam.Models.Permission.haveAccess(28, "", "0")),
                                                    X.MenuItem().Text("دسترسی گفتگو").DirectClickUrl("/TicketPermission/index?containerId=TicketingTab").IconCls("minTicketPermission").Hidden(!RaiSam.Models.Permission.haveAccess(33, "", "0")),
                                                    X.MenuItem().Text("فرمت ها مجاز").DirectClickUrl("/TicketFormatFile/index?containerId=TicketingTab").IconCls("minTicketFormatFile").Hidden(!RaiSam.Models.Permission.haveAccess(219, "", "0")),
                                                    X.MenuItem().Text("گفتگوها").DirectClickUrl("/TicketKartabl/index?containerId=TicketingTab").IconCls("minChats").Hidden(!RaiSam.Models.Permission.haveAccess(32, "", "0"))
                                            )))
                                            .Items(
                                                Html.X().TabPanel()
                                                    .Border(false)
                                                    .ID("TicketingTab")
                                                    .ManageHeight(true)
                                                    .Items(
                                                        X.Panel()
                                                            .Title("میزکار")
                                                            .ItemID("pnlTicketingTab")
                                                            .Border(false)
                                                            .Listeners(l => l.AfterRender.Handler = "App.TicketingTab.queryById('pnlTicketingTab').setSize(App.TicketingWin.getWidth()-10,App.TicketingWin.getHeight()-135);")
                                                            .AutoScroll(true)
                                                            .Margins("30 0 0 0")
        //.Height(500)
                                                            .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
                                                            .Items(
                                                                X.Container()
                                                                    .Region(Ext.Net.Region.Center)
                                                                    .Layout(Ext.Net.LayoutType.Table)
                                                                    .Center()
                                                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 7 })
                                                                    .Defaults(new { Width = 110, Height = 110 })
                                                                    .Items(
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(28, "", "0"))
                                                                                .ImageUrl("/Content/icon/Ticketing/موضوع گفتگو1.png")
                                                                            .OverImageUrl("/Content/icon/Ticketing/موضوع گفتگو.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/TicketCategory/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "TicketingTab" });
                                                                                    de.Click.Before = "if(App.TicketCategory!=null){var tab =App.TicketingTab.getComponent('TicketCategory');App.TicketingTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            ),
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(33, "", "0"))
                                                                            .ImageUrl("/Content/icon/Ticketing/دسترسی گفتگو1.png")
                                                                            .OverImageUrl("/Content/icon/Ticketing/دسترسی گفتگو.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/TicketPermission/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "TicketingTab" });
                                                                                    de.Click.Before = "if(App.TicketPermission!=null){var tab =App.TicketingTab.getComponent('TicketPermission');App.TicketingTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            ),
                                                                            X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(219, "", "0"))
                                                                                .ImageUrl("/Content/icon/Ticketing/فرمت های مجاز1.png")
                                                                                .OverImageUrl("/Content/icon/Ticketing/فرمت های مجاز.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/TicketFormatFile/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "TicketingTab" });
                                                                                    de.Click.Before = "if(App.TicketFormatFile!=null){var tab =App.TicketingTab.getComponent('TicketFormatFile');App.TicketingTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            ),
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(32, "", "0"))
                                                                            .ImageUrl("/Content/icon/Ticketing/گفتگوها1.png")
                                                                            .OverImageUrl("/Content/icon/Ticketing/گفتگوها.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/TicketKartabl/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "TicketingTab" });
                                                                                    de.Click.Before = "if(App.TicketKartabl!=null){var tab =App.TicketingTab.getComponent('TicketKartabl');App.TicketingTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            )
                                                                    )
                                                            )
                                                    )
                                            )
                                    )
                            )
                    )
            ),
        X.DesktopModule()
            .ModuleID("_Ticket")
            .Shortcut(
                Html.X().DesktopShortcut()
                        .Hidden(!RaiSam.Models.Permission.haveAccess(35, "", "0"))
                    .Name("ارسال تیکت")
                    .IconCls("shortcut_SendTicket").SortIndex(7)
                    .Handler("Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });Ext.net.DirectMethod.request({url: '/UserTicket/Index'})")
                )
            .Launcher(
                Html.X().MenuItem()
                    .Text("ارسال تیکت")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(35, "", "0"))
                    .IconCls("shortcut_SendTicket")
                    .Handler("Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });Ext.net.DirectMethod.request({url: '/UserTicket/Index'})")
                )

                    ,
                        X.DesktopModule()
                    .ModuleID("_TechnicalDoc")
                .Shortcut(
                    Html.X().DesktopShortcut()
                        .SortIndex(15)
                            .Hidden(!RaiSam.Models.Permission.haveAccess(79, "", "0"))
                           .Name("راهنمای فرم ها")
                        .IconCls("shortcut_Help")
                            .Handler("Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });Ext.net.DirectMethod.request({url: '/TechnicalDocumentation/Index'})")
                )
                .Launcher(
                    Html.X().MenuItem()
                             .Text("راهنمای فرم ها")
                            .Hidden(!RaiSam.Models.Permission.haveAccess(79, "", "0"))
                            .IconCls("shortcut_Help")
                            .Handler("Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });Ext.net.DirectMethod.request({url: '/TechnicalDocumentation/Index'})")
                    ),
//           X.DesktopModule()
//                .ModuleID("Archive")
//                .Shortcut(
//                    Html.X().DesktopShortcut()
//                        .Name("آرشیو الکترونیک")
//                                .Hidden(!RaiSam.Models.Permission.haveAccess(100, "", "0"))
//                        .IconCls("shortcut-Archive")
//                        .SortIndex(8)
//                )
//                .Launcher(
//                    Html.X().MenuItem()
//                        .Text("آرشیو الکترونیک")
//                                .Hidden(!RaiSam.Models.Permission.haveAccess(100, "", "0"))
//                        .IconCls("shortcut-Archive")
//                )
//                .Window(
//                    Html.X().Window()
//                        .RTL(true)
//                        .ID("ArchiveWin")
//                        .AutoScroll(true)
//                        .Title("آرشیو الکترونیک")
//                        .Icon(Ext.Net.Icon.CogGo)
//                        .BodyStyle("background-color:rergb(244, 247, 249;")
//                            .CloseAction(Ext.Net.CloseAction.Destroy)
//                                    .Listeners(l =>
//                                    {
//                                        l.BeforeClose.Handler = "FnCloseFrm('پنجره آرشیو الکترونیک');";
//                                        l.Minimize.Handler = "FnMinimizeFrm('پنجره آرشیو الکترونیک');";
//                                        l.Show.Handler = "FnOpenFrm('پنجره آرشیو الکترونیک');";
//                                    })
//                        .Layout(Ext.Net.LayoutType.Anchor)
//                        .Maximized(true)
//                        .Height(600)
//                        .Items(
//                            X.Panel()
//                                .Border(false)
//                                .Items(
//                                    Html.X().TabPanel()
//                                        .Border(false)
//                                        .Items(
//                                            X.Panel()
//                                                .Border(false)
//                                                .Title("آرشیو الکترونیک")
//                                                .TabMenu(m => m.Add(X.Menu().Items(
//                                                            X.MenuItem().Text("فرمت فایل").DirectClickUrl("/FormatFile/index?containerId=ArchiveTab").IconCls("minFormat").Hidden(!RaiSam.Models.Permission.haveAccess(101, "", "0")),
//                                                            X.MenuItem().Text("خاصیت ها").DirectClickUrl("/Properties/index?containerId=ArchiveTab").IconCls("minProperties").Hidden(!RaiSam.Models.Permission.haveAccess(105, "", "0")),
//                                                            X.MenuItem().Text("ساختار درختی آرشیو الکترونیک").DirectClickUrl("/Archive/NewIndex?containerId=ArchiveTab").IconCls("minArchive").Hidden(!RaiSam.Models.Permission.haveAccess(111, "", "0"))//,
//)))
//                                                .Items(
//                                                    Html.X().TabPanel()
//                                                        .Border(false)
//                                                        .ID("ArchiveTab")
//                                                        .ManageHeight(true)
//                                                        .Items(
//                                                            X.Panel()
//                                                                .Title("میزکار")
//                                                                .ItemID("pnlArchiveTab")
//                                                                .Border(false)
//                                                                .Listeners(l => l.AfterRender.Handler = "App.ArchiveTab.queryById('pnlArchiveTab').setSize(App.ArchiveWin.getWidth()-10,App.ArchiveWin.getHeight()-100);")
//                                                                .AutoScroll(true)
//                                                                .Margins("30 0 0 0")
//                                                                .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
//                                                                .Items(
//                                                                    X.Container()
//                                                                        .Region(Ext.Net.Region.Center)
//                                                                        .Layout(Ext.Net.LayoutType.Table)
//                                                                        .Center()
//                                                                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 7 })
//                                                                        .Defaults(new { Width = 110, Height = 110 })
//                                                                        .Items(
//                                                                                    X.ImageButton()
//                                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(101, "", "0"))
//                                                                                    .OverImageUrl("/Content/icon/Archive/فرمت های مجاز.png")
//                                                                                        .ImageUrl("/Content/icon/Archive/فرمت های مجاز1.png")
//                                                                                    .DirectEvents(
//                                                                                        de =>
//                                                                                        {
//                                                                                            de.Click.Url = "/FormatFile/index";
//                                                                                            de.Click.ExtraParams.Add(new { containerId = "ArchiveTab" });
//                                                                                            de.Click.Before = "if(App.FormatFile!=null){var tab =App.ArchiveTab.getComponent('FormatFile');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
//                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
//                                                                                        }
//                                                                                    ),

//                                                                                            X.ImageButton()
//                                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(105, "", "0"))
//                                                                                            .OverImageUrl("/Content/icon/Archive/خاصیت ها.png")
//                                                                                                .ImageUrl("/Content/icon/Archive/خاصیت ها1.png")
//                                                                                            .DirectEvents(
//                                                                                                de =>
//                                                                                                {
//                                                                                                    de.Click.Url = "/Properties/index";
//                                                                                                    de.Click.ExtraParams.Add(new { containerId = "ArchiveTab" });
//                                                                                                    de.Click.Before = "if(App.Properties!=null){var tab =App.ArchiveTab.getComponent('Properties');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
//                                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
//                                                                                                }
//                                                                                            ),
//                                                                                            X.ImageButton()
//                                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(111, "", "0"))
//                                                                                    .OverImageUrl("/Content/icon/Archive/ساختاردرختی آرشیو الکترونیک.png")
//                                                                                    .ImageUrl("/Content/icon/Archive/ساختاردرختی آرشیو الکترونیک1.png")
//                                                                                .DirectEvents(
//                                                                                    de =>
//                                                                                    {
//                                                                                        de.Click.Url = "/Archive/NewIndex";
//                                                                                        de.Click.ExtraParams.Add(new { containerId = "ArchiveTab" });
//                                                                                        de.Click.Before = "if(App.Archive_Tree!=null){var tab =App.ArchiveTab.getComponent('Archive_Tree');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
//                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
//                                                                                    }
//                                                                                )

//                                                                        )
//                                                                )
//                                                        )
//                                                )
//                                        )
//                                )
//                        )
//                ),
        X.DesktopModule()
            .ModuleID("_PageHtml")
            .Shortcut(
                Html.X().DesktopShortcut()
                    .SortIndex(14)
                        .Hidden(!RaiSam.Models.Permission.haveAccess(144, "", "0"))
                    .Name("صفحات Html")
                    .IconCls("shortcut_PageHtml")
                    .Handler("Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });Ext.net.DirectMethod.request({url: '/PageHtml/Index'})")
            )
            .Launcher(
                Html.X().MenuItem()
                    .Text("صفحات Html")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(144, "", "0"))
                    .IconCls("shortcut_PageHtml")
                    .Handler("Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });Ext.net.DirectMethod.request({url: '/PageHtml/Index'})")
                ),
        X.DesktopModule()
            .ModuleID("_Help")
            .Shortcut(
                Html.X().DesktopShortcut()
                    .SortIndex(16)
                    .Name("راهنما کلی")
                    .IconCls("shortcut_HelpKoli")
                    .Handler("Ext.net.DirectMethod.request({url: '/Home/PrintHelp'})")
            )
            .Launcher(
                Html.X().MenuItem()
                    .Text(" راهنما کلی")
                    .IconCls("shortcut_HelpKoli")
                    .Handler("Ext.net.DirectMethod.request({url: '/Home/PrintHelp'})")
                ),
                 
            X.DesktopModule()
                    .ModuleID("_MostanadFani")
                .Shortcut(
                    Html.X().DesktopShortcut()
                                .Name("مستندات فنی")
                            .Hidden(!RaiSam.Models.Permission.haveAccess(166, "", "0"))
                                .IconCls("shortcut_MostanadFanii")
                        .SortIndex(16)
                )
                .Launcher(
                    Html.X().MenuItem()
                                    .Text("مستندات فنی")
                            .Hidden(!RaiSam.Models.Permission.haveAccess(166, "", "0"))
                                    .IconCls("shortcut_MostanadFanii")
                )
                .Window(
                    Html.X().Window()
                        .RTL(true)
                                .ID("MostanadFaniWin")
                        .AutoScroll(true)
                            .Title("MostanadFani")
                        .Icon(Ext.Net.Icon.User)
                        .BodyStyle("background-color:rergb(244, 247, 249;")
                            .CloseAction(Ext.Net.CloseAction.Destroy)
                                        .Listeners(l =>
                                        {
                                            l.BeforeClose.Handler = "FnCloseFrm('پنجره رویدادها');";
                                            l.Minimize.Handler = "FnMinimizeFrm('پنجره رویدادها');";
                                            l.Show.Handler = "FnOpenFrm('پنجره رویدادها');";
                                        })
                        .Layout(Ext.Net.LayoutType.Anchor)
                        .Maximized(true)
                        .Height(600)
                        .Items(
                            X.Panel()
                                .Border(false)
                                .Items(
                                    Html.X().TabPanel()
                                        .Border(false)
                                        .Items(
                                            X.Panel()
                                                    .Title("مستندات فنی")
                                                .TabMenu(m => m.Add(X.Menu().Items(
                                                        //X.MenuItem().Text("ارجاع").DirectClickUrl("/Erja/index?containerId=crmTab").IconCls("miniErja").Hidden(!RaiSam.Models.Permission.haveAccess(71, "", "0")),
                                                        //X.MenuItem().Text("ورژن").DirectClickUrl("/Version/index?containerId=crmTab").IconCls("miniVersion").Hidden(!RaiSam.Models.Permission.haveAccess(84, "", "0"))

                                                )))
                                                .Border(false)
                                                .Items(
                                                    Html.X().TabPanel()
                                                        .Border(false)
                                                            .ID("MostanadFaniTab")
                                                        .ManageHeight(true)
                                                        .Items(
                                                            X.Panel()
                                                                .Title("میزکار")
                                                                        .ItemID("pnlMostanadFaniTab")
                                                                .Border(false)
                                                                                    .Listeners(l => l.AfterRender.Handler = "App.MostanadFaniTab.queryById('pnlMostanadFaniTab').setSize(App.MostanadFaniWin.getWidth()-10,App.MostanadFaniWin.getHeight()-135);")
                                                                .AutoScroll(true)
                                                                .Margins("30 0 0 0")
        //.Height(500)
                                                                .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
                                                                .Items(
                                                                    X.Container()
                                                                        .Region(Ext.Net.Region.Center)
                                                                        .Layout(Ext.Net.LayoutType.Table)
                                                                        .Center()
                                                                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 7 })
                                                                        .Defaults(new { Width = 110, Height = 110 })
                                                                        .Items(
                                                                            X.ImageButton()
                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(167, "", "0"))
                                                                                                .ImageUrl("/Content/icon/Mostanadat/دیتابیس chm مستندات.png")
                                                                                                .OverImageUrl("/Content/icon/Mostanadat/دیتابیس1 chm مستندات.png")
                                                                                            .Listeners(l => l.Click.Handler = "DownloadCHM()")
                                                                                ,
                                                                                    X.ImageButton()
                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(168, "", "0"))
                                                                                                    .ImageUrl("/Content/icon/Mostanadat/1pdf مستندات.png")
                                                                                                    .OverImageUrl("/Content/icon/Mostanadat/pdf مستندات.png")
                                                                                .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/MostanadatFani/PrintMostanadPdf";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "MostanadFaniTab" });
                                                                                        de.Click.Before = "if(App.MostanadatFani!=null){var tab =App.MostanadFaniTab.getComponent('MostanadatFani');App.EventsTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                )

                                                                    )
                                                            )
                                                    )
                                            )
                                    )
                            )
                    )
                ),
                //Html.X().DesktopModule()
        //        .ModuleID("_MostanadFani")
        //    .Shortcut(
        //        Html.X().DesktopShortcut()
        //            .SortIndex(17)
        //                    .Hidden(!RaiSam.Models.Permission.haveAccess(40, "", "0"))
        //            .Name("مستندات فنی")
        //                    .IconCls("shortcut_MostanadFanii")
        //    )
        //    .Launcher(
        //        Html.X().MenuItem()
        //            .Text("مستندات فنی")
        //                    .Hidden(!RaiSam.Models.Permission.haveAccess(40, "", "0"))
        //                    .IconCls("shortcut_MostanadFanii")
        //        )
        //    .Window(
        //        Html.X().Window()
        //            .RTL(true)
        //                .ID("MostanadFaniWin")
        ////.Tools(X.Tool().Type(Ext.Net.ToolType.Help).Listeners(l => l.Click.Handler = "showHelpKartabl()").ToolTip("راهنما"))
        //            .Title("مستندات فنی")
        //            .Closable(true)
        //            .Border(false)
        //            .AutoScroll(true)
        //                .CloseAction(CloseAction.Destroy)
        //                            .Listeners(l =>
        //                            {
        //                                l.BeforeClose.Handler = "FnCloseFrm('پنجره مستندات فنی');";
        //                                l.Minimize.Handler = "FnMinimizeFrm('پنجره مستندات فنی');";
        //                                l.Show.Handler = "FnOpenFrm('پنجره مستندات فنی');";
        //                            })
        //            .Icon(Icon.ApplicationForm)
        //            .Layout(LayoutType.Fit)
        //            .Height(500)
        //            .Maximized(true)
        //            .Items(
        //                X.TabPanel()
        //                    .ID("TabMF")
        //                    .Border(false)
        //                    .Layout(LayoutType.Fit)
        //                        .Listeners(l => l.AfterRender.Handler = "App.TabMF.tabBar.hide();")
        //                    )
        //            .DirectEvents(
        //                de =>
        //                {
        //                    de.Render.Before = "Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
        //                    de.Render.Url = "/MostanadatFani/Index";
        //                    de.Render.ExtraParams.Add(new { containerId = "TabMF" });
        //                }
        //                )
        //            ),
        X.DesktopModule()
            .ModuleID("ReportRaiSam")
            .Shortcut(
                Html.X().DesktopShortcut()
                    .Name("گزارشات")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(216, "", "0"))
                    .IconCls("shortcut-ReportRaiSam")
                    .SortIndex(9)
            )
            .Launcher(
                Html.X().MenuItem()
                    .Text("گزارشات")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(216, "", "0"))
                    .IconCls("shortcut-ReportRaiSam")
            )
            .Window(
                Html.X().Window()
                    .RTL(true)
                    .ID("ReportRaiSamWin")
                    .AutoScroll(true)
                    .Title("گزارشات")
                    .Icon(Ext.Net.Icon.Report)
                    .BodyStyle("background-color:rergb(244, 247, 249;")
                        .CloseAction(Ext.Net.CloseAction.Destroy)
                                    .Listeners(l =>
                                    {
                                        l.BeforeClose.Handler = "FnCloseFrm('پنجره گزارشات');";
                                        l.Minimize.Handler = "FnMinimizeFrm('پنجره گزارشات');";
                                        l.Show.Handler = "FnOpenFrm('پنجره گزارشات');";
                                    })
                    .Layout(Ext.Net.LayoutType.Anchor)
                    .Maximized(true)
                    .Height(600)
                    .Items(
                        X.Panel()
                            .Border(false)
                            .Items(
                                Html.X().TabPanel()
                                    .Border(false)
                                    .Items(
                                        X.Panel()
                                            .Title("گزارشات")
                                            .TabMenu(m => m.Add(X.Menu().Items(
                                               
                                                 )))
                                            .Border(false)
                                            .Items(
                                                Html.X().TabPanel()
                                                    .Border(false)
                                                    .ID("ReportRaiSamTab")
                                                        .Listeners(l => l.AfterRender.Handler = "App.ReportRaiSamTab.setSize(Ext.getBody().getViewSize().width-10,Ext.getBody().getViewSize().height-85);")
                                                    .Layout(LayoutType.Fit)
                                                    .ManageHeight(true)
                                                    .Items(
                                                        X.Panel()
                                                            .Title("گزارشات عمومی")
                                                            .ItemID("pnlReportRaiSamTab")
                                                            .Border(false)
                                                            .Layout(LayoutType.Fit)
                                                            .AutoScroll(true)
                                                                .TabMenu(m => m.Add(X.Menu().Items(
                                                                            X.MenuItem().Text("گزارش بارنامه ها").DirectClickUrl("/RptBarname/NewIndex?containerId=crmTab").IconCls("miniRptBarname").Hidden(!RaiSam.Models.Permission.haveAccess(217, "", "0")),
                                                                                    X.MenuItem().Text("گزارش کلی بارنامه ها").DirectClickUrl("/RptBarname/NewIndexKoli?containerId=crmTab").IconCls("miniRptKoliBarname").Hidden(!RaiSam.Models.Permission.haveAccess(218, "", "0")),
                                                                                    X.MenuItem().Text("گزارش کلی بارنامه ها").DirectClickUrl("/RptBarname/IndexLoco?containerId=crmTab").IconCls("miniRptLoco").Hidden(!RaiSam.Models.Permission.haveAccess(246, "", "0"))
                                                        
                                                    )))
        //.Margins("30 0 0 0")
        //.LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })

                                                            //.Margins("30 0 0 0")
        //.Height(500)
                                                            .Items(
                                                                X.TabPanel()
                                                                .ID("ReportGeneralTab").Border(false)
                                                                .Layout(LayoutType.Fit)
                                                                .Items(
                                                                X.Panel().Margins("30 0 0 0")
                                                                .Border(false)

                                                                .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
                                                                .Title("میز کار")
                                                            .Items(
                                                                X.Container()
                                                                    .Region(Ext.Net.Region.Center)
                                                                    .Layout(Ext.Net.LayoutType.Table)
                                                                    .Center()
                                                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                                                                    .Defaults(new { Width = 110, Height = 110 })
                                                                    .Items(

                                                                                 X.ImageButton()
                                                                                            .Hidden(!RaiSam.Models.Permission.haveAccess(217, "", "0"))
                                                                                                .ImageUrl("/Content/icon/Report/گزارش بارنامه ها1.png")
                                                                                                .OverImageUrl("/Content/icon/Report/گزارش بارنامه ها.png")
                                                                                    .DirectEvents(
                                                                                        de =>
                                                                                        {
                                                                                            de.Click.Url = "/RptBarname/NewIndex";
                                                                                            de.Click.ExtraParams.Add(new { containerId = "ReportGeneralTab" });
                                                                                            de.Click.Before = "if(App.RptBarname!=null){var tab =App.ReportGeneralTab.getComponent('RptBarname');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
                                                                                        }
                                                                                    )
                                                                                    ,
                                                                                        X.ImageButton()
                                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(218, "", "0"))
                                                                                                        .ImageUrl("/Content/icon/Report/گزارش کلی بارنامه ها1.png")
                                                                                                        .OverImageUrl("/Content/icon/Report/گزارش کلی بارنامه ها.png")
                                                                                        .DirectEvents(
                                                                                            de =>
                                                                                            {
                                                                                                de.Click.Url = "/RptBarname/NewIndexKoli";
                                                                                                de.Click.ExtraParams.Add(new { containerId = "ReportGeneralTab" });
                                                                                                de.Click.Before = "if(App.RptKoliBarname!=null){var tab =App.ReportGeneralTab.getComponent('RptKoliBarname');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                de.Click.Success = "Ext.net.Mask.hide();";
                                                                                            }
                                                                                        ) ,
                                                                                            X.ImageButton()
                                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(249, "", "0"))
                                                                                                                .ImageUrl("/Content/icon/Report/گزارش گروهی بارنامه1.png")
                                                                                                                .OverImageUrl("/Content/icon/Report/گزارش گروهی بارنامه.png")
                                                                                            .DirectEvents(
                                                                                                de =>
                                                                                                {
                                                                                                    de.Click.Url = "/RptBarname/IndexGroup";
                                                                                                    de.Click.ExtraParams.Add(new { containerId = "ReportGeneralTab" });
                                                                                                    de.Click.Before = "if(App.RptGroup!=null){var tab =App.ReportGeneralTab.getComponent('RptGroup');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                }
                                                                                            )
                                                                                                 ,
                                                                                                X.ImageButton()
                                                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(251, "", "0"))
                                                                                                            .ImageUrl("/Content/icon/Report/خطوط فرعی1.png")
                                                                                                            .OverImageUrl("/Content/icon/Report/خطوط فرعی.png")
                                                                                                .DirectEvents(
                                                                                                    de =>
                                                                                                    {
                                                                                                        de.Click.Url = "/RptBarname/IndexKhat";
                                                                                                        de.Click.ExtraParams.Add(new { containerId = "ReportGeneralTab" });
                                                                                                        de.Click.Before = "if(App.RptKhat!=null){var tab =App.ReportGeneralTab.getComponent('RptKhat');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                    }
                                                                                                    ),
                                                                                            X.ImageButton()
                                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(246, "", "0"))
                                                                                                            .ImageUrl("/Content/icon/Report/گزارش لکوموتیوها1.png")
                                                                                                            .OverImageUrl("/Content/icon/Report/گزارش لکوموتیوها.png")
                                                                                            .DirectEvents(
                                                                                                de =>
                                                                                                {
                                                                                                    de.Click.Url = "/RptBarname/IndexLoco";
                                                                                                    de.Click.ExtraParams.Add(new { containerId = "ReportGeneralTab" });
                                                                                                    de.Click.Before = "if(App.RptLoco!=null){var tab =App.ReportGeneralTab.getComponent('RptLoco');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                }
                                                                                                ),
                                                                                            X.ImageButton()
                                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(257, "", "0"))
                                                                                                                .ImageUrl("/Content/icon/Report/گزارش اولین بارنامه لوکوموتیو.png")
                                                                                                                    .OverImageUrl("/Content/icon/Report/گزارش اولین بارنامه لوکوموتیو1.png")
                                                                                            .DirectEvents(
                                                                                                de =>
                                                                                                {
                                                                                                    de.Click.Url = "/RptBarname/IndexBarnameLoco";
                                                                                                    de.Click.ExtraParams.Add(new { containerId = "ReportGeneralTab" });
                                                                                                    de.Click.Before = "if(App.RptBarnameLoco!=null){var tab =App.ReportGeneralTab.getComponent('RptBarnameLoco');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                }
                                                                                                ),
                                                                                                X.ImageButton()
                                                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(250, "", "0"))
                                                                                                                        .ImageUrl("/Content/icon/Report/گزارش ریز عملکرد ماهیانه عاملین صرفه جویی11.png")
                                                                                                                        .OverImageUrl("/Content/icon/Report/گزارش ریز عملکرد ماهیانه عاملین صرفه جویی12.png")
                                                                                                .DirectEvents(
                                                                                                    de =>
                                                                                                    {
                                                                                                        de.Click.Url = "/RptRizAmalkard/Index";
                                                                                                        de.Click.ExtraParams.Add(new { containerId = "ReportGeneralTab" });
                                                                                                        de.Click.Before = "if(App.RptRizAmalkard!=null){var tab =App.ReportGeneralTab.getComponent('RptRizAmalkard');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                    }
                                                                                                    ),
                                                                                                X.ImageButton()
                                                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(256, "", "0"))
                                                                                                                            .ImageUrl("/Content/icon/Report/گزارش کاربرگ2.png")
                                                                                                                            .OverImageUrl("/Content/icon/Report/گزارش کاربرگ.png")
                                                                                                .DirectEvents(
                                                                                                    de =>
                                                                                                    {
                                                                                                        de.Click.Url = "/RptCarbarg/Index";
                                                                                                        de.Click.ExtraParams.Add(new { containerId = "ReportGeneralTab" });
                                                                                                        de.Click.Before = "if(App.RptCarbarg!=null){var tab =App.ReportGeneralTab.getComponent('RptCarbarg');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                    }
                                                                                                    )
                                                                                                //    ,
                                                                                                //X.ImageButton()
                                                                                                //        .Hidden(!RaiSam.Models.Permission.haveAccess(251, "", "0"))
                                                                                                //                    .ImageUrl("/Content/icon/Report/گزارش ریز عملکرد سه ماهه عاملین صرفه‌جویی1.png")
                                                                                                //                    .OverImageUrl("/Content/icon/Report/گزارش ریز عملکرد سه ماهه عاملین صرفه‌جویی.png")
                                                                                                //.DirectEvents(
                                                                                                //    de =>
                                                                                                //    {
                                                                                                //        de.Click.Url = "/RptRizAmalkard/IndexFasli";
                                                                                                //        de.Click.ExtraParams.Add(new { containerId = "ReportGeneralTab" });
                                                                                                //        de.Click.Before = "if(App.RptRizAmalkard!=null){var tab =App.ReportGeneralTab.getComponent('RptRizAmalkard');App.ArchiveTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                                //        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                                //    }
                                                                                                //)
                                                                    )
                                                                    )
                                                                    )
                                                            )
                                                                , X.Panel()
                                                                    .Title("گزارشات مبتنی بر چرخه")
                                                                    .ItemID("pnlReportRaiSamTab2")
                                                                    .Border(false)
                                                                    .Layout(LayoutType.Fit)
        //.Listeners(l => l.AfterRender.Handler = "App.ReportRaiSamTab.queryById('pnlReportRaiSamTab2').setSize(App.ReportRaiSamWin.getWidth()-10,App.ReportRaiSamWin.getHeight()-84);")
                                                                    .AutoScroll(true)
        //                                                            .Margins("30 0 0 0")
        //.Height(500)

                                                                            .Items(
                                                                                                X.TabPanel()
                                                                                           .ID("ReportCharkheTab").Border(false).Layout(LayoutType.Fit)
                                                                                .Items(
                                                                                                X.Panel().Margins("30 0 0 0")
                                                                                        .Border(false)//.Listeners(l => l.AfterRender.Handler = "App.ReportRaiSamTab.queryById('ReportCharkheTab').setSize(App.ReportRaiSamWin.getWidth()-25,App.ReportRaiSamWin.getHeight()-120);")
                                                                                    .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
                                                                                .Title("میز کار").Items(
                                                                                X.Container()
                                                                                    .Region(Ext.Net.Region.Center)
                                                                                    .Layout(Ext.Net.LayoutType.Table)
                                                                                    .Center()
                                                                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 6 })
                                                                                    .Defaults(new { Width = 110, Height = 110 })
                                                                                    .Items(
                                                                            

                                                                                    )))
                                                                            )
                                                    )
                                            )
                                    )
                            )
                    )
            ),
        X.DesktopModule()
            .ModuleID("create-User")
            .Shortcut(
                Html.X().DesktopShortcut()
                    .Name("کاربران")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(2, "", "0"))
                    .IconCls("shortcut-User")
                    .SortIndex(2)
            )
            .Launcher(
                Html.X().MenuItem()
                    .Text("کاربران")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(2, "", "0"))
                        .IconCls("shortcut-User")
            )
            .Window(
                Html.X().Window()
                    .RTL(true)
                    .ID("UserWin")
                    .AutoScroll(true)
                    .Title("کاربران")
                    .Icon(Ext.Net.Icon.User)
                    .BodyStyle("background-color:rergb(244, 247, 249;")
                        .CloseAction(Ext.Net.CloseAction.Destroy)
                                    .Listeners(l =>
                                    {
                                        l.BeforeClose.Handler = "FnCloseFrm('پنجره کاربران');";
                                        l.Minimize.Handler = "FnMinimizeFrm('پنجره کاربران');";
                                        l.Show.Handler = "FnOpenFrm('پنجره کاربران');";
                                    })
                    .Layout(Ext.Net.LayoutType.Anchor)
                    .Maximized(true)
                    .Height(600)
                    .Items(
                        X.Panel()
                            .Border(false)
                            .Items(
                                Html.X().TabPanel()
                                    .Border(false)
                                    .Items(
                                        X.Panel()
                                            .Title("کاربران")
                                            .TabMenu(m => m.Add(X.Menu().Items(
                                                X.MenuItem().Text("تعریف گروه کاربری").DirectClickUrl("/UserGroup/index?containerId=UserTab").IconCls("UserGroup").Hidden(!RaiSam.Models.Permission.haveAccess(6,"","0")),
                                                    X.MenuItem().Text("تعریف کاربر").DirectClickUrl("/User/index?containerId=UserTab").IconCls("User").Hidden(!RaiSam.Models.Permission.haveAccess(3, "", "0")),
                                                    X.MenuItem().Text("تعیین دسترسی").DirectClickUrl("/Permission/index?containerId=UserTab").IconCls("Permission").Hidden(!RaiSam.Models.Permission.haveAccess(10, "", "0")),
                                                    X.MenuItem().Text("بازبینی دسترسی").DirectClickUrl("/Permission/UserforPermission?containerId=UserTab").IconCls("MiniUserPer").Hidden(!RaiSam.Models.Permission.haveAccess(14, "", "0")),
                                                        X.MenuItem().Text("دسترسی کارتابل تخصصی").DirectClickUrl("/SpecificCartablePermission_UserGroup/Index?containerId=UserTab").IconCls("MiniSpecificPermi_UserGroup").Hidden(!RaiSam.Models.Permission.haveAccess(160,"","0"))
                                            )))
                                            .Border(false)
                                            .Items(
                                                Html.X().TabPanel()
                                                    .Border(false)
                                                    .ID("UserTab")
                                                    .ManageHeight(true)
                                                    .Items(
                                                        X.Panel()
                                                            .Title("میزکار")
                                                            .ItemID("pnlUserTab")
                                                            .Border(false)
                                                            .Listeners(l => l.AfterRender.Handler = "App.UserTab.queryById('pnlUserTab').setSize(App.UserWin.getWidth()-10,App.UserWin.getHeight()-135);")
                                                            .AutoScroll(true)
                                                            .Margins("30 0 0 0")
        //.Height(500)
                                                            .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
                                                            .Items(
                                                                X.Container()
                                                                    .Region(Ext.Net.Region.Center)
                                                                    .Layout(Ext.Net.LayoutType.Table)
                                                                    .Center()
                                                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 7 })
                                                                    .Defaults(new { Width = 110, Height = 110 })
                                                                    .Items(
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(6, "", "0"))
                                                                                .ImageUrl("/Content/icon/User/گروه کاربری1.png")
                                                                            .OverImageUrl("/Content/icon/User/گروه کاربری.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/UserGroup/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "UserTab" });
                                                                                    de.Click.Before = "if(App.UserGroup!=null){var tab =App.UserTab.getComponent('UserGroup');App.UserTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            ),
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(3, "", "0"))
                                                                                .ImageUrl("/Content/icon/User/تعریف کاربر1.png")
                                                                            .OverImageUrl("/Content/icon/User/تعریف کاربر.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/User/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "UserTab" });
                                                                                    de.Click.Before = "if(App.User!=null){var tab =App.UserTab.getComponent('User');App.UserTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            ),
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(10, "", "0"))
                                                                                .ImageUrl("/Content/icon/User/تعیین دسترسی1.png")
                                                                            .OverImageUrl("/Content/icon/User/تعیین دسترسی.png")
                                                                            .DirectEvents(
                                                                            de =>
                                                                            {
                                                                                de.Click.Url = "/Permission/index";
                                                                                de.Click.ExtraParams.Add(new { containerId = "UserTab" });
                                                                                de.Click.Before = "if(App.Permission!=null){var tab =App.UserTab.getComponent('Permission');App.UserTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                de.Click.Success = "Ext.net.Mask.hide();";
                                                                            }
                                                                        ),
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(14, "", "0"))
                                                                                .ImageUrl("/Content/icon/User/بازبینی دسترسی1.png")
                                                                            .OverImageUrl("/Content/icon/User/بازبینی دسترسی.png")
                                                                            .DirectEvents(
                                                                            de =>
                                                                            {
                                                                                de.Click.Url = "/Permission/UserforPermission";
                                                                                de.Click.ExtraParams.Add(new { containerId = "UserTab" });
                                                                                de.Click.Before = "if(App.UserforPermission!=null){var tab =App.UserTab.getComponent('UserforPermission');App.UserTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                de.Click.Success = "Ext.net.Mask.hide();";
                                                                            }
                                                                            )
                                                                           ,X.ImageButton()
                                                                               .Hidden(!RaiSam.Models.Permission.haveAccess(160,"","0"))
                                                                                    .ImageUrl("/Content/icon/User/دسترسی کارتابل تخصصی1.png")
                                                                                    .OverImageUrl("/Content/icon/User/دسترسی کارتابل تخصصی.png")
                                                                                .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/SpecificCartablePermission_UserGroup/Index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "UserTab" });
                                                                                    de.Click.Before = "if(App.SpecificCartablePermission_UserGroup!=null){var tab =App.UserTab.getComponent('SpecificCartablePermission_UserGroup');App.UserTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            )  

                                                                )
                                                        )
                                                )
                                        )
                                )
                        )
                )
                ),
                Html.X().DesktopModule()
                        .ModuleID("_GeneralKartabl")
                    .Shortcut(
                        Html.X().DesktopShortcut()
                            .SortIndex(5)
                                 .Hidden(!RaiSam.Models.Permission.haveAccess(164, "", "0"))
                            .Name("کارتابل")
                                .IconCls("shortcut-GeneralKartabl")
                    )
                    .Launcher(
                        Html.X().MenuItem()
                            .Text("کارتابل")
                                 .Hidden(!RaiSam.Models.Permission.haveAccess(164, "", "0"))
                                .IconCls("shortcut-GeneralKartabl")
                        )
                    .Window(
                        Html.X().Window()
                            .RTL(true)
                                .ID("GeneralKartabl")
        //.Tools(X.Tool().Type(Ext.Net.ToolType.Help).Listeners(l => l.Click.Handler = "showHelpKartabl()").ToolTip("راهنما"))
                            .Title("کارتابل")
                            .Closable(true)
                            .Border(false)
                            .AutoScroll(true)
                                .CloseAction(CloseAction.Destroy)
                                        .Listeners(l =>
                                        {
                                            l.BeforeClose.Handler = "FnCloseFrm('پنجره کارتابل');";
                                            l.Minimize.Handler = "FnMinimizeFrm('پنجره کارتابل');";
                                            l.Show.Handler = "FnOpenFrm('پنجره کارتابل');";
                                        })
                            .Icon(Icon.ApplicationForm)
                            .Layout(LayoutType.Fit)
                            .Height(500)
                            .Maximized(true)
                            .Items(
                                X.TabPanel()
                                    .ID("TabSK")
                                    .Border(false)
                                    .Layout(LayoutType.Fit)
                                    .Listeners(l => l.AfterRender.Handler = "App.TabSK.tabBar.hide();")
                                    )
                            .DirectEvents(
                                de =>
                                {
                                    de.Render.Before = "Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                    de.Render.Url = "/GeneralKartabl/Index";
                                    de.Render.ExtraParams.Add(new { containerId = "TabSK" });
                                }
                                )
                            ),
                 X.DesktopModule()
                .ModuleID("create-Contact")
                .Shortcut(
                    Html.X().DesktopShortcut()
                        .Name("تماس ها")
                            .Hidden(!RaiSam.Models.Permission.haveAccess(103, "", "0"))
                        .IconCls("shortcut-Contact")
                        .SortIndex(2)
                )
                .Launcher(
                    Html.X().MenuItem()
                            .Text("تماس ها")
                            .Hidden(!RaiSam.Models.Permission.haveAccess(103, "", "0"))
                            .IconCls("shortcut-Contact")
                )
                .Window(
                    Html.X().Window()
                        .RTL(true)
                        .ID("ContactWin")
                        .AutoScroll(true)
                            .Title("تماس ها")
                        .Icon(Ext.Net.Icon.User)
                        .BodyStyle("background-color:rergb(244, 247, 249;")
                            .CloseAction(Ext.Net.CloseAction.Destroy)
                                        .Listeners(l =>
                                        {
                                            l.BeforeClose.Handler = "FnCloseFrm('پنجره تماس ها');";
                                            l.Minimize.Handler = "FnMinimizeFrm('پنجره تماس ها');";
                                            l.Show.Handler = "FnOpenFrm('پنجره تماس ها');";
                                        })
                        .Layout(Ext.Net.LayoutType.Anchor)
                        .Maximized(true)
                        .Height(600)
                        .Items(
                            X.Panel()
                                .Border(false)
                                .Items(
                                    Html.X().TabPanel()
                                        .Border(false)
                                        .Items(
                                            X.Panel()
                                                    .Title("تماس ها")
                                                .TabMenu(m => m.Add(X.Menu().Items(
                                                            X.MenuItem().Text("نوع تماس").DirectClickUrl("/ContanctType/index?containerId=ContactTab").IconCls("miniContactType").Hidden(!RaiSam.Models.Permission.haveAccess(104, "", "0")),
                                                        X.MenuItem().Text("گروه تماس").DirectClickUrl("/ContactGroup/index?containerId=UserTab").IconCls("miniContactGroup").Hidden(!RaiSam.Models.Permission.haveAccess(108, "", "0")),
                                                        X.MenuItem().Text("ساختار درختی گروه تماس").DirectClickUrl("/ContactGroupTree/index?containerId=UserTab").IconCls("miniContactGroupTree").Hidden(!RaiSam.Models.Permission.haveAccess(112, "", "0")),
                                                        X.MenuItem().Text("تماس").DirectClickUrl("/Contact/index?containerId=ContactTab").IconCls("miniContact").Hidden(!RaiSam.Models.Permission.haveAccess(124, "", "0"))

                                                )))
                                                .Border(false)
                                                .Items(
                                                    Html.X().TabPanel()
                                                        .Border(false)
                                                        .ID("ContactTab")
                                                        .ManageHeight(true)
                                                        .Items(
                                                            X.Panel()
                                                                .Title("میزکار")
                                                                .ItemID("pnlContactTab")
                                                                .Border(false)
                                                                .Listeners(l => l.AfterRender.Handler = "App.ContactTab.queryById('pnlContactTab').setSize(App.ContactWin.getWidth()-10,App.ContactWin.getHeight()-135);")
                                                                .AutoScroll(true)
                                                                .Margins("30 0 0 0")
        //.Height(500)
                                                                .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
                                                                .Items(
                                                                    X.Container()
                                                                        .Region(Ext.Net.Region.Center)
                                                                        .Layout(Ext.Net.LayoutType.Table)
                                                                        .Center()
                                                                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 7 })
                                                                        .Defaults(new { Width = 110, Height = 110 })
                                                                        .Items(
                                                                            X.ImageButton()
                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(104, "", "0"))
                                                                                       .ImageUrl("/Content/icon/Contact/نوع تماس1.png")
                                                                                        .OverImageUrl("/Content/icon/Contact/نوع تماس.png")
                                                                                .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/ContanctType/index";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "ContactTab" });
                                                                                        de.Click.Before = "if(App.ContanctType!=null){var tab =App.ContactTab.getComponent('ContanctType');App.ContactTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                    ),
                                                                                X.ImageButton()
                                                                                        .Hidden(!RaiSam.Models.Permission.haveAccess(108, "", "0"))
                                                                                                .ImageUrl("/Content/icon/Contact/گروه1.png")
                                                                                            .OverImageUrl("/Content/icon/Contact/گروه.png")
                                                                                    .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/ContactGroup/index";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "ContactTab" });
                                                                                        de.Click.Before = "if(App.ContactGroup!=null){var tab =App.ContactTab.getComponent('ContactGroup');App.ContactTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                ),
                                                                                     X.ImageButton()
                                                                                            .Hidden(!RaiSam.Models.Permission.haveAccess(112, "", "0"))
                                                                                                .ImageUrl("/Content/icon/Contact/ساختار درختی گروه تماس1.png")
                                                                                                .OverImageUrl("/Content/icon/Contact/ساختار درختی گروه تماس.png")
                                                                                    .DirectEvents(
                                                                                        de =>
                                                                                        {
                                                                                            de.Click.Url = "/ContactGroupTree/index";
                                                                                            de.Click.ExtraParams.Add(new { containerId = "ContactTab" });
                                                                                            de.Click.Before = "if(App.ContactGroupTree!=null){var tab =App.ContactTab.getComponent('ContactGroupTree');App.ContactTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                            de.Click.Success = "Ext.net.Mask.hide();";
                                                                                        }
                                                                                    ),
                                                                            X.ImageButton()
                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(124, "", "0"))
                                                                                       .ImageUrl("/Content/icon/Contact/تماس1.png")
                                                                                        .OverImageUrl("/Content/icon/Contact/تماس.png")
                                                                                .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/Contact/index";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "ContactTab" });
                                                                                        de.Click.Before = "if(App.ContactForm!=null){var tab =App.ContactTab.getComponent('ContactForm');App.ContactTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                )

                                                                    )
                                                            )
                                                    )
                                            )
                                    )
                            )
                    )
                ),
        X.DesktopModule()
            .ModuleID("Events")
            .Shortcut(
                Html.X().DesktopShortcut()
                    .Name("رویدادها")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(26, "", "0"))
                    .IconCls("shortcut-Events")
                    .SortIndex(10)
            )
            .Launcher(
                Html.X().MenuItem()
                    .Text("رویدادها")
                        .Hidden(!RaiSam.Models.Permission.haveAccess(26, "", "0"))
                        .IconCls("shortcut-Events")
            )
            .Window(
                Html.X().Window()
                    .RTL(true)
                    .ID("EventsWin")
                    .AutoScroll(true)
                    .Title("رویدادها")
                    .Icon(Ext.Net.Icon.User)
                    .BodyStyle("background-color:rergb(244, 247, 249;")
                        .CloseAction(Ext.Net.CloseAction.Destroy)
                                    .Listeners(l =>
                                    {
                                        l.BeforeClose.Handler = "FnCloseFrm('پنجره رویدادها');";
                                        l.Minimize.Handler = "FnMinimizeFrm('پنجره رویدادها');";
                                        l.Show.Handler = "FnOpenFrm('پنجره رویدادها');";
                                    })
                    .Layout(Ext.Net.LayoutType.Anchor)
                    .Maximized(true)
                    .Height(600)
                    .Items(
                        X.Panel()
                            .Border(false)
                            .Items(
                                Html.X().TabPanel()
                                    .Border(false)
                                    .Items(
                                        X.Panel()
                                            .Title("رویدادها")
                                            .TabMenu(m => m.Add(X.Menu().Items(
                                                    X.MenuItem().Text("ردپای کاربران").DirectClickUrl("/UserLog/index?containerId=EventsTab").IconCls("miniUserLog").Hidden(!RaiSam.Models.Permission.haveAccess(55, "", "0")),
                                                    X.MenuItem().Text("جدول ها").DirectClickUrl("/NameTables/index?containerId=EventsTab").IconCls("miniNameTables").Hidden(!RaiSam.Models.Permission.haveAccess(27, "", "0")),
                                                    X.MenuItem().Text("گروه تراکنش ها").DirectClickUrl("/TransactionGroup/index?containerId=EventsTab").IconCls("miniTransactionGroup").Hidden(!RaiSam.Models.Permission.haveAccess(37, "", "0")),
                                                    X.MenuItem().Text("نوع تراکنش ها").DirectClickUrl("/TransactionType/index?containerId=EventsTab").IconCls("miniTransactionType").Hidden(!RaiSam.Models.Permission.haveAccess(41, "", "0")),
                                                    X.MenuItem().Text("رویدادهای تراکنش ها").DirectClickUrl("/Event/index?containerId=EventsTab").IconCls("miniEvent").Hidden(!RaiSam.Models.Permission.haveAccess(29, "", "0")),
                                                    X.MenuItem().Text("رویدادهای جداول").DirectClickUrl("/EventTables/index?containerId=EventsTab").IconCls("miniEventTables").Hidden(!RaiSam.Models.Permission.haveAccess(33, "", "0"))
                                            )))
                                            .Border(false)
                                            .Items(
                                                Html.X().TabPanel()
                                                    .Border(false)
                                                    .ID("EventsTab")
                                                    .ManageHeight(true)
                                                    .Items(
                                                        X.Panel()
                                                            .Title("میزکار")
                                                            .ItemID("pnlEventsTab")
                                                            .Border(false)
                                                                    .Listeners(l => l.AfterRender.Handler = "App.EventsTab.queryById('pnlEventsTab').setSize(App.EventsWin.getWidth()-10,App.EventsWin.getHeight()-135);")
                                                            .AutoScroll(true)
                                                            .Margins("30 0 0 0")
        //.Height(500)
                                                            .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
                                                            .Items(
                                                                X.Container()
                                                                    .Region(Ext.Net.Region.Center)
                                                                    .Layout(Ext.Net.LayoutType.Table)
                                                                    .Center()
                                                                    .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 7 })
                                                                    .Defaults(new { Width = 110, Height = 110 })
                                                                    .Items(
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(55, "", "0"))
                                                                                    .ImageUrl("/Content/icon/Transaction/مانیتورینگ ردپای کاربران1.png")
                                                                                    .OverImageUrl("/Content/icon/Transaction/مانیتورینگ ردپای کاربران.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/UserLog/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "EventsTab" });
                                                                                    de.Click.Before = "if(App.UserLog!=null){var tab =App.EventsTab.getComponent('UserLog');App.EventsTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            ),
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(27, "", "0"))
                                                                                        .ImageUrl("/Content/icon/Transaction/جداول1.png")
                                                                                    .OverImageUrl("/Content/icon/Transaction/جداول.png")
                                                                            .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/NameTables/index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "EventsTab" });
                                                                                    de.Click.Before = "if(App.NameTables!=null){var tab =App.EventsTab.getComponent('NameTables');App.EventsTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            ),
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(37, "", "0"))
                                                                                            .ImageUrl("/Content/icon/Transaction/گروه تراکنش ها1.png")
                                                                                    .OverImageUrl("/Content/icon/Transaction/گروه تراکنش ها.png")
                                                                            .DirectEvents(
                                                                            de =>
                                                                            {
                                                                                de.Click.Url = "/TransactionGroup/index";
                                                                                de.Click.ExtraParams.Add(new { containerId = "EventsTab" });
                                                                                de.Click.Before = "if(App.TransactionGroup!=null){var tab =App.EventsTab.getComponent('TransactionGroup');App.EventsTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                de.Click.Success = "Ext.net.Mask.hide();";
                                                                            }
                                                                        ),
                                                                        X.ImageButton()
                                                                                .Hidden(!RaiSam.Models.Permission.haveAccess(41, "", "0"))
                                                                                        .ImageUrl("/Content/icon/Transaction/انواع تراکنش ها1.png")
                                                                                    .OverImageUrl("/Content/icon/Transaction/انواع تراکنش ها.png")
                                                                            .DirectEvents(
                                                                            de =>
                                                                            {
                                                                                de.Click.Url = "/TransactionType/Index";
                                                                                de.Click.ExtraParams.Add(new { containerId = "EventsTab" });
                                                                                de.Click.Before = "if(App.TransactionType!=null){var tab =App.EventsTab.getComponent('TransactionType');App.EventsTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                de.Click.Success = "Ext.net.Mask.hide();";
                                                                            }
                                                                            ),
                                                                            X.ImageButton()
                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(181, "", "0"))
                                                                                    .ImageUrl("/Content/icon/Transaction/رویدادهای تراکنش ها1.png")
                                                                                .OverImageUrl("/Content/icon/Transaction/رویدادهای تراکنش ها.png")
                                                                                .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/Event/Index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "EventsTab" });
                                                                                    de.Click.Before = "if(App.Event!=null){var tab =App.EventsTab.getComponent('Event');App.EventsTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                                ),
                                                                            X.ImageButton()
                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(33, "", "0"))
                                                                                            .ImageUrl("/Content/icon/Transaction/رویدادهای جداول1.png")
                                                                                        .OverImageUrl("/Content/icon/Transaction/رویدادهای جداول.png")
                                                                                .DirectEvents(
                                                                                de =>
                                                                                {
                                                                                    de.Click.Url = "/EventTables/Index";
                                                                                    de.Click.ExtraParams.Add(new { containerId = "EventsTab" });
                                                                                    de.Click.Before = "if(App.EventTables!=null){var tab =App.EventsTab.getComponent('EventTables');App.EventsTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                    de.Click.Success = "Ext.net.Mask.hide();";
                                                                                }
                                                                            )

                                                                )
                                                        )
                                                )
                                        )
                                )
                        )
                )
            )
                , Html.X().DesktopModule()
                            .ModuleID("_CacheSmsEmail")
                .Shortcut(
                        Html.X().DesktopShortcut()
                                .Hidden(!RaiSam.Models.Permission.haveAccess(213, "", "0"))
                        .Name("ایمیل و پیامک های ارسال شده")
                            .IconCls("shortcut_CacheSmsEmail").SortIndex(6)
                            .Handler("Ext.net.DirectMethod.request({url: '/SMSEmailCach/Index'})")

                )
                .Launcher(
                    Html.X().MenuItem()
                        .Text("ایمیل و پیامک های ارسال شده")
                                .Hidden(!RaiSam.Models.Permission.haveAccess(213, "", "0"))
                        .IconCls("shortcut_CacheSmsEmail")
                        .Handler("Ext.net.DirectMethod.request({url: '/SMSEmailCach/Index'})")
                    )
                         ,
                            Html.X().DesktopModule()
                                    .ModuleID("_SmsFromExcel")
                                .Shortcut(
                                        Html.X().DesktopShortcut().SortIndex(12)
                                    .Hidden(!RaiSam.Models.Permission.haveAccess(215, "", "0"))
                                    .Name("ارسال پیامک از روی فایل")
                                            .IconCls("shortcut_SmsFromExcel")
                                                .Handler("Ext.net.DirectMethod.request({url: '/SmsFromExcel/Index'})")

                                )
                            .Launcher(
                                Html.X().MenuItem()
                                            .Text("ارسال پیامک از روی فایل")
                                    .Hidden(!RaiSam.Models.Permission.haveAccess(215, "", "0"))
                                            .IconCls("shortcut_SmsFromExcel")
                                            .Handler("Ext.net.DirectMethod.request({url: '/SmsFromExcel/Index'})")
                                )
                ,
                
            X.DesktopModule()
                .ModuleID("crm")
                .Shortcut(
                    Html.X().DesktopShortcut()
                        .Name("CRM")
                            .Hidden(!RaiSam.Models.Permission.haveAccess(70, "", "0"))
                            .IconCls("shortcut-crm")
                        .SortIndex(16)
                )
                .Launcher(
                    Html.X().MenuItem()
                            .Text("CRM")
                            .Hidden(!RaiSam.Models.Permission.haveAccess(70, "", "0"))
                                .IconCls("shortcut-crm")
                )
                .Window(
                    Html.X().Window()
                        .RTL(true)
                            .ID("crmWin")
                        .AutoScroll(true)
                        .Title("CRM")
                        .Icon(Ext.Net.Icon.User)
                        .BodyStyle("background-color:rergb(244, 247, 249;")
                            .CloseAction(Ext.Net.CloseAction.Destroy)
                                        .Listeners(l =>
                                        {
                                            l.BeforeClose.Handler = "FnCloseFrm('پنجره رویدادها');";
                                            l.Minimize.Handler = "FnMinimizeFrm('پنجره رویدادها');";
                                            l.Show.Handler = "FnOpenFrm('پنجره رویدادها');";
                                        })
                        .Layout(Ext.Net.LayoutType.Anchor)
                        .Maximized(true)
                        .Height(600)
                        .Items(
                            X.Panel()
                                .Border(false)
                                .Items(
                                    Html.X().TabPanel()
                                        .Border(false)
                                        .Items(
                                            X.Panel()
                                                .Title("CRM")
                                                .TabMenu(m => m.Add(X.Menu().Items(
                                                        X.MenuItem().Text("ارجاع").DirectClickUrl("/Erja/index?containerId=crmTab").IconCls("miniErja").Hidden(!RaiSam.Models.Permission.haveAccess(71, "", "0")),
                                                        X.MenuItem().Text("ورژن").DirectClickUrl("/Version/index?containerId=crmTab").IconCls("miniVersion").Hidden(!RaiSam.Models.Permission.haveAccess(84, "", "0"))

                                                )))
                                                .Border(false)
                                                .Items(
                                                    Html.X().TabPanel()
                                                        .Border(false)
                                                        .ID("crmTab")
                                                        .ManageHeight(true)
                                                        .Items(
                                                            X.Panel()
                                                                .Title("میزکار")
                                                                    .ItemID("pnlcrmTab")
                                                                .Border(false)
                                                                    .Listeners(l => l.AfterRender.Handler = "App.crmTab.queryById('pnlcrmTab').setSize(App.crmWin.getWidth()-10,App.crmWin.getHeight()-135);")
                                                                .AutoScroll(true)
                                                                .Margins("30 0 0 0")
        //.Height(500)
                                                                .LayoutConfig(new Ext.Net.HBoxLayoutConfig { Align = Ext.Net.HBoxAlign.StretchMax, Pack = Ext.Net.BoxPack.Center })
                                                                .Items(
                                                                    X.Container()
                                                                        .Region(Ext.Net.Region.Center)
                                                                        .Layout(Ext.Net.LayoutType.Table)
                                                                        .Center()
                                                                        .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 7 })
                                                                        .Defaults(new { Width = 110, Height = 110 })
                                                                        .Items(
                                                                            X.ImageButton()
                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(71, "", "0"))
                                                                                        .ImageUrl("/Content/icon/CRM/ارجاع1.png")
                                                                                        .OverImageUrl("/Content/icon/CRM/ارجاع.png")
                                                                                .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/Erja/index";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "crmTab" });
                                                                                        de.Click.Before = "if(App.Erja!=null){var tab =App.crmTab.getComponent('Erja');App.EventsTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                ),
                                                                                    X.ImageButton()
                                                                                    .Hidden(!RaiSam.Models.Permission.haveAccess(84, "", "0"))
                                                                                            .ImageUrl("/Content/icon/CRM/ورژن1.png")
                                                                                            .OverImageUrl("/Content/icon/CRM/ورژن.png")
                                                                                .DirectEvents(
                                                                                    de =>
                                                                                    {
                                                                                        de.Click.Url = "/Version/index";
                                                                                        de.Click.ExtraParams.Add(new { containerId = "crmTab" });
                                                                                        de.Click.Before = "if(App.Version!=null){var tab =App.crmTab.getComponent('Version');App.EventsTab.setActiveTab(tab);return false;}Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
                                                                                        de.Click.Success = "Ext.net.Mask.hide();";
                                                                                    }
                                                                                )

                                                                    )
                                                            )
                                                    )
                                            )
                                    )
                            )
                    )
                )
        //,

        //    Html.X().DesktopModule()
        //        .ModuleID("_UserLog")
        //        .Shortcut(
        //            Html.X().DesktopShortcut()
        //                .SortIndex(10)
        //                .Hidden(!RaiSam.Models.Permission.haveAccess(171))
        //                .Name("ردپای کاربران")
        //                    .IconCls("shortcut-UserLog")
        //        )
        //        .Launcher(
        //            Html.X().MenuItem()
        //                .Text("ردپای کاربران")
        //                .Hidden(!RaiSam.Models.Permission.haveAccess(171))
        //                    .IconCls("shortcut-UserLog")
        //            )
        //        .Window(
        //            Html.X().Window()
        //                .RTL(true)
        //                    .ID("UserLogWin")
        ////.Tools(X.Tool().Type(Ext.Net.ToolType.Help).Listeners(l => l.Click.Handler = "showHelpKartabl()").ToolTip("راهنما"))
        //                .Title("ردپای کاربران")
        //                .Closable(true)
        //                .Border(false)
        //                .AutoScroll(true)
        //                    .CloseAction(CloseAction.Destroy)
        //                        .Listeners(l => l.BeforeClose.Handler = "OpenedLogForm=false;")
        //                .Icon(Icon.ApplicationForm)
        //                .Layout(LayoutType.Fit)
        //                .Height(500)
        //                .Maximized(true)
        //                .Items(
        //                    X.TabPanel()
        //                        .ID("TabUserLog")
        //                        .Border(false)
        //                        .Layout(LayoutType.Fit)
        //                            .Listeners(l => l.AfterRender.Handler = "App.TabUserLog.tabBar.hide();")
        //                        )
        //                .DirectEvents(
        //                    de =>
        //                    {
        //                        de.Render.Before = "Ext.net.Mask.show({ msg : 'در حال بارگذاری...' });";
        //                        de.Render.Url = "/UserLog/Index";
        //                        de.Render.ExtraParams.Add(new { containerId = "TabUserLog" });
        //                    }
        //                    )
        //                )
        //,Html.X().DesktopModule()
        //    .ModuleID("_ComputationFormula")
        //    .Shortcut(
        //        Html.X().DesktopShortcut()
        //            .SortIndex(13)
        //                .Hidden(!RaiSam.Models.Permission.haveAccess(72))
        //            .Name("فرمول نویس")
        //            .IconCls("shortcut_ComputationFormula")
        //                .Handler("openWindowWithPost('/ComputationFormula/Formul?FormulId=1',0);")
        //    )
        //    .Launcher(
        //        Html.X().MenuItem()
        //            .Text("فرمول نویس")
        //                .Hidden(!RaiSam.Models.Permission.haveAccess(72))
        //            .IconCls("shortcut_ComputationFormula")
        //                .Handler("openWindowWithPost('/ComputationFormula/Formul?FormulId=1',0);")
        //        )
)
    .DesktopConfig(
        Html.X().DesktopConfig()
                .Wallpaper(@DesktopPic)
            .WallpaperStretch(true)
            .ShortcutDragSelector(true)
        //.ShortcutDefaults(defaults => defaults.IconCls = "x-default-shortcut")
            .ContextMenu(
                Html.X().Menu()
                    .Items(
                        Html.X().MenuItem().Text("Change Settings"),
                        Html.X().MenuSeparator(),
                        Html.X().MenuItem().Text("Tile").Icon(Ext.Net.Icon.ApplicationTileVertical),
                        Html.X().MenuItem().Text("Cascade").Icon(Ext.Net.Icon.ApplicationCascade)
                )
            )
        )
    .StartMenu(
        Html.X().DesktopStartMenu()
            .Title("رسا سیستم البرز")
            .IconCls("RasaIco")
            .Height(300)
            .ToolConfig(
                Html.X().Toolbar()
                    .Width(100)
                    .Items(
                        Html.X().Button()
                                .Hidden(!RaiSam.Models.Permission.haveAccess(39, "", "0"))
                            .Text("تنظیمات")
                            .Icon(Ext.Net.Icon.Cog)
                            .DirectEvents(de =>
                            {
                                de.Click.Action = "Setting";
                                de.Click.EventMask.ShowMask = true;
                            }),
                              Html.X().Button()
                                        .Hidden(@Userr!=1)
                                .Text("صف دانلود")
                                .Icon(Ext.Net.Icon.Cog)
                                .DirectEvents(de =>
                                {
                                    de.Click.Action = "SafDl";
                                    de.Click.EventMask.ShowMask = true;
                                }),  
                        Html.X().Button()
                            .Text("تغییر رمز عبور")
                            .Icon(Ext.Net.Icon.Key)
                            .Handler("Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });Ext.net.DirectMethod.request({url: '/Home/ChangePassword',success:function(){Ext.net.Mask.hide();}})"),
                        Html.X().Button()
                            .Text("شخصی سازی")
                            .Icon(Ext.Net.Icon.CogEdit)
                            .Handler("Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });Ext.net.DirectMethod.request({url: '/ThemDesktop_User/Index',success:function(){Ext.net.Mask.hide();}})"),

                        Html.X().Button()
                            .Text("خروج")
                            .Icon(Ext.Net.Icon.DoorOut)
                            .DirectEvents(de =>
                            {
                                de.Click.Action = "Logout";
                                de.Click.EventMask.ShowMask = true;
                                de.Click.EventMask.Msg = "خدانگهدار...";
                                de.Click.EventMask.MinDelay = 1000;
                            })
                        )
                    )
                )
    .TaskBar(
        Html.X().DesktopTaskBar()
            .TrayWidth(380)
            .HideQuickStart(true)
            .Tray(
                Html.X().Toolbar()
                    .Items(
                        Html.X().Label()
                            .ID("lblLocation")
                            .Text(Location),
                            X.Container().Content(@<table style="text-align:left;direction:ltr;font-size:10px;border:10px;"><tr><td style="color:#98c8ff;">|</td><td>CopyRight © 2022-Design By</td><td><a href="http://www.rasa-system.com/" style="text-decoration:none;"> RasaCo</a></td></tr></table>),
                            Html.X().ToolbarFill()
                )
            )
        )
)
@(X.TaskManager()
    .ID("TaskManager1")
    .Tasks(
        X.Task()
        .TaskID("Task1")
        .Interval(100)
        .AutoRun(false)
))
@(X.Viewport()
    .ID("Section")
    .Margin(50)
    .Frame(true)
    .Layout(Ext.Net.LayoutType.Absolute)
        //.Listeners(l => l.AfterLayout.Handler = "addBadge();")
    .Shadow(false)
    .Items(
        X.Panel().X(0).Y(0)
            .Frame(false)
            .Width(220)
            .RTL(false)
            .Layout(Ext.Net.LayoutType.Accordion)
            .LayoutConfig(new Ext.Net.AccordionLayoutConfig { Multi = true, OriginalHeader = true })
            .Border(true)
            .Items(
                X.Panel()
                    .ID("pnlUserAdmin")
                    .RTL(true)
                    .Title("اطلاعات کاربر")
                    .Icon(Ext.Net.Icon.UserTick)
                    .X(0)
                    .Items(
                        X.Container().Content(
                        @<div id="pnlInfoUser" style="margin:10px; ">
                            <center>
                                <div style="font-weight:600"> @Name @NameUserSecond خوش آمدید.</div>

                                <div>
                                    <a id="lblExistUserSecond" href="javascript:void(0)" onclick="javascript:ExistUserSecond()">خروج</a>

                                </div>
                                <br />
                                @*<div id="_lbl">موقعیت کاربر: @Location</div>
                                    <br /><br />*@
                                <img alt="" src="@Url.Action("ShowPic", "Home")" width="90px" height="120px" style=" border-color: #2E4796; border-radius: 6px 6px 6px 6px; border-style: solid;border-width:2px;" />
                                <br />
                                <br />
                                تاریخ آخرین ورود: @_Date
                                <br />
                                <br />
                                زمان آخرین ورود: @Time
                                <br />
                                <br />
                                IP آخرین ورود: @Ip
                                <br />
                                <br />
                                <div style="color:green;" id="PanelCharge"> </div>
                                <div style="color:red;" id="PanelChargeR"> </div>
                                <br />
                                <br />
                                <img id="PicUserSecond" alt="" class="avatar" src="@Url.Action("ShowPicUserSecond", "Home")" width="60px" height="60px" />
                            </center>
                        </div>
                            )
                       ),
                X.Panel()
                    .ID("pnlUserOnline")
                    .Title("تعداد کاربران آنلاین")
                    .Icon(Ext.Net.Icon.Clock)
                    .RTL(true)
                    .Items(
                        X.Container().Content(
                        @<div style="margin:10px;height:160px;">
                            <center>
                                <div>
                                    <a id="lblUserOnline" href="javascript:void(0)" onclick="javascript:GotoOnlineUser()">تعداد کاربران آنلاین: @UserLoginCount</a>
                                    @*<span id="lblUserOnline"> تعداد کاربران آنلاین پنل مدیریتی: @UserLoginCount</span>*@
                                </div>
                                <br />
                                <div>
                                    <a id="lblVersion" href="javascript:void(0)" onclick="javascript:GotoDetailVersion()">@LastVersion</a>
                                </div>
                                <div id="container">
                                    <div class="rotatingHands">
                                        <img alt="" id="hours" src="@Url.Content("~/Content/hours.png")" />
                                    </div>
                                    <div class="rotatingHands">
                                        <img alt="" id="minutes" src="@Url.Content("~/Content/minutes.png")" />
                                    </div>
                                    <div class="rotatingHands">
                                        <img alt="" id="seconds" src="@Url.Content("~/Content/seconds.png")" />
                                    </div>
                                    <div class="glass">
                                        <img alt="" src="@Url.Content("~/Content/glass.png")" />
                                    </div>
                                    <img alt="" src="@Url.Content("~/Content/clock.png")" />
                                </div>
                            </center>
                        </div>
                            )
                       )
                        )
                        )
)

<script src="@Url.Content("~/Content/jQueryRotate.2.2.js")" type="text/javascript"></script>
<link href="~/Content/style.css" rel="stylesheet" />
<script src="~/Scripts/accounting.min.js"></script>
<script>
    var datetime = '@ViewBag.time';
    $(document).ready(function () {


        Ext.net.DirectMethod.request({
            url: '/Home/CheckForSmsPanel',
            success: function (data) {
            }
        });

        if ('@NameUserSecond' == "") {
            document.getElementById("pnlInfoUser").style.height = "270px";
            $("#PicUserSecond").hide();
            $("#lblExistUserSecond").hide();
        }
        else {
            document.getElementById("pnlInfoUser").style.height = "330px";
            $("#PicUserSecond").show();
            $("#lblExistUserSecond").show();
        }
        if (Ext.isChrome) {
            $('<link href="/Content/StyleSheet2.css" rel="stylesheet" />').appendTo("head");
        }
        var angleSec = 0;
        var angleMin = 0;
        var angleHour = 0;
        var min, hor;
        var treeRefresh = 0;
        var WatchRefresh = 0;
        var Message = "";
        angleHour = datetime.substring(0, 2);
        angleMin = datetime.substring(3, 5);
        angleSec = datetime.substring(6, 8);
        angleSec = angleSec * 6;
        angleMin = angleMin * 6;
        angleHour = (angleHour * 5 + (angleMin / 6) / 12) * 6;
        $("#seconds").rotate(angleSec);
        $("#minutes").rotate(angleMin);
        $("#hours").rotate(angleHour);

        @*if(@SmsErr == 1){
            $("#PanelChargeR").html( "قطع ارتباط");
        }
        else{
            $("#PanelCharge").html( "میزان شارژ ریالی پنل پیامک:" + accounting.formatNumber(@smsPanelInfo));

        }*@
        setInterval(function () {
            angleSec = ((angleSec / 6 + 1) * 6);
            $("#seconds").rotate(angleSec);
            if (angleSec >= 360) {

                angleMin = (angleMin / 6 + 1) * 6;
                $("#minutes").rotate(angleMin);
                angleSec = 0;
            }
            if (angleMin >= 360) {
                angleMin = 0;
            }
            treeRefresh++;

            /*چک صف دانلود*/
            Ext.net.DirectMethod.request({
                url: "/RptBarname/CheckSafDl",
                success: function (res) {
                    if (res.Id != 0) {
                        $.ajax({
                            type: "POST",
                            dataType: 'native',
                            url: res.fldNameFunc,
                            xhrFields: {
                                responseType: 'blob'
                            },
                            data: {
                                SafDlId:res.Id,
                                sal: res.fldsal,
                                Tasal: res.fldTasal,
                                MalekId: res.fldMalekId,
                                ContractId: res.fldContractId,
                                ShVagon: res.fldShVagon,
                                AzVagon: res.fldAzVagon,
                                TaVagon: res.fldTaVagon,
                                TypeVagon: res.fldTypeVagon,
                                State: res.fldState,
                                JozeeM: res.fldJozeeM,
                                KoliM: res.fldKoliM,
                                JozeeF: res.fldJozeeF,
                                KoliF: res.fldKoliF,
                                JozeeY: res.fldJozeeY,
                                KoliY: res.fldKoliY
                            },
                            success: function (blob) {
                                App.CheckedWin.body.mask().hide();
                                x = blob;
                                var link = document.createElement('a');
                                link.href = window.URL.createObjectURL(blob);
                                link.download = "AllFile" + res.fldsal + "_" + res.fldTasal + ".xlsx";
                                link.click();
                            },
                            timeout: 720000000
                        });
                    }
                }
            });

            if (treeRefresh == 30) {

                @*var URL = '@Url.Content("Home/ShowPic")';
                var g = URL;
                $('#Image').attr('src', g);*@
                treeRefresh = 0;

                Ext.net.DirectMethod.request({
                    url: '/TicketKartabl/CheckHavePm',
                    success: function (data) {
                        $('#lblUserOnline').html('تعداد کاربران آنلاین: ' + data.UserOnline);

                        /*if (data.Have) {
                            Ext.net.Notification.show({
                                hideFx: {
                                    fxName: 'switchOff'
                                },
                                showFx: {
                                    fxName: 'slideIn',
                                    args: [
                                           'b', {
                                               easing: 'bounceOut',
                                               duration: 1000
                                           }
                                    ]
                                },
                                pinEvent: 'click',
                                alignToCfg: {
                                    offset: [0, -25],
                                    position: 'br-br'
                                },
                                html: "<ul>" + data.txt + "</ul>",
                                title: 'پیام ها: ',
                                width: 240,
                                height: 90
                            });
                        }*/
                    }
                });
            }

            WatchRefresh++;
            if (WatchRefresh == 120) {
                Ext.net.DirectMethod.request({
                    url: "/Home/GetDate",
                    success: function (data) {
                        angleHour = data.datetime.substring(0, 2);
                        angleMin = data.datetime.substring(3, 5);
                        angleSec = data.datetime.substring(6, 8);
                        angleSec = angleSec * 6;
                        angleMin = angleMin * 6;
                        angleHour = (angleHour * 5 + (angleMin / 6) / 12) * 6;
                        $("#seconds").rotate(angleSec);
                        $("#minutes").rotate(angleMin);
                        $("#hours").rotate(angleHour);
                        WatchRefresh = 0;
                    }
                });
            }
        }, 1000);

        if ('@ViewBag.FirstLogin' == 'True') {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: "/Home/ChangePassword",
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }

        @*if ('@ViewBag.Tashkilati' == "1" || '@ViewBag.SaveSessionTree' == "0") {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: "/SelectTashkilati/index",
                params: {
                    Type: '@ViewBag.Type',
                    Exit: 0
                },
                success: function () {
                    Ext.net.Mask.hide();

                }
            });
        }*@
    });
    function UpdateSmsPanelInfoo(sharj, Er) {

        if (Er == 1)
            $("#PanelChargeR").html("قطع ارتباط");
        else
            $("#PanelCharge").html("میزان شارژ ریالی پنل پیامک:" + accounting.formatNumber(sharj));
    }

    /*function addBadge() {
        Ext.net.DirectMethod.request({
            url: '/TicketKartabl/GetCountPM',
            params: {
            },
            success: function (data) {
                var ElUserTicket1 = document.getElementsByClassName("shortcut_SendTicket");
                var ElAdminTicket1 = document.getElementsByClassName("shortcut-Ticketing");
                if (data.CountUser == 0) {
                    if (ElUserTicket1[0]) {
                        ElUserTicket1[0].classList.remove("badge");
                    }
                }
                else {
                    var countt = "'" + data.CountUser + "'";
                    Ext.util.CSS.updateRule('.badge::after', 'content', countt);
                    if (ElUserTicket1[0]) {
                        ElUserTicket1[0].classList.add("badge");
                    }
                }
                if (data.CountAdmin == 0) {
                    if (ElAdminTicket1[0]) {
                        ElAdminTicket1[0].classList.remove("badgeA");
                    }
                }
                else {
                    var countt1 = "'" + data.CountAdmin + "'";
                    Ext.util.CSS.updateRule('.badgeA::after', 'content', countt1);
                    if (ElAdminTicket1[0]) {
                        ElAdminTicket1[0].classList.add("badgeA");
                    }
                }
            }
        });
    }*/
    function CheckMsgUserSecound() {
        if ('@ViewBag.Msg' != "") {
            Ext.get('InfoUserSecound').update("<div><p style='text-align:justify;margin:5px'>" + '@ViewBag.Msg' + "</p></div>");

        }
        else {
            App.WinUserSecound.destroy();
        }
    }
    function WinInfoShow() {
        if (Ext.isChrome == false) {
            Ext.get('Info').update("<div><p style='text-align:justify;margin:5px'>کاربر گرامی لطفاً جهت جلوگیری از بروز هر گونه اشکال در کار با سامانه نکات زیر را رعایت فرمایید:</br>جهت استفاده از  نرم افزار، می بایست از مرورگر کروم استفاده نمایید.</br>لطفاً جهت بروز رسانی مرورگر کروم <a href='@Url.Content("~/Home/DownloadChrome")'>اینجا</a> کلیک نمایید.</p></div>");
        }
        else if (Ext.isChrome == true && Ext.chromeVersion < 55) {
            Ext.get('Info').update("</p><div><p style='text-align:justify;margin:5px'>کاربر گرامی لطفاً جهت جلوگیری از بروز اشکال در کار با سامانه نکات زیر را رعایت فرمایید:</br>نسخه مرورگر کروم شما قدیمی است. مرورگر مورد استفاده می بایست بروز رسانی شود. چنانچه این عمل صورت نپذیرد سامانه دچار اشکال شده و با مشکل مواجه خواهید شد.</br>لطفاً جهت بروزرسانی مرورگر کروم <a href='@Url.Content("~/Home/DownloadChrome")'>اینجا</a> کلیک نمایید.</p></div>");
        }
        else {
            App.WinInfoModule.destroy();
        }
        Ext.net.DirectMethod.request({
            url: '/TicketKartabl/GetCountPM',
            params: {
            },
            success: function (data) {
                var ElUserTicket1 = document.getElementsByClassName("shortcut_SendTicket");
                var ElAdminTicket1 = document.getElementsByClassName("shortcut-Ticketing");
                if (data.CountUser == 0) {
                    if (ElUserTicket1[0]) {
                        ElUserTicket1[0].classList.remove("badge");
                    }
                }
                else {
                    var countt = "'" + data.CountUser + "'";
                    Ext.util.CSS.updateRule('.badge::after', 'content', countt);
                    if (ElUserTicket1[0]) {
                        ElUserTicket1[0].classList.add("badge");
                    }
                }
                if (data.CountAdmin == 0) {
                    if (ElAdminTicket1[0]) {
                        ElAdminTicket1[0].classList.remove("badgeA");
                    }
                }
                else {
                    var countt1 = "'" + data.CountAdmin + "'";
                    Ext.util.CSS.updateRule('.badgeA::after', 'content', countt1);
                    if (ElAdminTicket1[0]) {
                        ElAdminTicket1[0].classList.add("badgeA");
                    }
                }
            }
        });
    }
    function DownloadCHM() {
        $.ajax({
            type: "POST",
            dataType: 'native',
            url: "/MostanadatFani/DownloadMostanadCHM",
            xhrFields: {
                responseType: 'blob'
            },
            success: function (blob) {
                var link = document.createElement('a');
                link.href = window.URL.createObjectURL(blob);
                link.download = "ChmDocument.chm";
                link.click();
            }
        });
    }
    function ExistUserSecond() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: "/Home/ExistUserSecond",
            params: {

            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function GotoOnlineUser() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: "/Home/OnlineUsers",
            params: {

            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function GotoDetailVersion() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: "/Version/DetailVersion",
            params: {
                VersionId: '@VersionId'
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function GotoFormula() {

        openWindowWithPost("/ComputationFormula/Formul", 0);
    }

    function openWindowWithPost(url, data) {
        var form = document.createElement("form");
        form.target = "_blank";
        form.method = "POST";
        form.action = url;
        form.style.display = "none";

        for (var key in data) {
            var input = document.createElement("input");
            input.type = "hidden";
            input.name = key;
            input.value = data[key];
            form.appendChild(input);
        }

        document.body.appendChild(form);
        form.submit();
        document.body.removeChild(form);
    }

    function showHelpKartablMosaferi() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/KartablMosaferi/Help',
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function showHelpKartablBari() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/KartablBari/Help',
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function showHelpKartablManeuver() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/KartablManeuver/Help',
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function showHelpKartablkilometraZh() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/KartablKilometraZh/Help',
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }

    function showHelpKartabl() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Kartabl/Help',
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function ShowLastVertion() {
        if ('@VersionId' != 0)
            if ('@ViewBag.SeenVersion' == "False") {
                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                Ext.net.DirectMethod.request({
                    url: "/Version/GotoShowVersionLogin",
                    params: {
                        VersionId: '@VersionId',
                    },
                    success: function () {
                        Ext.net.Mask.hide();
                    }
                });
            }
    }
    function CheckEtelaie() {
        if ('@ViewBag.EtelaieTitleAll' != "") {


            var TitleHa = '@ViewBag.EtelaieTitleAll';
            var IDha = '@ViewBag.EtelaieIDAll';
            var k = TitleHa.split(';');
            var ID = IDha.split(';');
            var txt = "";
            for (var i = 0; i < k.length - 1; i++) {
                var fieldset = Ext.create('Ext.form.FieldSet', {
                    border: false
                });
                var LblEtela = Ext.create('Ext.form.Label', {
                    text: k[i],
                    xtype: 'iconlabel',
                    iconCls: 'Enter',
                    padding: "0 5px 0 10px"
                });
                /*start*/
                var BtnEtela = Ext.define('LinkButton', {
                    extend: 'Ext.Component',
                    xtype: 'linkbutton',
                    autoEl: 'a',
                    renderTpl: '<a class="linkButton" href=\"javascript:;\" id="{id}-btnEl">{text}</a>',
                    config: {
                        text: 'ادامه...',
                        id: ID[i],
                        handler: function () {
                            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                            Ext.net.DirectMethod.request({
                                url: '/Home/GotoNExtEtelaiie',
                                params: {
                                    ID: this.id
                                },
                                success: function (data) {
                                    Ext.net.Mask.hide();
                                }
                            });
                        }
                    },
                    initComponent: function () {
                        var me = this;
                        me.callParent(arguments);

                        this.renderData = {
                            text: this.getText()
                        };
                    },
                    onRender: function (ct, position) {
                        var me = this,
                            btn;

                        me.addChildEls('btnEl');

                        me.callParent(arguments);

                        btn = me.btnEl;

                        me.mon(btn, 'click', me.onClick, me);
                    },
                    onClick: function (e) {
                        var me = this;
                        if (me.preventDefault || (me.disabled && me.getHref()) && e) {
                            e.preventDefault();
                        }
                        if (e.button !== 0) {
                            return;
                        }
                        if (!me.disabled) {
                            me.fireHandler(e);
                        }
                    },
                    fireHandler: function (e) {
                        var me = this,
                            handler = me.handler;

                        me.fireEvent('click', me, e);
                        if (handler) {
                            handler.call(me.scope || me, me, e);
                        }
                    }
                });
                App.PnlAnnouncemenContainerNotSeen.add(fieldset);
                fieldset.add(LblEtela);
                fieldset.add(BtnEtela);
            }

        }
        else {
            App.AnnouncementWin.close();
        }
    }

    function loadEtelaie() {
        var type = 0;
        if (App.AnnouncementWin.queryById("RadioNotSeen").checked == true) {
            type = 1;
        }
        App.PnlAnnouncemenContainerNotSeen.items.each(function () {
            App.PnlAnnouncemenContainerNotSeen.items.items[0].destroy();
        });
        Ext.net.DirectMethod.request({
            url: '/Home/GetAnnoncement',
            params: {
                type: type
            },
            success: function (data) {
                var TitleHa = data.EtelaieTitleAll;
                var IDha = data.EtelaieIDAll;
                var k = TitleHa.split(';');
                var ID = IDha.split(';');
                var txt = "";
                for (var i = 0; i < k.length - 1; i++) {
                    var fieldset = Ext.create('Ext.form.FieldSet', {
                        border: false
                    });
                    var LblEtela = Ext.create('Ext.form.Label', {
                        text: k[i],
                        xtype: 'iconlabel',
                        iconCls: 'Enter',
                        padding: "0 5px 0 10px"
                    });
                    /*start*/
                    var BtnEtela = Ext.define('LinkButton', {
                        extend: 'Ext.Component',
                        xtype: 'linkbutton',
                        autoEl: 'a',
                        renderTpl: '<a class="linkButton" href=\"javascript:;\" id="{id}-btnEl">{text}</a>',
                        config: {
                            text: 'ادامه...',
                            id: ID[i],
                            handler: function () {
                                Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
                                Ext.net.DirectMethod.request({
                                    url: '/Home/GotoNExtEtelaiie',
                                    params: {
                                        ID: this.id
                                    },
                                    success: function (data) {
                                        Ext.net.Mask.hide();
                                    }
                                });
                            }
                        },
                        initComponent: function () {
                            var me = this;
                            me.callParent(arguments);

                            this.renderData = {
                                text: this.getText()
                            };
                        },
                        onRender: function (ct, position) {
                            var me = this,
                                btn;

                            me.addChildEls('btnEl');

                            me.callParent(arguments);

                            btn = me.btnEl;

                            me.mon(btn, 'click', me.onClick, me);
                        },
                        onClick: function (e) {
                            var me = this;
                            if (me.preventDefault || (me.disabled && me.getHref()) && e) {
                                e.preventDefault();
                            }
                            if (e.button !== 0) {
                                return;
                            }
                            if (!me.disabled) {
                                me.fireHandler(e);
                            }
                        },
                        fireHandler: function (e) {
                            var me = this,
                                handler = me.handler;

                            me.fireEvent('click', me, e);
                            if (handler) {
                                handler.call(me.scope || me, me, e);
                            }
                        }
                    });
                    App.PnlAnnouncemenContainerNotSeen.add(fieldset);
                    fieldset.add(LblEtela);
                    fieldset.add(BtnEtela);
                }
                Ext.net.Mask.hide();
            }
        });
    }
    function FnCloseFrm(frm) {
        InsertToLog(frm, 3, true);
    }
    function FnMinimizeFrm(frm) {
        InsertToLog(frm, 4, true);
    }
    function FnOpenFrm(frm) {
        InsertToLog(frm, 2, true);
    }
</script>

