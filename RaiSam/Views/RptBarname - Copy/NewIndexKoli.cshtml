@model RaiSam.Models.RptBarname
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
<style>
    .custom-icon {
        margin-right: 380px !important;
    }

    .grid-title {
        text-align: right;
    }
</style>
<script>
    Ext.net.FilterHeader.behaviour.string[0].match = function (recordValue, matchValue) {
        return (Ext.net.FilterHeader.behaviour.getStrValue(recordValue) || "").indexOf(matchValue) > -1;
    };

    Ext.net.FilterHeader.behaviour.string[0].getStrValue = function (value) {
        return value.toString();
    };

    Ext.net.FilterHeader.behaviour.string[0].serialize = function (value) {
        return {
            type: "string",
            op: "*",
            value: value
        };
    };

</script>

@(Html.X().Panel()
    .Closable(true)
    .AutoScroll(true)
    .Border(false)
    .CloseAction(CloseAction.Destroy)
                .Listeners(li => { li.AfterRender.Handler = "setSizeRptPanelKoli()"; li.Render.Fn = "addKeyMapRptBarnameKoli"; })
        //  .Listeners(l => l.AfterRender.Handler = "setTitlePnlRpt()")
       .Layout(LayoutType.Fit).Title("گزارش کلی بارنامه ها")
            .ID("RptKoliBarname")
    .Items(
        X.Panel()
            .AutoScroll(true)
            .Border(false)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
                X.FieldSet().Border(false)//.Width(760)
            .Items(
                        X.Panel()
                    .AutoScroll(true)
                    .Border(false)
                    .ButtonAlign(Alignment.Center)
                    .Buttons(
                        Html.X().Button()
                                .Text("نمایش")
                                .ItemID("btnNamayesh")
                                .Icon(Ext.Net.Icon.ApplicationFormMagnify)
                                        .Listeners(l => l.Click.Handler = "ShowBarnameKoli()"),
                        Html.X().Button()
                            .Text("چاپ")
                            .ItemID("btnPrint")
                            .Icon(Ext.Net.Icon.Printer)
                                .Listeners(l => l.Click.Handler = "PrintBarnameKoli()"),
                                     Html.X().Button()
                                .Text("اکسل")
                                .ItemID("btnxls")
                                .Icon(Ext.Net.Icon.PageExcel)
                                        .Listeners(l => l.Click.Handler = "XlsBarnameKoli()"),
                                         Html.X().Button()
                                    .Text("مرحله قبل")
                                    .ItemID("btnpre")
                                    .Icon(Ext.Net.Icon.ArrowRight)
                                                .Listeners(l => l.Click.Handler = "PrevBarnameKoli()"),
                                             Html.X().Button()
                                        .Text("مرحله بعد")
                                        .ItemID("btnnxt")
                                        .Icon(Ext.Net.Icon.ArrowLeft)
                                                .Listeners(l => l.Click.Handler = "NextBarnameKoli()"),
                             X.SplitButton()
                                                .Text("راهنما")
                                                .Icon(Ext.Net.Icon.Help)
                                                .Menu(X.Menu()
                                                .Items(
                                                X.MenuItem()
                                                            .Text("راهنما متنی")
                                                            .Icon(Ext.Net.Icon.TextPaddingTop)
                                                                        .Listeners(l => l.Click.Handler = "HelpBarnameKoli()"),
                                                    X.MenuItem()
                                                            .Text("راهنما تصویری")
                                                            .Icon(Ext.Net.Icon.PlayBlue)
                                                                        .Listeners(l => l.Click.Handler = "showHelp_VideoBarnameKoli()")

                                            )
                                            ),
                        Html.X().Button()
                            .Text("خروج")
                            .ItemID("btnOut")
                            .Icon(Ext.Net.Icon.DoorOut)
                                            .Listeners(l => l.Click.Handler = " App.RptKoliBarname.destroy()")
                            )
                    .Items(
                                X.FieldSet().MarginSpec("5px 0 0 0")//.Width(680)
                                .ItemID("Filters")
                                .Border(true).Title("فیلترها")
                                .Defaults(new { Margin = 2 })
                               .Layout(Ext.Net.LayoutType.VBox)
                    .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
                            .Items(
                                    X.Hidden().ItemID("fldMalek_InfoGridId"),
                                            X.Hidden().ItemID("fldContractGridId"),
                                X.Hidden().ItemID("fldVagonGridId"),
                                
                                 X.FieldSet().MarginSpec("5px 0 0 0")//.Width(680)
                                .Border(false)
                                .Defaults(new { Margin = 2 })
                            .Layout(LayoutType.Table)
                            .LayoutConfig(new TableLayoutConfig { Columns = 8 })
                            .Items(
                                   X.Label("گزارش براساس:"),
                                    X.ComboBox()
        //  .Width(100)
                                        .ItemID("CboTypeRPT")
                                        .Editable(false)
                                        .ForceSelection(true)
        // .TypeAhead(true)
                                        .AllowBlank(false)
                                        .BlankText("لطفا نوع گزارش گیری را انتخاب کنید.")
                                                .Listeners(l => l.Change.Handler = "ChangeTypeRPTKoli()")
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Items(
                                            new ListItem("مالک", "0"),
                                                new ListItem("پروژه", "1"),
                                                    new ListItem("شماره واگن", "2"),
                                                        new ListItem("واگن تا واگن", "3"),
                                                        new ListItem("لیست واگن", "4")
                                                ),
                                        X.Label("نوع بازه:"),
                                        X.ComboBox()
         // .Width(100)
                                            .ItemID("CboTypeBaze")
                                            .Editable(false)
                                            .ForceSelection(true)
        // .TypeAhead(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا نوع بازه را انتخاب کنید.")
                                                    .Listeners(l => l.Change.Handler = "ChangeTypeBazeKoli()")
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .Items(
                                                new ListItem("تاریخ تا تاریخ", "0"),
                                                    new ListItem("ماه تا ماه", "1")
                                                    ),
                            X.Label().Text("از تاریخ:").ItemID("lblAzTarikh"),  
                                X.PDateField()
          .Width(100)
                                .ItemID("txtAzTarikh")
                                .AllowBlank(false)
                                .MaskRe("[0-9,/]")
                                .BlankText("لطفا از تاریخ را وارد کنید.")
                                .PaddingSpec("0 0 0 10px")
                                    .Listeners(l => l.Select.Handler = "ChangeTaTarikh_KarkardDKoli()")
                                    .Editable(true),
                            X.Label().Text("تا تاریخ:").ItemID("lblTaTarikh"),
                                X.PDateField()
           .Width(100)
                                .ItemID("txtTaTarikh")
                                    .MaskRe("[0-9,/]")
        // .PaddingSpec("0 0 0 10px")
                                .AllowBlank(false)
                                                .BlankText("لطفا تا تاریخ را وارد کنید.")
                                                .Listeners(l => l.Change.Handler = "ChangeAzTarikh_KarkardDKoli()")
                                    .Editable(true)
                                    ,
                                            X.Label("از ماه:").ItemID("lblAzz")
                                    ,
                                         X.FieldSet()//.MarginSpec("5px 0 0 0").Width(680)
                                             .ItemID("flsAzz")
                                  //  .PaddingSpec("0 0 0 10px")
                                    .Border(false)
                                    .Defaults(new { Margin = 2 })
                                .Layout(LayoutType.Table)
                                .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                .Items(
                                     X.ComboBox()
                                        .ItemID("CboAzMonth")
                                        .Width(80)
                                        .Editable(false)
                                        .TypeAhead(true)
                                        .AllowBlank(false)
                                        .BlankText("لطفا ماه را انتخاب کنید.")
                                        .Listeners(l =>
                                        {
                                            l.AfterRender.Handler = "setValueMonthKoli()";
                                            l.Select.Handler = "SelectAzSalTaSalKoli()";
                                        })
                                        .QueryMode(DataLoadMode.Local)
                                        .TriggerAction(TriggerAction.All)
                                        .Items(
                                            new ListItem("فروردین", "01"),
                                            new ListItem("اردیبهشت", "02"),
                                            new ListItem("خرداد", "03"),
                                            new ListItem("تیر", "04"),
                                            new ListItem("مرداد", "05"),
                                            new ListItem("شهریور", "06"),
                                            new ListItem("مهر", "07"),
                                            new ListItem("آبان", "08"),
                                            new ListItem("آذر", "09"),
                                            new ListItem("دی", "10"),
                                            new ListItem("بهمن", "11"),
                                            new ListItem("اسفند", "12")
                                        ),
                                     X.ComboBox()
                                    .LabelAlign(Ext.Net.LabelAlign.Top)
                                        .ItemID("CboAzYear")
                                            .Width(70)
                                    .DisplayField("fldYear")
                                    .ValueField("fldYear")
                                    .TypeAhead(true)
                                    .Editable(false)
                                    .AllowBlank(false)
                                    .BlankText("لطفا سال را انتخاب کنید.")
                                    .QueryMode(DataLoadMode.Local)
                                        .ForceSelection(true)
                                                        .Listeners(l => l.Select.Handler = "SelectAzSalTaSalKoli()")
                                    .TriggerAction(TriggerAction.All)
                                            .Store(X.Store()
                                            .Listeners(l => l.Load.Handler = "SetDefultYearKoli();")
                                    .Model(X.Model()
                                    .IDProperty("fldYear")
                                        .Fields(
                                            new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" }
                                        )
                                    )
                                        .Proxy(X.AjaxProxy()
                                        .Url(Url.Action("GetSal"))
                                        .Reader(X.JsonReader().Root("data"))
                                                )
                                    )
                                    
                                    )
                                        ,
                                                X.Label("تا ماه:").ItemID("lblTaa")
                                        ,
                                             X.FieldSet()//.MarginSpec("5px 0 0 0").Width(680)
                                             .ItemID("flsTaa")
                                        .Border(false)
                                        .Defaults(new { Margin = 2 })
                                    .Layout(LayoutType.Table)
                                    .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                    .Items(
                                         X.ComboBox()
                                                .ItemID("CboTaMonth")
                                            .Width(80)
                                            .Editable(false)
                                            .TypeAhead(true)
                                            .AllowBlank(false)
                                            .BlankText("لطفا ماه را انتخاب کنید.")
                                            .Listeners(l =>
                                            {
                                                l.AfterRender.Handler = "setValueTaMonthKoli()";
                                                l.Select.Handler = "SelectAzSalTaSalKoli()";
                                            })
                                            .QueryMode(DataLoadMode.Local)
                                            .TriggerAction(TriggerAction.All)
                                            .Items(
                                                new ListItem("فروردین", "01"),
                                                new ListItem("اردیبهشت", "02"),
                                                new ListItem("خرداد", "03"),
                                                new ListItem("تیر", "04"),
                                                new ListItem("مرداد", "05"),
                                                new ListItem("شهریور", "06"),
                                                new ListItem("مهر", "07"),
                                                new ListItem("آبان", "08"),
                                                new ListItem("آذر", "09"),
                                                new ListItem("دی", "10"),
                                                new ListItem("بهمن", "11"),
                                                new ListItem("اسفند", "12")
                                            ),
                                         X.ComboBox()
                                        .LabelAlign(Ext.Net.LabelAlign.Top)
                                            .ItemID("CboTaYear")
                                            .Width(70)
                                        .DisplayField("fldYear")
                                        .ValueField("fldYear")
                                        .TypeAhead(true)
                                        .Editable(false)
                                        .AllowBlank(false)
                                        .BlankText("لطفا سال را انتخاب کنید.")
                                            .QueryMode(DataLoadMode.Local)
                                                            .Listeners(l => l.Select.Handler = "SelectAzSalTaSalKoli()")
                                        .ForceSelection(true)
                                        .TriggerAction(TriggerAction.All)
                                                .Store(X.Store().Listeners(l => l.Load.Handler = "SetDefultTaYearKoli();")
                                        .Model(X.Model()
                                        .IDProperty("fldYear")
                                            .Fields(
                                                new ModelField("fldYear", ModelFieldType.String) { Mapping = "fldYear" }
                                            )
                                        )
                                            .Proxy(X.AjaxProxy()
                                            .Url(Url.Action("GetSal"))
                                            .Reader(X.JsonReader().Root("data"))
                                                    )
                                        )

                                        )
                                             ,
                                        X.Label("از واگن:").ItemID("lblAzShVagon"),
                                        X.TextField()
        //.Width(100)
                                             .ItemID("txtAzShVagon")
                                                    .AllowBlank(false)
                                                    .BlankText("لطفا شماره واگن ابتدا را انتخاب کنید.")
        //.Width(118)
                                    .MaxLength(7).MaskRe("[ 0-9]")
                                    .EnforceMaxLength(true),
                                        X.Label("تا واگن:").ItemID("lblTaShVagon"),
                                        X.TextField()
        //    .Width(100)
                                             .ItemID("txtTaShVagon")
                                                    .AllowBlank(false)
                                                    .BlankText("لطفا شماره واگن انتها را انتخاب کنید.")
        //.Width(118)
                                    .MaxLength(7).MaskRe("[ 0-9]")
                                    .EnforceMaxLength(true)
                                        )
                                   ,
                                X.GridPanel()
                                          .Height(350)
                                          .PaddingSpec("10px 0 10px 0")
                                .Cls("grid-title")
                        .AutoScroll(true)
                        .Border(true)
                        .Title("مالکان")
                        .ItemID("GridSearchMalek")
                        .Store(
                                X.StoreFor(Model.Malek)
              .Listeners(l => l.Load.Handler = "LoadSelectedMalekKoli()")
                                .Proxy(Html.X().AjaxProxy()
                                        .Url(Url.Action("ReadMalek"))
                                        .Reader(Html.X().JsonReader().Root("data"))
        // .ExtraParams(x => x.Add(new { state = @ViewBag.state }))
                            )
                            .PageSize(20000)
                            .RemoteFilter(false)
                            .RemotePaging(false)
                        )
                        .View(
                            Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                        )
                        .Plugins(X.FilterHeader().Remote(false))
                        .ColumnModel(
                                     Html.X().Column().DataIndex(Model.Malek, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                        Html.X().Column().DataIndex(Model.Malek, m => m.fldNameCompany).Text("نام مالک").Wrap(true).Flex(7),
                                        Html.X().Column().DataIndex(Model.Malek, m => m.fldCodeEghtasadi).Text("کداقتصادی").Wrap(true).Flex(3),
                                        Html.X().Column().DataIndex(Model.Malek, m => m.fldShenaseMeli).Text("شناسه ملی").Wrap(true).Flex(3),
                                        Html.X().Column().DataIndex(Model.Malek, m => m.fldTypeSamaneName).Text("نوع سامانه").Flex(3)
                        )
                        .SelectionModel(
                            Html.X().CheckboxSelectionModel().CheckOnly(true)
                                .PruneRemoved(false)
                                .Mode(Ext.Net.SelectionMode.Multi)
                        )
                                .Width(650).ColSpan(6)
               ,
                                      X.GridPanel()
                                          .Height(350)
                                              .PaddingSpec("10px 0 10px 0")
                                    .Cls("grid-title")
                        .AutoScroll(true)
                        .Border(true)
                        .Title("پروژه ها")
                        .ItemID("GridSearchContract")
                        .Store(
                                X.StoreFor(Model.Contract)
                                .AutoLoad(false)
        //.Listeners(l => l.Load.Handler = "GetCheckedData()")
                                .Proxy(Html.X().AjaxProxy()
                                            .Url(Url.Action("ReadContract"))
                                        .Reader(Html.X().JsonReader().Root("data"))
                                                .ExtraParams(x => x.Add(new { Malek = @ViewBag.Malek }))
                            )
                            .PageSize(20000)
                            .RemoteFilter(false)
                            .RemotePaging(false)
                        )
                        .View(
                            Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                        )
                        .Plugins(X.FilterHeader().Remote(false))
                             .Plugins(
                                                                X.RowExpander()
                                                                                .Listeners(l => l.BeforeExpand.Fn = "loadGridVagonsDetailKoli")
                                                                    .Component(
                                                                        X.GridPanel()
                                                                            .AutoScroll(true)
                                                                            .ForceFit(true)
                                                                            .Border(true)
                                                                            .Height(150)
                                                                                                .ItemID("GridVagonsDetailKoli")
        //.Listeners(l => l.ItemMouseEnter.Fn = "createTooltipMasirInDetailsKilometrazh2")
                                                                            .Store(
                                                                                        X.StoreFor(Model.Detail)
                                                                                    .AutoLoad(false)
                                                                                    .Proxy(Html.X().AjaxProxy()
                                                                                                    .Url(Url.Action("ReadVagonsDetail"))
                                                                                        .Reader(Html.X().JsonReader().Root("data"))
                                                                                )
                                                                                .PageSize(10)
                                                                                .RemoteFilter(true)
                                                                                .RemotePaging(true)
                                                                            )
                                                                                .ViewConfig(
                                                                                    X.GridView()
                                                                                            .LoadingText("در حال بارگذاری...").RTL(true)
                                    .GetRowClass(l => l.Fn = "getRowClassInProjKoli")
                                                                                )
                                                                            .ColumnModel(
                                                                                 Html.X().RowNumbererColumn(),
                                                                                                            Html.X().Column().DataIndex(Model.Detail, m => m.fldHeaderId).Text("fldHeaderId").Hidden(true).Flex(1),
                                                                                                                    Html.X().Column().DataIndex(Model.Detail, m => m.Ismalk).Text("Ismalk").Hidden(true).Flex(1),
                                                                             Html.X().Column().DataIndex(Model.Detail, m => m.fldNameMalek).Text("مالک واگن").Wrap(true).Flex(7),
                                                                                                                                                                Html.X().Column().DataIndex(Model.Detail, m => m.fldShomareVagon).Text("شماره واگن").Wrap(true).Flex(3),
                                                                                                        Html.X().Column().DataIndex(Model.Detail, m => m.fldZarfiyatBargiri).Text("ظرفیت واگن").Wrap(true).Flex(3),
                                                                                                    Html.X().Column().DataIndex(Model.Detail, m => m.fldTypeVagon).Text("نوع واگن").Wrap(true).Flex(3)
                                                                            )
                                                                            .SelectionModel(
                                                                                Html.X().RowSelectionModel()
                                                                                    .Mode(Ext.Net.SelectionMode.Single)
                                                                            )
                                                                    )
                                                            )
                        .ColumnModel(
                                          Html.X().Column().DataIndex(Model.Contract, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                        Html.X().Column().DataIndex(Model.Contract, m => m.fldTitle).Text("عنوان").Wrap(true).Flex(7),
                                        Html.X().Column().DataIndex(Model.Contract, m => m.fldNameCompany).Text("نام شرکت").Wrap(true).Flex(7),
                                        Html.X().Column().DataIndex(Model.Contract, m => m.fldShomareContract).Text("شماره قرارداد").Wrap(true).Flex(3),
                                        Html.X().Column().DataIndex(Model.Contract, m => m.fldTarikhContract).Text("تاریخ قرارداد").Wrap(true).Flex(3),
                                        Html.X().Column().DataIndex(Model.Contract, m => m.fldShomareMovafeghat).Text("شماره موافقتنامه").Wrap(true).Flex(3),
                                            Html.X().Column().DataIndex(Model.Contract, m => m.fldTarikhMovafeghat).Text("تاریخ موافقتنامه").Wrap(true).Flex(3),
                                                Html.X().Column().DataIndex(Model.Contract, m => m.fldTedadVagon).Text("تعداد واگن").Wrap(true).Flex(2)
                        )
        //  .Listeners(a => a.CellDblClick.Handler = "NextSearchContract();")
                        .SelectionModel(
                            Html.X().CheckboxSelectionModel().CheckOnly(true)
        //.Listeners(l =>
        //{
        //    l.Deselect.Fn = "getDeselectData";
        //})
                                .PruneRemoved(false)
                                .Mode(Ext.Net.SelectionMode.Multi)
                        )

                                .Width(650).ColSpan(6)
                                ,
                                        X.GridPanel()
                                        .Height(350)
                                            .Title("واگن ها")
                                              .PaddingSpec("10px 0 10px 0")
                                    .Cls("grid-title")
                        .AutoScroll(true)
                        .Border(true)

                        .ItemID("GridSearchVagon")
                        .Store(
                                X.StoreFor(Model.vagon)
                            .AutoLoad(false)
        //.Listeners(l => l.Load.Handler = "GetCheckedData()")
                                .Proxy(Html.X().AjaxProxy()
                                        .Url(Url.Action("ReadVagon"))
                                        .Reader(Html.X().JsonReader().Root("data"))
                                                            .ExtraParams(x => x.Add(new { Proj = @ViewBag.Proj }))
                            )
                            .PageSize(20000)
                            .RemoteFilter(false)
                            .RemotePaging(false)
                        )
                        .View(
                            Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                        )
                        .Plugins(X.FilterHeader().Remote(false))
                        .ColumnModel(
                                             Html.X().Column().DataIndex(Model.vagon, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                                Html.X().Column().DataIndex(Model.vagon, m => m.fldShomareVagon).Text("شماره واگن").Wrap(true).Flex(3),
                                                Html.X().Column().DataIndex(Model.vagon, m => m.fldKarbariVagonName).Text("کاربری واگن").Wrap(true).Flex(3),
                                                Html.X().Column().DataIndex(Model.vagon, m => m.fldNameCompany).Text("مالک واگن").Wrap(true).Flex(4),
                                                Html.X().Column().DataIndex(Model.vagon, m => m.fldToolVagon).Text("طول واگن").Wrap(true).Flex(3),
                                                Html.X().Column().DataIndex(Model.vagon, m => m.fldTypeVagon).Text("توع واگن").Wrap(true).Flex(3),
                                                    Html.X().Column().DataIndex(Model.vagon, m => m.fldVaznKhali).Text("وزن واگن").Wrap(true).Flex(3),
                                                            Html.X().Column().DataIndex(Model.vagon, m => m.fldZarfiyatBargiri).Text("ظرفیت").Wrap(true).Flex(3)
                        )
                        .SelectionModel(
                            Html.X().CheckboxSelectionModel().CheckOnly(true)
                                .PruneRemoved(false)
                                .Mode(Ext.Net.SelectionMode.Multi)
                        )
                              .Width(650).ColSpan(6)
                       
                                ,
                                    X.FormPanel()
                                     .Layout(LayoutType.Table)
                                     .Border(false)
                                .LayoutConfig(new TableLayoutConfig { Columns = 2 })
                                    .ColSpan(6).Width(650)
                                .ItemID("flsFile").Items(
                                X.Hidden().ItemID("fldShVagon"),
                                     X.FileUploadField()
                                .ButtonOnly(true).ButtonText("آپلود فایل اکسل")
                                .PaddingSpec("0 29px 0 0")
                                .DirectEvents(l =>
                                {
                                    l.Change.Action = "UploadExcelFileVagonKoli";
                                    l.Change.Success = "hideprogressExcelFileVagonKoli();";
                                })
                                    .Listeners(l => l.Change.Fn = "showFileExcelVagonKoli")
                                .Icon(Ext.Net.Icon.DiskUpload)
                                ,
                                X.Label().ItemID("lblXlsVagon")
                                )
                        )
                        )
                        )
                        /*,
                    Html.X().Panel()
                    .Border(true)
                            .Listeners(L => L.AfterRender.Handler = "setSizeRptPanelKoli()")
                    .AutoScroll(true)
                        .ItemID("RptPanel2_KarkardD")*/
            )

    )

)
<script type="text/javascript">
    function LoadSelectedMalekKoli() {
        if('@ViewBag.IsMalek'==1)
        App.RptKoliBarname.queryById('GridSearchMalek').getSelectionModel().selectAll();
    }
    var loadGridVagonsDetailKoli = function (rowExpanderr, record) {
        var txtAzTarikh = App.RptKoliBarname.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptKoliBarname.queryById('txtTaTarikh');
        var CboTypeBaze = App.RptKoliBarname.queryById('CboTypeBaze');

        var CboAzYear = App.RptKoliBarname.queryById('CboAzYear');
        var CboAzMonth = App.RptKoliBarname.queryById('CboAzMonth');
        var CboTaYear = App.RptKoliBarname.queryById('CboTaYear');
        var CboTaMonth = App.RptKoliBarname.queryById('CboTaMonth');

        var AzTa = txtAzTarikh.rawValue;
        var TaTa = txtTaTarikh.rawValue;
        if (CboTypeBaze.getValue() == "1") {
            AzTa = CboAzYear.getValue() + "/" + CboAzMonth.getValue() + "/01";
            TaTa = CboTaYear.getValue() + "/" + CboTaMonth.getValue() + "/31";
        }

        rowExpanderr.component.getStore().getProxy().setExtraParam("fldHeaderId", record.data.fldId);
        rowExpanderr.component.getStore().getProxy().setExtraParam("azTarikh", AzTa);
        rowExpanderr.component.getStore().getProxy().setExtraParam("tatarikh", TaTa);

        rowExpanderr.component.getStore().load();
    };
    var getRowClassInProjKoli = function (record, rowIndex, rowParams, store) {
        if (record.data.Ismalk == 0) {
            return "YellowRow";
        }
    };

    function showHelp_VideoBarnameKoli() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/RptBarname/VideoWinBarnameKoli',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });

    }
    function HelpBarnameKoli() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/RptBarname/HelpBarnameKoli',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
    function SetDefultYearKoli() {
        var CboAzYear = App.RptKoliBarname.queryById('CboAzYear');
        CboAzYear.setValue('@ViewBag.AzSal');
    }
    function setValueMonthKoli() {
        var CboAzMonth = App.RptKoliBarname.queryById('CboAzMonth');
        CboAzMonth.setValue('@ViewBag.AzMah'); 
    }
    function SetDefultTaYearKoli() {
        var CboTaYear = App.RptKoliBarname.queryById('CboTaYear');
        CboTaYear.setValue('@ViewBag.TaSal');
    }
    function setValueTaMonthKoli() {
        var CboTaMonth = App.RptKoliBarname.queryById('CboTaMonth');
        CboTaMonth.setValue('@ViewBag.TaMah');
    }
    function ChangeTypeBazeKoli() {
        var CboTypeBaze = App.RptKoliBarname.queryById('CboTypeBaze');
        var txtAzTarikh = App.RptKoliBarname.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptKoliBarname.queryById('txtTaTarikh');
        var lblAzTarikh = App.RptKoliBarname.queryById('lblAzTarikh');
        var lblTaTarikh = App.RptKoliBarname.queryById('lblTaTarikh');
        var flsAzz = App.RptKoliBarname.queryById('flsAzz');
        var lblAzz = App.RptKoliBarname.queryById('lblAzz');
        var flsTaa = App.RptKoliBarname.queryById('flsTaa');
        var lblTaa = App.RptKoliBarname.queryById('lblTaa');
        
        if (CboTypeBaze.getValue() == "0") {
            txtAzTarikh.show();
            txtTaTarikh.show();
            lblAzTarikh.show();
            lblTaTarikh.show();
            flsAzz.hide();
            lblAzz.hide();
            flsTaa.hide();
            lblTaa.hide();
        }
        else if (CboTypeBaze.getValue() == "1") {
            txtAzTarikh.hide();
            txtTaTarikh.hide();
            lblAzTarikh.hide();
            lblTaTarikh.hide();
            flsAzz.show();
            lblAzz.show();
            flsTaa.show();
            lblTaa.show();
        }
    }
    function NextBarnameKoli() {
        var fldMalek_InfoGridId = App.RptKoliBarname.queryById('fldMalek_InfoGridId');
        var fldContractGridId = App.RptKoliBarname.queryById('fldContractGridId');
        var fldVagonGridId = App.RptKoliBarname.queryById('fldVagonGridId');

        var txtAzTarikh = App.RptKoliBarname.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptKoliBarname.queryById('txtTaTarikh');

        var btnpre = App.RptKoliBarname.queryById('btnpre');
        var btnnxt = App.RptKoliBarname.queryById('btnnxt');
        var CboTypeRPT = App.RptKoliBarname.queryById('CboTypeRPT');
        var GridSearchMalek = App.RptKoliBarname.queryById('GridSearchMalek');
        var GridSearchContract = App.RptKoliBarname.queryById('GridSearchContract');
        var GridSearchVagon = App.RptKoliBarname.queryById('GridSearchVagon');
        if (CboTypeRPT.getValue() == "0") {
            if (GridSearchMalek.isHidden() == false)
            {
                var SelectedRow1 = App.RptKoliBarname.queryById('GridSearchMalek').getSelectionModel().getSelection();
                var Malekan = "";
                for (var i = 0; i < SelectedRow1.length; i++)
                    Malekan = Malekan + SelectedRow1[i].data.fldId + ",";
                fldMalek_InfoGridId.setValue(Malekan);

                if (Malekan == "") {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "انتخاب حداقل یک مالک ضروری است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }
                if (txtAzTarikh.rawValue == "" || txtTaTarikh.rawValue == "") {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "انتخاب تاریخ ها ضروری است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }

                GridSearchContract.show();
                GridSearchMalek.hide();
                btnpre.show();
                btnnxt.show();

                App.RptKoliBarname.queryById('GridSearchContract').getStore().getProxy().setExtraParam("MalekId", Malekan);
                App.RptKoliBarname.queryById('GridSearchContract').store.load();

            }
            else if (GridSearchContract.isHidden() == false) {
                var SelectedRow2 = App.RptKoliBarname.queryById('GridSearchContract').getSelectionModel().getSelection();
                var Proj = "";
                for (var i = 0; i < SelectedRow2.length; i++)
                    Proj = Proj + SelectedRow2[i].data.fldId + ",";
                fldContractGridId.setValue(Proj);

                if (Proj == "") {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "انتخاب حداقل یک پروژه ضروری است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }
                if (txtAzTarikh.rawValue == "" || txtTaTarikh.rawValue == "") {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "انتخاب تاریخ ها ضروری است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }

                GridSearchVagon.show();
                GridSearchContract.hide();
                btnpre.show();
                btnnxt.hide();

                var CboTypeBaze = App.RptKoliBarname.queryById('CboTypeBaze');
                var CboAzYear = App.RptKoliBarname.queryById('CboAzYear');
                var CboAzMonth = App.RptKoliBarname.queryById('CboAzMonth');
                var CboTaYear = App.RptKoliBarname.queryById('CboTaYear');
                var CboTaMonth = App.RptKoliBarname.queryById('CboTaMonth');

                var AzTa = txtAzTarikh.rawValue;
                var TaTa = txtTaTarikh.rawValue;
                if (CboTypeBaze.getValue() == "1") {
                    AzTa = CboAzYear.getValue() + "/" + CboAzMonth.getValue() + "/01";
                    TaTa = CboTaYear.getValue() + "/" + CboTaMonth.getValue() + "/31";
                }

                App.RptKoliBarname.queryById('GridSearchVagon').getStore().getProxy().setExtraParam("Projj", Proj);
                App.RptKoliBarname.queryById('GridSearchVagon').getStore().getProxy().setExtraParam("azTarikh", AzTa);
                App.RptKoliBarname.queryById('GridSearchVagon').getStore().getProxy().setExtraParam("tatarikh", TaTa);
                App.RptKoliBarname.queryById('GridSearchVagon').store.load();
            }
        }
        else if (CboTypeRPT.getValue() == "1") {
            if (GridSearchContract.isHidden() == false) {

                var SelectedRow2 = App.RptKoliBarname.queryById('GridSearchContract').getSelectionModel().getSelection();
                var Proj = "";
                for (var i = 0; i < SelectedRow2.length; i++)
                    Proj = Proj + SelectedRow2[i].data.fldId + ",";
                fldContractGridId.setValue(Proj);

                if (Proj == "") {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "انتخاب حداقل یک پروژه ضروری است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }
                if (txtAzTarikh.rawValue == "" || txtTaTarikh.rawValue == "") {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "انتخاب تاریخ ها ضروری است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }

                GridSearchVagon.show();
                GridSearchContract.hide();
                btnpre.show();
                btnnxt.hide();

                var CboTypeBaze = App.RptKoliBarname.queryById('CboTypeBaze');
                var CboAzYear = App.RptKoliBarname.queryById('CboAzYear');
                var CboAzMonth = App.RptKoliBarname.queryById('CboAzMonth');
                var CboTaYear = App.RptKoliBarname.queryById('CboTaYear');
                var CboTaMonth = App.RptKoliBarname.queryById('CboTaMonth');

                var AzTa = txtAzTarikh.rawValue;
                var TaTa = txtTaTarikh.rawValue;
                if (CboTypeBaze.getValue() == "1") {
                    AzTa = CboAzYear.getValue() + "/" + CboAzMonth.getValue() + "/01";
                    TaTa = CboTaYear.getValue() + "/" + CboTaMonth.getValue() + "/31";
                }

                App.RptKoliBarname.queryById('GridSearchVagon').getStore().getProxy().setExtraParam("Projj", Proj);
                App.RptKoliBarname.queryById('GridSearchVagon').getStore().getProxy().setExtraParam("azTarikh", AzTa);
                App.RptKoliBarname.queryById('GridSearchVagon').getStore().getProxy().setExtraParam("tatarikh", TaTa);
                App.RptKoliBarname.queryById('GridSearchVagon').store.load();
            }
        }
        CboTypeRPT.setReadOnly(true);
    }
    function PrevBarnameKoli() {
        var CboTypeRPT = App.RptKoliBarname.queryById('CboTypeRPT');
        var GridSearchMalek = App.RptKoliBarname.queryById('GridSearchMalek');
        var GridSearchContract = App.RptKoliBarname.queryById('GridSearchContract');
        var GridSearchVagon = App.RptKoliBarname.queryById('GridSearchVagon');
        var btnpre = App.RptKoliBarname.queryById('btnpre');

        if (CboTypeRPT.getValue() == "0") {
            if (GridSearchVagon.isHidden() == false) {
                GridSearchContract.show();
                GridSearchVagon.hide();
                btnpre.show();
            }
            else if (GridSearchContract.isHidden() == false) {
                GridSearchMalek.show();
                GridSearchContract.hide();
                btnpre.hide();
                CboTypeRPT.setReadOnly(false);
            }
        }
        if (CboTypeRPT.getValue() == "1") {
            if (GridSearchVagon.isHidden() == false) {
                GridSearchContract.show();
                GridSearchVagon.hide();
                btnpre.hide();
                CboTypeRPT.setReadOnly(false);
            }
        }
    }
    function ChangeTypeRPTKoli() {    /*GridSearchVagon    GridSearchContract   GridSearchMalek*/

        var CboTypeRPT = App.RptKoliBarname.queryById('CboTypeRPT');
        var GridSearchMalek = App.RptKoliBarname.queryById('GridSearchMalek');
        var GridSearchContract = App.RptKoliBarname.queryById('GridSearchContract');
        var GridSearchVagon = App.RptKoliBarname.queryById('GridSearchVagon');
        var txtAzTarikh = App.RptKoliBarname.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptKoliBarname.queryById('txtTaTarikh');
        var lblAzShVagon = App.RptKoliBarname.queryById('lblAzShVagon');
        var txtAzShVagon = App.RptKoliBarname.queryById('txtAzShVagon');
        var lblTaShVagon = App.RptKoliBarname.queryById('lblTaShVagon');
        var txtTaShVagon = App.RptKoliBarname.queryById('txtTaShVagon');
        var flsFile = App.RptKoliBarname.queryById('flsFile');
        var btnnxt = App.RptKoliBarname.queryById('btnnxt');

        ClearAll();

        if (CboTypeRPT.getValue() == "0") {
            GridSearchMalek.show();
            GridSearchContract.hide();
            GridSearchVagon.hide();
            lblAzShVagon.hide();
            txtAzShVagon.hide();
            lblTaShVagon.hide();
            txtTaShVagon.hide();
            flsFile.hide();
            btnnxt.show();
            App.RptKoliBarname.queryById('Filters').setSize(App.ReportRaiSamWin.getWidth() - 200, App.ReportRaiSamWin.getHeight() - 180);
        }
        else if (CboTypeRPT.getValue() == "1") {
            GridSearchMalek.hide();
            GridSearchContract.show();
            GridSearchVagon.hide();
            lblAzShVagon.hide();
            txtAzShVagon.hide();
            lblTaShVagon.hide();
            txtTaShVagon.hide();
            flsFile.hide();
            btnnxt.show();
            App.RptKoliBarname.queryById('Filters').setSize(App.ReportRaiSamWin.getWidth() - 200, App.ReportRaiSamWin.getHeight() - 180);
           
            App.RptKoliBarname.queryById('GridSearchContract').getStore().getProxy().setExtraParam("MalekId", "");
            App.RptKoliBarname.queryById('GridSearchContract').store.load();
        }
        else if (CboTypeRPT.getValue() == "2") {
            GridSearchMalek.hide();
            GridSearchContract.hide();
            GridSearchVagon.show();
            lblAzShVagon.hide();
            txtAzShVagon.hide();
            lblTaShVagon.hide();
            txtTaShVagon.hide();
            flsFile.hide();
            btnnxt.hide();
            App.RptKoliBarname.queryById('Filters').setSize(App.ReportRaiSamWin.getWidth() - 200, App.ReportRaiSamWin.getHeight() - 180);
        }
        else if (CboTypeRPT.getValue() == "3") {
            GridSearchMalek.hide();
            GridSearchContract.hide();
            GridSearchVagon.hide();
            lblAzShVagon.show();
            txtAzShVagon.show();
            lblTaShVagon.show();
            txtTaShVagon.show();
            flsFile.hide();
            btnnxt.hide();
            App.RptKoliBarname.queryById('Filters').setSize(800, 100);
        }
        else if (CboTypeRPT.getValue() == "4") {
            GridSearchMalek.hide();
            GridSearchContract.hide();
            GridSearchVagon.hide();
            lblAzShVagon.hide();
            txtAzShVagon.hide();
            lblTaShVagon.hide();
            txtTaShVagon.hide();
            flsFile.show();
            btnnxt.hide();
            App.RptKoliBarname.queryById('Filters').setSize(800, 100);
        }
    }
    function HelpBarnameKoli() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/ReportsMachinery/HelpBarnameKoli',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }

    function searchMalek(Code) {
        if (Code == 45) {
            App.RptKoliBarname.body.mask("در حال بارگذاری");
            Ext.net.DirectMethod.request({
                url: '/SearchMalek_Vagon/IndexChecked',
                params: {
                    State: 1,
                },
                success: function () {
                    App.RptKoliBarname.body.mask().hide();
                }
            });
        }
    }
    function SearchContract_Project(Code) {
        if (Code == 45) {
            App.RptKoliBarname.body.mask("در حال بارگذاری");
            Ext.net.DirectMethod.request({
                url: '/SearchContract_Project/IndexChecked',
                params: {
                    State: 1,
                    Malek:App.RptKoliBarname.queryById('fldMalek_InfoId').getValue()
                },
                success: function () {
                    App.RptKoliBarname.body.mask().hide();
                }
            });
        }
    }

    function ChangeTaTarikh_KarkardDKoli() {
        var txtAzTarikh = App.RptKoliBarname.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptKoliBarname.queryById('txtTaTarikh');
        txtTaTarikh.setMinValue(txtAzTarikh.getValue());
        txtTaTarikh.minText = "تا تاریخ باید بعد از تاریخ " + txtAzTarikh.rawValue + "باشد";

        var fldMalek_InfoGridId = App.RptKoliBarname.queryById('fldMalek_InfoGridId').getValue();
        if (txtAzTarikh.validate() == true && txtTaTarikh.validate() == true && fldMalek_InfoGridId != "" && fldMalek_InfoGridId != null) {
            App.RptKoliBarname.queryById('GridSearchContract').getStore().getProxy().setExtraParam("MalekId", fldMalek_InfoGridId);
            App.RptKoliBarname.queryById('GridSearchContract').store.load();
        }
    }
    function ChangeAzTarikh_KarkardDKoli() {
        var txtAzTarikh = App.RptKoliBarname.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptKoliBarname.queryById('txtTaTarikh');
        txtAzTarikh.setMaxValue(txtTaTarikh.getValue());
        txtAzTarikh.maxText = "از تاریخ باید قبل از تا تاریخ " + txtTaTarikh.rawValue + "باشد";

        var fldMalek_InfoGridId=App.RptKoliBarname.queryById('fldMalek_InfoGridId').getValue();
        if (txtAzTarikh.validate() == true && txtTaTarikh.validate() == true && fldMalek_InfoGridId != "" && fldMalek_InfoGridId!=null) {
            App.RptKoliBarname.queryById('GridSearchContract').getStore().getProxy().setExtraParam("MalekId", fldMalek_InfoGridId);
            App.RptKoliBarname.queryById('GridSearchContract').store.load();
        }
    }
    function SelectAzSalTaSalKoli() {
        var fldMalek_InfoGridId=App.RptKoliBarname.queryById('fldMalek_InfoGridId').getValue();
        if(fldMalek_InfoGridId != "" && fldMalek_InfoGridId!=null){
            App.RptKoliBarname.queryById('GridSearchContract').getStore().getProxy().setExtraParam("MalekId", fldMalek_InfoGridId);
            App.RptKoliBarname.queryById('GridSearchContract').store.load();
        }
    }
     
    function setSizeRptPanelKoli() {
        
        App.RptKoliBarname.queryById('CboTypeRPT').setValue("0");
        App.RptKoliBarname.queryById('CboTypeBaze').setValue("0");
        var DateStart = new Date('@ViewBag.fldTarikh');
        var txtAzTarikh = App.RptKoliBarname.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptKoliBarname.queryById('txtTaTarikh');
        txtAzTarikh.setMaxValue(DateStart);
        txtTaTarikh.setMaxValue(DateStart);
        txtAzTarikh.maxText = "تاریخ باید قبل از" + '@ViewBag.fldTarikh_S' + "باشد";
        txtTaTarikh.maxText = "تاریخ باید قبل از" + '@ViewBag.fldTarikh_S' + "باشد";

        App.RptKoliBarname.queryById('btnpre').hide();

        txtAzTarikh.setValue('@ViewBag.fldTarikh_az');
        txtTaTarikh.setValue('@ViewBag.fldTarikh_ta');

        App.RptKoliBarname.queryById('Filters').setSize(App.ReportRaiSamWin.getWidth() - 200, App.ReportRaiSamWin.getHeight() - 180);
        App.RptKoliBarname.queryById('GridSearchVagon').setSize(App.ReportRaiSamWin.getWidth() - 230, App.ReportRaiSamWin.getHeight() - 230);
        App.RptKoliBarname.queryById('GridSearchContract').setSize(App.ReportRaiSamWin.getWidth() - 230, App.ReportRaiSamWin.getHeight() - 230);
        App.RptKoliBarname.queryById('GridSearchMalek').setSize(App.ReportRaiSamWin.getWidth() - 230, App.ReportRaiSamWin.getHeight() - 230);
       
    }
   
    function ShowBarnameKoli() {
        GenerateBarname(3);
    }
    function PrintBarnameKoli() {
        GenerateBarname(1);
    }
    function XlsBarnameKoli() {
        GenerateBarname(2);
    }

    function GenerateBarname(st) {
        var CboTypeRPT = App.RptKoliBarname.queryById('CboTypeRPT');
        var txtAzTarikh = App.RptKoliBarname.queryById('txtAzTarikh');
        var txtTaTarikh = App.RptKoliBarname.queryById('txtTaTarikh');
        var lblAzShVagon = App.RptKoliBarname.queryById('lblAzShVagon');
        var txtAzShVagon = App.RptKoliBarname.queryById('txtAzShVagon');
        var lblTaShVagon = App.RptKoliBarname.queryById('lblTaShVagon');
        var txtTaShVagon = App.RptKoliBarname.queryById('txtTaShVagon');
        var fldShVagon = App.RptKoliBarname.queryById('fldShVagon');
        var lblXlsVagon= App.RptKoliBarname.queryById('lblXlsVagon');
        var fldShVagon = App.RptKoliBarname.queryById('fldShVagon');

        var GridSearchMalek = App.RptKoliBarname.queryById('GridSearchMalek');
        var GridSearchContract = App.RptKoliBarname.queryById('GridSearchContract');
        var GridSearchVagon = App.RptKoliBarname.queryById('GridSearchVagon');
        var fldMalek_InfoGridId = App.RptKoliBarname.queryById('fldMalek_InfoGridId');
        var fldContractGridId = App.RptKoliBarname.queryById('fldContractGridId');
        var fldVagonGridId = App.RptKoliBarname.queryById('fldVagonGridId');

        var CboTypeBaze = App.RptKoliBarname.queryById('CboTypeBaze');
        var CboAzYear = App.RptKoliBarname.queryById('CboAzYear');
        var CboAzMonth = App.RptKoliBarname.queryById('CboAzMonth');
        var CboTaYear = App.RptKoliBarname.queryById('CboTaYear');
        var CboTaMonth = App.RptKoliBarname.queryById('CboTaMonth');

        var AzTa = txtAzTarikh.rawValue;
        var TaTa = txtTaTarikh.rawValue;
        if (CboTypeBaze.getValue() == "1") {
            AzTa = CboAzYear.getValue() + "/" + CboAzMonth.getValue() + "/01";
            TaTa = CboTaYear.getValue() + "/" + CboTaMonth.getValue() + "/31";
        }

        var height = App.ReportRaiSamWin.getHeight() - 225;

        var MalekId = ""; var ContractId = ""; var ShVagon = ""; var AzVagon = ""; var TaVagon = "";

        if ((CboTypeBaze.getValue() == "0" && txtAzTarikh.validate() == true && txtTaTarikh.validate() == true) ||
            (CboTypeBaze.getValue() == "1" && CboAzYear.validate() == true && CboAzMonth.validate() == true && CboTaYear.validate() == true && CboTaMonth.validate() == true)) {

            if (CboTypeRPT.getValue() == "0") {
                if (GridSearchMalek.isHidden() == false) {
                    var SelectedRow1 = App.RptKoliBarname.queryById('GridSearchMalek').getSelectionModel().getSelection();
                    for (var i = 0; i < SelectedRow1.length; i++)
                        MalekId = MalekId + SelectedRow1[i].data.fldId + ",";

                    ContractId = "";
                }
                else if (GridSearchContract.isHidden() == false) {
                    var SelectedRow1 = App.RptKoliBarname.queryById('GridSearchContract').getSelectionModel().getSelection();
                    for (var i = 0; i < SelectedRow1.length; i++)
                        ContractId = ContractId + SelectedRow1[i].data.fldId + ",";

                    MalekId = fldMalek_InfoGridId.getValue();
                }
                else if (GridSearchVagon.isHidden() == false) {
                    var SelectedRow1 = App.RptKoliBarname.queryById('GridSearchVagon').getSelectionModel().getSelection();
                    for (var i = 0; i < SelectedRow1.length; i++)
                        ShVagon = ShVagon + SelectedRow1[i].data.fldShomareVagon + ",";

                    MalekId = fldMalek_InfoGridId.getValue();
                    ContractId = fldContractGridId.getValue();
                }

                if (MalekId == "") {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "انتخاب حداقل یک مالک ضروری است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }
            }
            else if (CboTypeRPT.getValue() == "1") {
                if (GridSearchContract.isHidden() == false) {
                    var SelectedRow1 = App.RptKoliBarname.queryById('GridSearchContract').getSelectionModel().getSelection();
                    for (var i = 0; i < SelectedRow1.length; i++)
                        ContractId = ContractId + SelectedRow1[i].data.fldId + ",";

                }
                else if (GridSearchVagon.isHidden() == false) {
                    var SelectedRow1 = App.RptKoliBarname.queryById('GridSearchVagon').getSelectionModel().getSelection();
                    for (var i = 0; i < SelectedRow1.length; i++)
                        ShVagon = ShVagon + SelectedRow1[i].data.fldShomareVagon + ",";

                    ContractId = fldContractGridId.getValue();
                }

                if (ContractId == "") {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "انتخاب حداقل یک پروژه ضروری است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }
            }
            else if (CboTypeRPT.getValue() == "2") {
                var SelectedRow1 = App.RptKoliBarname.queryById('GridSearchVagon').getSelectionModel().getSelection();
                for (var i = 0; i < SelectedRow1.length; i++)
                    ShVagon = ShVagon + SelectedRow1[i].data.fldShomareVagon + ",";

                if (ShVagon == "") {
                    Ext.MessageBox.show({
                        title: "خطا",
                        msg: "انتخاب حداقل یک واگن ضروری است.",
                        icon: Ext.MessageBox.ERROR,
                        buttons: Ext.MessageBox.OK
                    });
                    return;
                }
            }
            else if (CboTypeRPT.getValue() == "3") {
                if (txtAzShVagon.validate() == true && txtTaShVagon.validate() == true) {
                    AzVagon = txtAzShVagon.getValue();
                    TaVagon = txtTaShVagon.getValue();
                }
                else
                    return;
            }
            else if (CboTypeRPT.getValue() == "4") {
                if (fldShVagon.getValue() !="") {
                    ShVagon = fldShVagon.getValue();
                }
                else
                    return;
            }

            if (st == 1) {
                /*App.RptKoliBarname.queryById('RptPanel2_KarkardD').update("<center><object class='se-pre-con' style='width:100%;height:" + height + "px;border: 1px solid #ccc;' type='application/pdf' data='/RptBarname/GeneratePDFKoli?StartDate=" + txtAzTarikh.rawValue + "&EndDate=" + txtTaTarikh.rawValue + "&MalekId=" + MalekId + "&ContractId=" + ContractId + "&ShVagon=" + ShVagon + "&AzVagon=" + AzVagon + "&TaVagon=" + TaVagon + "'></object></center>");*/
                App.RptKoliBarname.body.mask("در حال بارگذاری");
                Ext.net.DirectMethod.request({
                    url: '/RptBarname/PrintPageKoli',
                    params: {
                        containerId: "ReportGeneralTab",
                        StartDate: AzTa,
                        EndDate: TaTa,
                        MalekId: MalekId,
                        ContractId: ContractId,
                        ShVagon: ShVagon,
                        AzVagon: AzVagon,
                        TaVagon: TaVagon

                    },
                    success: function () {
                        App.RptKoliBarname.body.mask().hide();
                    }
                });
            }
            else if (st == 3) {
                /*App.RptKoliBarname.queryById('RptPanel2_KarkardD').update("<center><object class='se-pre-con' style='width:100%;height:" + height + "px;border: 1px solid #ccc;' type='application/pdf' data='/RptBarname/GeneratePDFKoli?StartDate=" + txtAzTarikh.rawValue + "&EndDate=" + txtTaTarikh.rawValue + "&MalekId=" + MalekId + "&ContractId=" + ContractId + "&ShVagon=" + ShVagon + "&AzVagon=" + AzVagon + "&TaVagon=" + TaVagon + "'></object></center>");*/
                App.RptKoliBarname.body.mask("در حال بارگذاری");
                Ext.net.DirectMethod.request({
                    url: '/RptBarname/ShowPageKoli',/*PrintPageKoli',*/
                    params: {
                        containerId: "ReportGeneralTab",
                        StartDate: AzTa,
                        EndDate: TaTa,
                        MalekId: MalekId,
                        ContractId: ContractId,
                        ShVagon: ShVagon,
                        AzVagon: AzVagon,
                        TaVagon: TaVagon

                    },
                    success: function () {
                        App.RptKoliBarname.body.mask().hide();
                    }
                });
            }
            else if (st == 2) {
                var Checked = "";

                Checked = "fldShomareVagon" + ";" + "fldTedad" + ";" + "fldSumMasafat" + ";" + "fldSumTonazhBar" + ";" + "fldSumKilometr" + ";";
                window.location.href = '@Url.Content("~/RptBarname/CreateExcelKoli/")' + '?Checked=' + Checked + "&StartDate=" + AzTa + "&EndDate=" + TaTa + "&MalekId=" + MalekId + "&ContractId=" + ContractId + "&ShVagon=" + ShVagon + "&AzVagon=" + AzVagon + "&TaVagon=" + TaVagon;
            }

        }
        else {
            return;
        }
    }

    var MojazExcelFileVagonKoli = 0;
    var EndUploadExcelFileVagonKoli = false;

    var CheckExcelFileVagon = setInterval(CheckEndExcelFileVagon, 500);

    function CheckEndExcelFileVagon() {
        if (EndUploadExcelFileVagonKoli == true) {
            Ext.MessageBox.hide();
            clearInterval(CheckEndExcelFileVagon);
            EndUploadExcelFileVagonKoli = false;
            Ext.net.Mask.show({ msg: 'فایل با موفقیت آپلود شد. در حال بارگذاری....' });
            Ext.net.DirectMethod.request({
                url: '/RptBarname/ProcessXlsVagon',
                success: function (data) {
                    var ic = Ext.MessageBox.INFO;
                    if (data.Er == 1) {
                        App.RptKoliBarname.queryById('lblXlsVagon').setText("هیچ شماره واگنی دریافت نشد.");

                    }
                    else {
                        App.RptKoliBarname.queryById('lblXlsVagon').setText("واگن های موردنظر با موفقیت بارگذاری شد.");
                        App.RptKoliBarname.queryById('fldShVagon').setValue(data.VagonIds);
                    }
                    Ext.net.Mask.hide();
                },
                timeout: 90000
            });
        }
    }

    var showFileExcelVagonKoli = function (fb, v) {
        if (v) {
            showProgressBarExcelFileVagon();
            if (v.split('.').pop().toLowerCase() == "xls" || v.split('.').pop().toLowerCase() == "xlsx") {
                MojazExcelFileVagonKoli = 1;
            }
        }
    };

    function hideprogressExcelFileVagonKoli() {
        if (MojazExcelFileVagonKoli == 1) {
            EndUploadExcelFileVagonKoli = true;
        }
        MojazExcelFileVagonKoli = 0;
    }

    function showProgressBarExcelFileVagon() {
        Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال آپلود فایل...',
            width: 300,
            wait: true,
            waitConfig:
            {
                interval: 200,
                text: 'در حال آپلود فایل...',
                scope: this
            }
        });
    }
    function ClearAll() {
        App.RptKoliBarname.queryById('txtAzShVagon').setValue("");
        App.RptKoliBarname.queryById('txtTaShVagon').setValue("");
        App.RptKoliBarname.queryById('fldShVagon').setValue("");
    }
    var addKeyMapRptBarnameKoli = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.RptKoliBarname.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtTaTarikh") {
                        nextfld = App.RptKoliBarname.queryById('btnNamayesh');
                        return;
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }
</script>

