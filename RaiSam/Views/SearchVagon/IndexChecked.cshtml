@model IEnumerable<RaiSam.Models.prs_tblVagonSelect>
@using Ext.Net.MVC;
@{
    var X = Html.X();
}
<script>
    Ext.net.FilterHeader.behaviour.string[0].match = function (recordValue, matchValue) {
        return (Ext.net.FilterHeader.behaviour.getStrValue(recordValue) || "").indexOf(matchValue) > -1;
    };

    Ext.net.FilterHeader.behaviour.string[0].getStrValue = function (value) {
        return value.toString();
    };


    Ext.net.FilterHeader.behaviour.string[0].serialize = function (value) {
        return {
            type: "string",
            op: "*",
            value: value
        };
    };
</script>
@(Html.X().Window()
    .Width(600)
    .Height(350)
    .Title("لیست واگن ها")
    .ID("SearchVagon")
    .Closable(true)
    .Modal(true)
    .Layout(Ext.Net.LayoutType.Fit)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.GridPanel()
                    .AutoScroll(true)
                    .Border(false)
                    .TopBar(
                        Html.X().Toolbar()
                            .Items(
                                X.Button()
                                    .Text("انتخاب")
                                    .Icon(Ext.Net.Icon.ArrowRedo)
                                    .Listeners(li => li.Click.Handler = "NextSearchVagon();")
                                    ,
                                        X.Label("از واگن شماره:").MarginSpec("0 0 0 30px"),
                         X.TextField()
                             .ItemID("txtAzShomare")
                                    .Width(50)
                                        .AllowBlank(false)
                                            .BlankText("لطفا شماره واگن را وارد کنید.")
                                         .Listeners(l =>
                                                            {
                                                                l.SpecialKey.Handler = "SelectGp(e.getKey());";
                                                            })
                                 ,
                                            X.Label("تا:"),
                             X.TextField()
                                 .ItemID("txtTaShomare")
                                .Width(50)
                                        .AllowBlank(false)
                                                .BlankText("لطفا شماره واگن را وارد کنید.")
                                     .Listeners(l =>
                                                        {
                                                            l.SpecialKey.Handler = "SelectGp(e.getKey());";
                                                        })
                                )
                        )
                    .ItemID("GridSearchVagon")
                    .Store(
                        X.StoreForModel()
                            .Listeners(l => l.Load.Handler = "GetCheckedData()")
                            .Proxy(Html.X().AjaxProxy()
                                    .Url(Url.Action("ReadChecked"))
                                    .Reader(Html.X().JsonReader().Root("data"))
                                                    .ExtraParams(x => x.Add(new { state = @ViewBag.state, Malek = @ViewBag.Malek, Pro = @ViewBag.headerId }))
                        )
                        .PageSize(20000)
                        .RemoteFilter(false)
                        .RemotePaging(false)
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(false))
                    .ColumnModel(
                                     Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                                        Html.X().Column().DataIndex(Model, m => m.fldShomareVagon).Text("شماره واگن").Wrap(true).Flex(3),
                                        Html.X().Column().DataIndex(Model, m => m.fldKarbariVagonName).Text("کاربری واگن").Wrap(true).Flex(3),
                                        Html.X().Column().DataIndex(Model, m => m.fldNameCompany).Text("مالک واگن").Wrap(true).Flex(4),
                                        Html.X().Column().DataIndex(Model, m => m.fldToolVagon).Text("طول واگن").Wrap(true).Flex(3),
                                        Html.X().Column().DataIndex(Model, m => m.fldTypeVagon).Text("توع واگن").Wrap(true).Flex(3),
                                            Html.X().Column().DataIndex(Model, m => m.fldVaznKhali).Text("وزن واگن").Wrap(true).Flex(3),
                                                                Html.X().Column().DataIndex(Model, m => m.fldZarfiyatBargiri).Text("ظرفیت").Wrap(true).Flex(3)
                    )
        //  .Listeners(a => a.CellDblClick.Handler = "NextSearchVagon();")
                    .SelectionModel(
                        Html.X().CheckboxSelectionModel().CheckOnly(true)
        //.Listeners(l =>
        //{
        //    l.Deselect.Fn = "getDeselectData";
        //})
                            .PruneRemoved(false)
                            .Mode(Ext.Net.SelectionMode.Multi)
                    )
            )
        )
)

<script type="text/javascript">
    /*var editMode = false;*/
    /*var deletedata = new Array();*/
    function SelectGp(st) {
        if (st == 13) {
            App.SearchVagon.body.mask("در حال بررسی");
            var txtAzShomare = App.SearchVagon.queryById("txtAzShomare");
            var txtTaShomare = App.SearchVagon.queryById("txtTaShomare");

            App.SearchVagon.queryById("txtTaShomare").focus();

            var er = false;
            if (txtAzShomare.validate() == false) {
                er = true;
            }
            if (txtTaShomare.validate() == false) {
                er = true;
            }
            if (er == true) {
                App.SearchVagon.body.mask().hide();
                return;
            }

            var az = txtAzShomare.getValue();
            var ta = txtTaShomare.getValue();

            
            for (let index = az; index <= ta; index++) {
        
                   

                var index2 = App.SearchVagon.queryById("GridSearchVagon").getStore().findExact("fldShomareVagon", String(index));
                App.SearchVagon.queryById("GridSearchVagon").getSelectionModel().select(index2, true);

                if (index == ta)
                    App.SearchVagon.body.mask().hide();
            }
        }
    }
    function GetCheckedData() {

        var VagonId = "";
        if ('@ViewBag.state' == 1)
            VagonId = '@ViewBag.Vagons';

        var AllRow = VagonId.split(',');
        for (var i = 0; i < AllRow.length-1; i++) {
            var index2 = App.SearchVagon.queryById("GridSearchVagon").getStore().findExact("fldId", parseInt(AllRow[i]));
            App.SearchVagon.queryById("GridSearchVagon").getSelectionModel().select(index2, true);
        }
    }


    function NextSearchVagon() {
        var SelectedRow = App.SearchVagon.queryById('GridSearchVagon').getSelectionModel().getSelection();
        var VagonTitle = "";
        var VagonId = "";
        for (var i = 0; i < SelectedRow.length; i++) {

            VagonId = VagonId + SelectedRow[i].data.fldId + ",";
            VagonTitle = VagonTitle + SelectedRow[i].data.fldTitle + "،";
        }
        if ('@ViewBag.state' == 1) {
            App.SearchVagon.body.mask("در حال ذخیره سازی");
            Ext.net.DirectMethod.request({
                url: '/Contract_Project/SaveVagons',
                params: {
                    headerId: '@ViewBag.headerId',
                    VagonId: VagonId,
                    __RequestVerificationToken: App.contract_project.queryById('antiForgeryToken').getValue()
                },
                success: function (data) {
                    App.SearchVagon.body.mask().hide();
                    var scc = Ext.MessageBox.INFO;
                    if (data.Er == 1)
                        scc = Ext.MessageBox.ERROR;

                    Ext.MessageBox.show({
                        title: data.MsgTitle,
                        msg: data.Msg,
                        icon: scc,
                        buttons: Ext.MessageBox.OK,
                        fn: function (btn) {
                            if (btn == 'ok') {
                                App.SearchVagon.destroy();
                                App.contract_project.queryById('Gridcontract_project').store.load();
                            }
                        }
                    });

                }
            });

        }

    }
       

    
</script>