@model IEnumerable<RaiSam.Models.prs_tblTicketCategorySelect>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{

    var X = Html.X();
}
<script src="~/Scripts/accounting.js"></script>
<style>
    .x-form-cb-wrap {
        text-align: center;
    }

    .redwarning {
        color: red;
    }
</style>

@(X.Window()
        .Modal(true).Resizable(false).Listeners(li => li.AfterRender.Handler = "LoadMatn();")
    .Title("انتقال پیام")
    .Border(true)
    .ID("ForwardWin")
    .Closable(true)
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
      .Height(350)
    .Width(400)
    .Layout(LayoutType.Fit)
        .ButtonAlign(Ext.Net.Alignment.Center)
         .Buttons(
                X.Button()
                    .Text("انتقال پیام")
                    .Icon(Ext.Net.Icon.ForwardGreen)
        //.ToolTip("کلید میانبر F8")
                    .Listeners(l =>
                    {
                        l.Click.Handler = "SaveForwardWin();";
                    })
             ,
                                X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut)
                                           .OnClientClick("App.ForwardWin.destroy()")
     )
    .Items(
        X.AntiForgeryField()
                .ItemID("antiForgeryToken").Hidden(true),
        X.Panel()
            .Border(false)
            .Items(

                X.Panel()
                    .Border(false)
                    .Items(
                        X.GridPanel()
                            .AutoScroll(true)
                            .Height(150)
                            .ItemID("GridCategory")

                            .View(
                                    Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                            )
        //    .Listeners(l => l.AfterRender.Handler = "var grid=App.ForwardWin.queryById('GridForwardWin');grid.setHeight(App.TicketWin.height-112);")
                        .Store(
                            X.StoreForModel()
                            .Listeners(l => l.BeforeLoad.Handler = "App.ForwardWin.queryById('GridCategory').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.ForwardWin.queryById('antiForgeryToken').getValue());")
                            .Proxy(Html.X().AjaxProxy()
                            .ActionMethods(l => l.Read = HttpMethod.POST)
                            .Url(Url.Action("ReadCategory"))
                            .ExtraParams(l => l.Add(new { chatId = @ViewBag.chatId }))
                            .Reader(Html.X().JsonReader().Root("data"))

                            )
                            .PageSize(20)
                            .RemoteFilter(true)
                            .RemotePaging(true)

                        )
                            .ColumnModel(
                                Html.X().RowNumbererColumn(),
                                    Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد ").Hidden(true).Flex(1),
                                Html.X().Column().DataIndex(Model, m => m.fldName).Text("شاخه گفتگو").Flex(5)
                                )

                                .SelectionModel(
                                    Html.X().CheckboxSelectionModel()
             .Mode(Ext.Net.SelectionMode.Multi).CheckOnly(true)
                                )
                                .Plugins(Html.X().CellEditing().ClicksToEdit(1)
                            )
                            , X.Label("متن الصاقی:").Margin(5),
                            X.HtmlEditor().Margin(5)
                            .Width(380).Height(100)
                            .EnableSourceEdit(false)
                            .ItemID("MatnElsaghiPayam")//.Listeners(l=>l.ke.Handler="alert()")
                            .RTL(true)
        //,
        //X.Label("متن پیام:").Margin(5),
        //        X.HtmlEditor().Margin(5).Width(380).Height(100)
        //            .ItemID("MatnPayam")
        //                        .RTL(true).ReadOnly(true)
                        )
                )
        )
)
<script type="text/javascript">
    var matnAsli="";
    function LoadMatn() {
        App.ForwardWin.body.mask('در حال بارگذاری...');
        Ext.net.DirectMethod.request({
            url: '/TicketKartabl/LoadMatnHtml',
            params: {
                chatId: '@ViewBag.chatId',
                __RequestVerificationToken: App.ForwardWin.queryById('antiForgeryToken').getValue()
            },
            success: function (data) {
                matnAsli = data.fldHTML;
               /* var MatnPayam = App.ForwardWin.queryById('MatnPayam');
                MatnPayam.setValue(data.fldHTML);*/
                App.ForwardWin.body.mask().hide();

            }
        });
    }
    function SaveForwardWin() {
        var MatnElsaghiPayam = App.ForwardWin.queryById('MatnElsaghiPayam');
        var categoryVal = new Array();
        var SelectedRows = App.ForwardWin.queryById('GridCategory').getSelectionModel();

       /* if (Ext.util.Format.trim(MatnElsaghiPayam.getEditorBody().textContent) == "") {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "متن پیام نمی تواند خالی باشد.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            return;

        }*/
        for (var i = 0; i < SelectedRows.getCount() ; i++) {
            ChatGroup = SelectedRows.selected.items[i];
            categoryVal.push({
                'fldId': ChatGroup.data.fldId
            });
        }
        if (categoryVal.length == 0) {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "هیچ گروهی برای انتقال پیام انتخاب نشده است.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
            return;
        }
        var mm = matnAsli;
        if (Ext.util.Format.trim(MatnElsaghiPayam.getEditorBody().textContent) != "")
            mm= MatnElsaghiPayam.getValue() + "</br>" + matnAsli;

        var data = {
            category: categoryVal,
            Matn:  encodeURI(mm),
            chatId: '@ViewBag.chatId'
        };
        Ext.net.Mask.show({ msg: 'در حال ذخیره سازی...' });
        $.ajax({
            type: "POST",
            url: '/TicketKartabl/SaveForward',
            datatype: "json",
            data: {
                Data: JSON.stringify(data),
                __RequestVerificationToken: App.ForwardWin.queryById('antiForgeryToken').getValue()
            },
            /*contentType: 'application/json',*/
            success: function (data1) {
                var ic = Ext.MessageBox.INFO;
                var result = data1;
                if (result.Err == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: result.MsgTitle,
                    msg: result.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK,
                    fn: function (btn) {
                        if (btn == 'ok') {
                            App.ForwardWin.destroy();
                        }
                    }
                });

                Ext.net.Mask.hide();
            },
            failure: function (data) {
                alert(data.data);
            }
        });
    }



    /*function EnterNext() {
        var keyfield = App.ForwardWin.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
        var nextfld = keyfield.nextSibling().nextSibling();
        nextfld.focus();
        nextfld.selectText();
    }*/

</script>



