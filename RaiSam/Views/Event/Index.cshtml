@model IEnumerable<RaiSam.Models.prs_tblEventSelect>
@using Ext.Net.MVC;
@using Ext.Net;

@{

    var X = Html.X();
}



@(X.Panel().Border(false).Listeners(li => { li.AfterRender.Handler = "EventSetSize();"; })
.Title("رویدادهای تراکنش ها")
                    .ID("Event")
            .Closable(true)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.AntiForgeryField()
                .ItemID("antiForgeryToken")
                .Hidden(true),
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button().Text("جدید").Icon(Ext.Net.Icon.Add)
                                       .Listeners(li => li.Click.Handler = "NewEvent();"),
                            X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil)
                                       .Listeners(Li => Li.Click.Handler = "EditEvent();"),
                            X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete)
                                .Listeners(de =>
                                {
                                    de.Click.Handler = "DeleteEvent();";
                                })
        //,
        //    X.SplitButton()
        //        .Text("راهنما")
        //        .Icon(Ext.Net.Icon.Help)
        //        .Menu(X.Menu()
        //        .Items(
        //        X.MenuItem()
        //                    .Text("راهنما متنی")
        //                    .Icon(Ext.Net.Icon.TextPaddingTop)
        //                                .Listeners(l => l.Click.Handler = "HelpEvent()"),
        //            X.MenuItem()
        //                    .Text("راهنما تصویری")
        //                    .Icon(Ext.Net.Icon.PlayBlue)
        //                        .Listeners(l => l.Click.Handler = "showHelp_VideoHelpEvent()")

                                //    )
        //)
                        )
                    )
                     .ItemID("GridEvent")
                    .BottomBar(X.PagingToolbar())
                    .Store(
                        X.StoreForModel()
                                .Listeners(l => l.BeforeLoad.Handler = "App.Event.queryById('GridEvent').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.Event.queryById('antiForgeryToken').getValue());")
                        .Proxy(Html.X().AjaxProxy()
                        .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                                 .Listeners(l => l.DataChanged.Handler = "App.Event.queryById('GridEvent').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                         .Listeners(l =>
                         {
                             l.AfterRender.Handler = "var grid = App.Event.queryById('GridEvent');grid.setHeight(App.EventsWin.getHeight() - 83); ";

                         })
                    .ColumnModel(
                            Html.X().RowNumbererColumn(),
                                        Html.X().Column().DataIndex(Model, m => m.fldFormulId).Text("fldFormulId").Hidden(true).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Hidden(true).Flex(1),
                        Html.X().Column().DataIndex(Model, m => m.fldGroupName).Text("گروه تراکنش").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldTypeName).Text("نوع تراکنش").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldNameFlag).Text("نحوه اجرا").Flex(2),
                        Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(10)//,
                                //Html.X().ComponentColumn().ID("ColFormulaWriterEvent").Flex(1).Component(Html.X().Button().IconCls("miniSpark").Text("کد پویا")
                                //    .Listeners(l => l.Click.Handler = "GotoFormulaWriterEvent();")).Filterable(false)
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )
            )
        )
)

<script type="text/javascript">
    function showHelp_VideoHelpEvent() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Event/VideoWinEvent',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });

    }
    function GotoFormulaWriterEvent() {
        var record = App.ColFormulaWriterEvent.activeRecord.record;
        openWindowWithPost("/ComputationFormula/Formul", {
            Id: record.data.fldId,
            FieldName: "Event",
            FormulId: record.data.fldFormulId,
            Name: "فرمول " + record.data.fldGroupName + "-" + record.data.fldTypeName
        });
    }

    /*document.addEventListener("visibilitychange", function () {
        alert();
        if (document.hidden) {

        }
        else {
            if (App.Event != undefined) {
                App.Event.queryById('GridEvent').store.load();
            }
        }
    }, false);*/

    function EventSetSize() {
        App.Event.setWidth(App.EventsWin.getWidth());
        var grid = App.Event.queryById('GridEvent');
        grid.setHeight(App.EventsWin.getHeight() - 83);
    }
    function NewEvent() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Event/new',
            params: {
                id: 0
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function EditEvent() {
        var SelectedRow = App.Event.queryById('GridEvent').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/Event/new',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteEvent() {
        var SelectedHeaderRow = App.Event.queryById('GridEvent').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.Mask.show({ msg: 'در حال انجام عملیات...' });
                        Ext.net.DirectMethod.request({
                            url: '/Event/Delete',
                            params: {
                                id: SelectedHeaderRow.data.fldId,
                                __RequestVerificationToken: App.Event.queryById('antiForgeryToken').getValue()
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1) {
                                    ic = Ext.MessageBox.ERROR;
                                }
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.Event.queryById('GridEvent').store.load();
                                Ext.net.Mask.hide();
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function HelpEvent() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Event/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }
</script>