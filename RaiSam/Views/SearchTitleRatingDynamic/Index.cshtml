@model IEnumerable<RaiSam.Models.prs_tblTitleRatingDynamicSelect>
@using Ext.Net;
@using Ext.Net.MVC;
@{
    var X = Html.X();
}

@(Html.X().Window().Modal(true)
                .Width(700).Height(378)
                .Title(" عناوین کلی مدرک ")
                        .ID("SearchTitleRatingDynamic")
            .Closable(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                            Html.X().Toolbar()
                            .Items(
                                    X.Button().Text("انتخاب").Icon(Ext.Net.Icon.ArrowRedo)
                                                    .Listeners(li => li.Click.Handler = "NextSearchTitleRatingDynamic();")
                            )
                        )
                                        .ItemID("GridSearchTitleRatingDynamic").Flex(2)
                    .Height(350)
                       .Store(
                        X.StoreForModel()
                        .RemoteFilter(true)
                        .RemotePaging(true)
                                 .Listeners(li => li.BeforeLoad.Handler = "LoadSearchTitleRatingDynamic();")
                    ).AutoScroll(true)
                    .SelectionModel(
                        X.CheckboxSelectionModel()
                        .Mode(SelectionMode.Multi)
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )


                    .ColumnModel(
                                      Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1),
                               Html.X().Column().DataIndex(Model, m => m.fldTitleFA).Text("عنوان فارسی").Flex(5),
                               Html.X().Column().DataIndex(Model, m => m.fldTitleEN).Text("عنوان انگلیسی").Flex(3),
                                Html.X().Column().DataIndex(Model, m => m.fldTitleGeneral).Text("عنوان کلی").Flex(3)
                    )


            )
        )
)

<script>

    var State = '@ViewBag.State';
    function LoadSearchTitleRatingDynamic() {
        ReplaceArabic();
        Ext.net.DirectMethod.request({
            url: '/SearchTitleRatingDynamic/Read',
            success: function (info) {
                App.SearchTitleRatingDynamic.queryById('GridSearchTitleRatingDynamic').getStore().loadData(info);
                Checked();
            }
        });
    }

    function Checked() {
        var SplitID = DynamicRatingId.split(';');
        for (var i = 0; i < App.SearchTitleRatingDynamic.queryById('GridSearchTitleRatingDynamic').selModel.getStore().getCount() ; i++) {
            var idget = App.SearchTitleRatingDynamic.queryById('GridSearchTitleRatingDynamic').selModel.store.data.items[i].data.fldId;
            for (var j = 0; j < SplitID.length; j++) {
                var id = SplitID[j];
                if (idget == id) {
                    App.SearchTitleRatingDynamic.queryById('GridSearchTitleRatingDynamic').getSelectionModel().select(i, true);
                }
            }
        }
    }



    function NextSearchTitleRatingDynamic() {
        var SelectedTajhizat = new Array();

        var SelectedRow = App.SearchTitleRatingDynamic.queryById('GridSearchTitleRatingDynamic').getSelectionModel().getSelection();
        var count = App.SearchTitleRatingDynamic.queryById('GridSearchTitleRatingDynamic').getSelectionModel().getCount();
        var j = 0;
        if (count != 0) {
            if (State == 1) {
                if (DynamicRatingId != "") {
                    DynamicRatingId = "";
                }
                for (var k = 0; k < SelectedRow.length ; k++)
                    DynamicRatingId = DynamicRatingId + SelectedRow[k].data.fldId + ";";
                Ext.net.DirectMethod.request({
                    url: '/SearchTitleRatingDynamic/AddTitleRatingDynamic',
                    params: {
                        ItemDynamicRatingID: ItemDynamicRatingID,
                        DynamicRatingId: DynamicRatingId
                    },
                    success: function (data) {
                        App.NewItemsDynamicRating.queryById("GridDynamicRating").getStore().loadData(data);

                    }
                });
            }
            App.SearchTitleRatingDynamic.destroy();
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }

    }

</script>  