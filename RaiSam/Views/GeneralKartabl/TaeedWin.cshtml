@using Ext.Net.MVC;
@using Ext.Net.Utilities;
@using Ext.Net;
@{

    var X = Html.X();
}

@(X.Window()
    .Height(300)
    .Width(500)
    .Modal(true)
    .ID("NewTaeedWin")
    .Title("بررسی آیتم")
    .Closable(true)
    .Border(false)
    .Resizable(false)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(Ext.Net.LayoutType.VBox)
    .LayoutConfig(new Ext.Net.VBoxLayoutConfig { Align = Ext.Net.VBoxAlign.Center })
    .ButtonAlign(Ext.Net.Alignment.Center)
    .Buttons(
        Html.X().Button()
            .Text("ذخیره")
            .Icon(Ext.Net.Icon.Disk)
            .Listeners(l => l.Click.Handler = "SaveNewTaeedWin();"),
        Html.X().Button()
            .Text("خروج")
            .Icon(Ext.Net.Icon.BulletCross)
            .OnClientClick("App.NewTaeedWin.destroy();")
    )
    .Items(
        X.FormPanel()
            .Border(false)
            .PaddingSpec("10px 0 10px 0")
            .ItemID("panelActionSH")
            .Layout(Ext.Net.LayoutType.HBox)
                .Items(
                 X.AntiForgeryField().ItemID("AntiForgeryField"),
                X.Label("نوع اقدام: "),
                X.ComboBox()
                    .PaddingSpec("0 0 0 5px")
                    .ItemID("cboActionTypeSH")
                    .AllowBlank(false)
                    .BlankText("لطفاً نوع اقدام مورد نظر را انتخاب نمایید.")
                   
                      
        .RawText("تایید")
        .Value("1")
        .Items(
            X.ListItem()
                    .Text("تایید")
                .Value("1"),
            X.ListItem()
                .Text("عدم تأیید")
                    .Value("0"),
                X.ListItem()
                    .Text("نظر")
                    .Value("2"))
            ),
           
        X.Panel()
            .Border(false)
            .ItemID("panelMsgSH")
            .Listeners(l=>l.Render.Handler="setsizepanelSH()")
            .BodyStyle("background-color:green;")
            .Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.TextArea()
                    .ItemID("TextAreaMsgSH")
                    .AllowBlank(false)
                    .Listeners(l => l.Render.Handler = "App.NewTaeedWin.queryById('TextAreaMsgSH').validate();")
                    .BlankText("لطفاً پیام خود را وارد نمایید"))
    )
)

<script>

    function SaveNewTaeedWin() {
        TextAreaMsgSH = App.NewTaeedWin.queryById('TextAreaMsgSH');
        if (TextAreaMsgSH.validate() == false) {
            return;
        }
    

        App.NewTaeedWin.body.mask('در حال ذخیره سازی...');
        Ext.net.DirectMethod.request({
            url: '/GeneralKartabl/SaveTaeedat',
            params: {
                fldDesc: TextAreaMsgSH.getValue(),
                fldType: App.NewTaeedWin.queryById('cboActionTypeSH').getValue(),
                fldApp_ClientId: '@ViewBag.App_ClientId',
                fldTableId: '@ViewBag.TableId',
                fldFirstContractId: '@ViewBag.contractId',
                CodeFileId:'@ViewBag.CodeFileId',
                __RequestVerificationToken: App.NewTaeedWin.queryById('AntiForgeryField').getValue()
            },
            success: function (data) {
                var ic = Ext.MessageBox.INFO;
                if (data.Er == 1)
                    ic = Ext.MessageBox.ERROR;
                Ext.MessageBox.show({
                    title: data.MsgTitle,
                    msg: data.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK
                });
               
                if (data.Er != 1) {
                   
                    App.NewTaeedWin.destroy();

                    if ('@ViewBag.App_ClientId' == 11)
                        ReloadScheduleContract();
                }

                App.NewTaeedWin.body.mask().hide();
            }
        });
    }

    function setsizepanelSH() {
        
            App.NewTaeedWin.queryById('panelMsgSH').setSize(App.NewTaeedWin.getWidth() - 30, App.NewTaeedWin.getHeight() - 135);
       
    }

  

</script>