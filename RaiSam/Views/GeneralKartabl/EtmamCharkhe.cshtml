@model IEnumerable<RaiSam.Models.prs_tblRegistrationFirstContractSelect>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@{
    var X = Html.X();
}
<script>
    Ext.net.FilterHeader.behaviour.string[0].match = function (recordValue, matchValue) {
        return (Ext.net.FilterHeader.behaviour.getStrValue(recordValue) || "").indexOf(matchValue) > -1;
    };

    Ext.net.FilterHeader.behaviour.string[0].getStrValue = function (value) {
        return value.toString();
    };

    Ext.net.FilterHeader.behaviour.string[0].serialize = function (value) {
        return {
            type: "string",
            op: "*",
            value: value
        };
    };
</script>
<style>
    .titlebold {
        font-weight: bold;
        font-size: 12px;
        color: ThreeDDarkShadow;
    }

    .wrap-lable {
        word-wrap: break-word;
    }
</style>
@(Html.X().Window()
    .Modal(true)
    .ID("EtmamCharkheWin")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(LayoutType.Fit)
        .Listeners(l =>
        {
            l.AfterRender.Handler = "SetSizeEtmamCharkhe()";
            l.Render.Fn = "addKeyMapEtmamCharkhe";
        })
        //  .Title("اتمام چرخه(نام اقدام: " + @ViewBag.EghdamTitle + " )")
                    .Title("اتمام چرخه")
         .ButtonAlign(Ext.Net.Alignment.Center)
                       .Buttons(X.Button().Text("اتمام چرخه").Icon(Ext.Net.Icon.Disk)
                                   .Listeners(l =>
                                   {
                                       l.Click.Handler = "BeforeSave();";

                                   })
                                                           .ItemID("btnSaveEtmamCharkhe")
                                    ,
                                    X.Button().Text("خروج").Icon(Ext.Net.Icon.DoorOut).ToolTip("کلید میانبر Esc")
                                                                   .OnClientClick("App.EtmamCharkheWin.hide();"))
    .Items(
        X.AntiForgeryField().ItemID("antiForgeryToken").Hidden(true),
        X.Panel()
            .Border(false)
            .AutoScroll(true)
            .Layout(LayoutType.VBox)
            .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
            .Items(
             X.FieldSet()
                        .Border(false)
                    .Defaults(new { Margin = 2 })
                        .Layout(LayoutType.HBox)
                    .Items(
                    X.Label("با تایید این مرحله، پرونده از چرخه خارج و وارد لیست قراردادها می شود.")
                    )
                    ,
                            X.FieldSet()
                            .ItemID("Etelaat")
                                .Border(true)
                                .Title("مشخصات اقدام")
                                .Center()
                                .Layout(LayoutType.HBox)
                                .Items(
                                    X.FieldSet()
                                        .Border(false)
                                        .Center()
                                        .Width(800)
                                        .Padding(0)
                                        .Margin(0)
                                        .Layout(LayoutType.VBox)
                                        .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Right })
                                        .Items(
                                            X.FieldSet()
                                                .Layout(LayoutType.HBox)
                                                .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Stretch })
                                                .Border(false)
                                                .Padding(0)
                                                .Width(750)
                                                .Items(
                                                    X.Label()
                                                        .Text("نام کارتابل:")
                                                        .Cls("titlebold"),
                                                    X.Label()
                                                        .Width(250)
                                                        .Text(@ViewBag.cartableTitle)
                                                        .PaddingSpec("0 0 0 5px")
                                                        .Height(18)
                                                            .Cls("wrap-lable"),
                                                        X.Label()
                                                            .Text("نام اقدام:")
                                                            .Cls("titlebold"),
                                                        X.Label()
                                                            .Width(180)
                                                                .Text(@ViewBag.EghdamTitle)
                                                            .Height(18)
                                                            .PaddingSpec("0 0 0 5px")
                                                            .Cls("wrap-lable"),
                                                        X.Label().Hidden(@ViewBag.NameCharkhe == "")
                                                        .Text("نام چرخه:")
                                                        .Cls("titlebold"),
                                                        X.Label().Hidden(@ViewBag.NameCharkhe == "")
                                                        .Width(210)
                                                        .Text(@ViewBag.NameCharkhe)
                                                        .Height(18)
        // .PaddingSpec("0 0 0 5px")
                                                        .Cls("wrap-lable")
                                                    )
                                                    )
                                                    ),
                 X.FieldSet()
                            .Border(true)
                                .Title("مشخصات درخواست")
                                          .ItemID("Single")
                            .Center()
                            .Layout(LayoutType.HBox)
                                .Items(
                                    X.FieldSet()
                                        .Border(false)
                                        .Center()
                                        .Width(800)
                                        .Padding(0)
                                        .Margin(0)
                                        .Layout(LayoutType.VBox)
                                        .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Right })
                                            .Items(
                                                    X.FieldSet()
                                                        .Layout(LayoutType.HBox)
                                                        .LayoutConfig(new HBoxLayoutConfig { Align = HBoxAlign.Stretch })
                                                        .Border(false)
                                                        .Padding(0)
                                                        .Width(725)
                                                        .Items(
                                                            X.Label()
                                                                .Text("عنوان:")
                                                                .Cls("titlebold"),
                                                            X.Label()
                                                                .Width(410)
                                                                .ItemID("NameRequest")
                                                                .Text("")
                                                                .PaddingSpec("0 0 0 5px")
                                                                .Height(18)
                                                                .Cls("wrap-lable")
                                                            )

                                                )
                                        ),
                                        X.FieldSet()
                            .Border(true)
                                .Title("مشخصات قرارداد")
                                          .ItemID("gharadadInfo")
                            .Center()
                                  .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 10 })
                    .Defaults(new { Margin = 2 })
                                .Items(
                                            X.Label("شماره قرارداد:"),
                         X.TextField()
                                 .ItemID("txtShomareContract")
                                .AutoFocus(true)
                            .MaxLength(50)
                            .Width(90)
                        .EnforceMaxLength(true)
                        .AllowBlank(false)//.MaskRe("[1-9 ,),(,ا-ی-آ-ئ-ء]")
                        .BlankText("لطفا شماره قرارداد را وارد کنید.")
     
                                ,
                                     X.Label("/"),
                             X.TextField()
                                 .ItemID("txtShomareContract2")
                                .MaxLength(1)
                                .Width(30)
                            .EnforceMaxLength(true)
                            .AllowBlank(false)
                            .MaskRe("[ا-ی-آ-ئ-ء]")
                            .BlankText("لطفا کاراکتر شماره قرارداد را وارد کنید.")
                                                        ,
                         X.Label("تاریخ قرارداد:"),
                            X.PDateField()
                            .ItemID("txtTarikhContract")
                            .Width(100)
                        .AllowBlank(false)
                            .BlankText("لطفا تاریخ قرارداد را وارد کنید.")
                        .Editable(true)
                        .MaskRe("/[0-9/]/")
                        .MaxLength(10)
                        .MinLength(10)
                        .EnforceMaxLength(true)
                       , X.Label("شماره موافقتنامه:"),
                         X.TextField()
                           //  .ColSpan(3)
                                 .ItemID("txtShomareMovafeghat")
                            .MaxLength(100)
                            .Width(130)
                        .EnforceMaxLength(true)
                            .AllowBlank(true)//.MaskRe("[1-9 ,),(,ا-ی-آ-ئ-ء]")
                            .BlankText("لطفا شماره موافقتنامه را وارد کنید."),
                         X.Label("تاریخ موافقتنامه:"),
                            X.PDateField()
                                    .ItemID("txtTarikhMovafeghat")
                                .Width(100)
                        .AllowBlank(true)
                        .BlankText("لطفا تاریخ موافقتنامه را وارد کنید.")
                        .Editable(true)
                        .MaskRe("/[0-9/]/")
                        .MaxLength(10)
                        .MinLength(10)
                        .EnforceMaxLength(true)
                                        
                                          ),
                                          X.FieldSet()
                                          .ItemID("Group")
                            .Border(true)
                                        .Title("درخواست ها")
        //.Defaults(new { Margin = 2 })
                        .Layout(LayoutType.Fit)
                    .Items(
                             X.GridPanel()
                        .AutoScroll(true)
                        .Frame(true)
                            .ItemID("GridListRequest")
                        .Listeners(l => l.AfterRender.Handler = "LoadSelected()")
                        .Store(
                            X.StoreForModel()
                            .AutoLoad(false)
                                .Proxy(Html.X().AjaxProxy()
                                    .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                                            .Url(Url.Action("ReadRequest"))
                                    .Reader(Html.X().JsonReader().Root("data"))
        // .ExtraParams(ex => ex.Add(new { PersonalLocoId = @ViewBag.PersonalLocoId }))
                            )
                            .PageSize(20000)
                            .RemoteFilter(false)
                            .RemotePaging(false)
                                    .Listeners(l => l.DataChanged.Handler = "App.EtmamCharkheWin.queryById('GridListLocos').selModel.refresh();")
                        )
                             .View(
                                Html.X().GridView()
                             //   .Listeners(l => l.Render.Fn = "createTooltipPersonInfo")
                                .LoadingText("در حال بارگذاری...").RTL(true)
                            )
                        .Plugins(X.FilterHeader().Remote(false))
                            .ColumnModel(
                                            Html.X().RowNumbererColumn(),
                                            Html.X().Column().DataIndex(Model, m => m.fldId).Text("ContractId").Flex(1).Hidden(true),
                                                    Html.X().Column().DataIndex(Model, m => m.fldRequestId).Text("firstکد").Flex(1).Hidden(true),
                                             Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("عنوان").Flex(5).Wrap(true)
                                    )
                        .SelectionModel(
                            Html.X().RowSelectionModel()
                                .Mode(Ext.Net.SelectionMode.Single)
                        )
                            )
                          
                        ,
                X.FieldSet()
                    .Border(true)
                    .Title("توضیحات")
        // .Defaults(new { Margin = 2 })
                        .Layout(LayoutType.Fit)
                    .Items(
                            X.TextArea().Width(330)
                            .ItemID("txtDesc")
                                    .Listeners(l => l.Focus.Handler = "App.EtmamCharkheWin.queryById('txtDesc').el.swallowEvent(['keypress', 'keydown']);")
                        )
        //    ,
        //                X.FieldSet()
        //            .ColSpan(8)
        //            .Border(false)
        //                .ID("FieldSetbtn")
        //            .Listeners(l => l.AfterRender.Handler = "App.FieldSetbtn.setWidth(Ext.getBody().getViewSize().width-680);")
        //            .Layout(LayoutType.VBox)
        //                .LayoutConfig(new VBoxLayoutConfig { Align = VBoxAlign.Center })
        //            .Items(
        //                X.Button()
        //.Text("اتمام چرخه")
        //.Icon(Ext.Net.Icon.Disk)
        //        .Listeners(l => l.Click.Handler = "BeforeSave();")
        //            )

            )
        )
)

<script type="text/javascript">
    function SetSizeEtmamCharkhe() {
        App.EtmamCharkheWin.setSize(870, Ext.getBody().getViewSize().height - 200);
        App.EtmamCharkheWin.queryById("txtDesc").setSize(800);
        /*App.EtmamCharkheWin.queryById("Etelaat").setWidth(Ext.getBody().getViewSize().width - 800 + 20);*/

        if ('@ViewBag.IsGroup' == "True") {
            App.EtmamCharkheWin.queryById("SingleP").hide();
            App.EtmamCharkheWin.queryById("GridListRequest").setSize(800, 200);


        }
        else {
            App.EtmamCharkheWin.queryById("Group").hide();
            LoadPersonInf();
        }
    }
    function LoadSelected() {
        Ext.net.DirectMethod.request({
            url: '/TaiidMarhale/LoadSelectedRequest',
            params: {
                EnterSicleIds: '@ViewBag.EnterSicleIds',
                __RequestVerificationToken: App.EtmamCharkheWin.queryById('antiForgeryToken').getValue()
            },
            success: function (result) {
                App.EtmamCharkheWin.queryById('GridListRequest').store.loadData(result.ListLoco);
                Ext.net.Mask.hide();
            }
        });
    }
    
    function LoadPersonInf() {

        App.EtmamCharkheWin.queryById("NameRequest").setText('@ViewBag.TitleContract');

    }


    function BeforeSave() {
        Ext.MessageBox.show({
            title: "هشدار",
            msg: "آیا برای اتمام چرخه مطمئن هستید؟",
            icon: Ext.MessageBox.WARNING,
            buttons: Ext.MessageBox.YESNO,
            fn: function (btn) {
                if (btn == 'yes') {
                    SaveEtmamCharkhe();
                }
            }
        });

    }
    function SaveEtmamCharkhe() {
        var txtDesc = App.EtmamCharkheWin.queryById('txtDesc');
        var txtShomareContract = App.EtmamCharkheWin.queryById('txtShomareContract');
        var txtShomareContract2 = App.EtmamCharkheWin.queryById('txtShomareContract2');
        var txtTarikhContract = App.EtmamCharkheWin.queryById('txtTarikhContract');
        var txtShomareMovafeghat = App.EtmamCharkheWin.queryById('txtShomareMovafeghat');
        var txtTarikhMovafeghat = App.EtmamCharkheWin.queryById('txtTarikhMovafeghat');

        var grid = App.EtmamCharkheWin.queryById('GridListRequest').getSelectionModel().getStore();
       var ListArray = new Array();

        if ('@ViewBag.IsGroup' == "True") {
            for (var i = 0; i < grid.count() ; i++) {
                ListArray.push({
                    "fldEnterCycleId": grid.data.items[i].data.fldId,
                    "fldDesc": txtDesc.getValue()
                });
            }
        }
        else {
            ListArray.push({
                "fldEnterCycleId": '@ViewBag.EnterSicleIds',
                "fldDesc": txtDesc.getValue()
            });
        }

        App.EtmamCharkheWin.body.mask("در حال انجام عملیات");
        $.ajax({
            type: "POST",
            url: '/EtmamCharkhe/SaveEtmamCharkhe',
            datatype: "json",
            data: {
                Data: JSON.stringify(ListArray),
                fldDesc: txtDesc.getValue(),
                EghdamId: '@ViewBag.EghdamId',
                EnterSicleIds: '@ViewBag.EnterSicleIds',
                cartableId: '@ViewBag.cartableId',
                contractId: '@ViewBag.contractId',
                fldShomareContract: txtShomareContract.getValue() + "/" + txtShomareContract2.getValue(),
                fldTarikhContract: txtTarikhContract.rawValue,
                fldShomareMovafeghat: txtShomareMovafeghat.getValue(),
                fldTarikhMovafeghat: txtTarikhMovafeghat.rawValue,
                __RequestVerificationToken: App.EtmamCharkheWin.queryById('antiForgeryToken').getValue()
            },
            /*contentType: 'application/json',*/
            success: function (result) {
                var ic = Ext.MessageBox.INFO;
                if (result.Er == 1) {
                    ic = Ext.MessageBox.ERROR;
                }
                Ext.MessageBox.show({
                    title: result.MsgTitle,
                    msg: result.Msg,
                    icon: ic,
                    buttons: Ext.MessageBox.OK,
                    fn: function (btn) {
                        if (btn == 'ok') {
                            if (result.Er != 1) {
                                SearchSK();
                                ReloadCountTree();
                                App.EtmamCharkheWin.destroy();
                                /*App.EtmamCharkheWin.queryById('GridListLocos').getStore().load();*/
                            }
                        }
                    }
                });

                App.EtmamCharkheWin.body.mask().hide();
            },
            failure: function () {
            }
        });

    }
   

    var addKeyMapEtmamCharkhe = function (cmp) {
        this.keyMap = new Ext.util.KeyMap({
            target: cmp.getEl(),
            binding: [{
                key: [13, 9], /*Ext.EventObject.ENTER,*/
                fn: function (key, e) {
                    if (e.getKey() == 9) {
                        e.stopEvent();
                    }
                    var keyfield = App.EtmamCharkheWin.queryById(Ext.getCmp((Ext.Element.getActiveElement()).name).itemId);
                    var nextfld;
                    if (keyfield.itemId == "txtTarikhMovafeghat") {
                        nextfld = App.EtmamCharkheWin.queryById('txtDesc');
                    }
                    else {
                        nextfld = keyfield.nextSibling().nextSibling();
                        nextfld.selectText();
                    }
                    nextfld.focus();
                    nextfld.selectText();
                }
            }]
        });
    }
</script>
