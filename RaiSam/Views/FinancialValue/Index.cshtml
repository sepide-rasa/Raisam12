
@model RaiSam.Models.FinancialValue
@using Ext.Net.MVC;
@{

    var X = Html.X();
}



@(X.Panel().Border(false).Listeners(li => li.AfterRender.Handler = "FinancialValueMap() ;")
    .Title("ارزش مالی سرمایه گذاری")
                .ID("FinancialValue")
            .Closable(true)
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
            .Items(
                X.Panel().Border(false)
                .Border(false)
                .AutoScroll(true)
                .KeyMap(Html.X().KeyMap()
                        .ID("FinancialValueMap")
                    .Target("={Ext.isGecko ? Ext.getDoc() : Ext.getBody()}")
                    .Binding(b =>
                    {
                        b.Add(Html.X().KeyBinding()
                            .KeysString(((int)Ext.Net.KeyCode.F8).ToString())
                            .Handler("if(App.FinancialValue.itemId=='GridPanel')NewFinancialValue(); ")
                        );
                        b.Add(Html.X().KeyBinding()
                            .KeysString(((int)Ext.Net.KeyCode.F2).ToString())
                            .Handler("EditFinancialValue(); ")
                        );
                        b.Add(Html.X().KeyBinding()
                            .KeysString(((int)Ext.Net.KeyCode.F9).ToString())
                            .Handler("DeleteFinancialValue(); ")
                        );

                    }))
                .Items(
                                             X.TabPanel().ID("FinancialValueTab")
                        .AutoScroll(true)//.Height(540)
                        .Items(
                        X.Panel().ItemID("GridPanel")
                                        .Title("ارزش مالی سرمایه گذاری")
                        .Items(
                    X.GridPanel().AutoScroll(true)
                        .TopBar(
                        Html.X().Toolbar()
                        .Items(
                            X.Button().Text("جدید").Icon(Ext.Net.Icon.Add).ToolTip("کلید میانبر F8")
                                                            .Listeners(li => li.Click.Handler = "NewFinancialValue();"),
                            X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).ToolTip("کلید میانبر F2")
                                                            .Listeners(Li => Li.Click.Handler = "EditFinancialValue();"),
                            X.Button().Text("حذف").Icon(Ext.Net.Icon.Delete).ToolTip("کلید میانبر F9")
                                .Listeners(de =>
                                {
                                    de.Click.Handler = "if (App.FinancialValue.queryById('GridFinancialValue').selModel.getLastSelected() == null) {Ext.MessageBox.show({ title: 'خطا', msg: 'لطفا یک سطر را انتخاب کنید',icon: Ext.MessageBox.ERROR,buttons: Ext.MessageBox.OK});return false;}else DeleteFinancialValue();";
                                })
                                ,   X.SplitButton()
                                    .Text("راهنما")
                                    .Icon(Ext.Net.Icon.Help)
                                    .Menu(X.Menu()
                                    .Items(
                                    X.MenuItem()
                                                .Text("راهنما متنی")
                                                .Icon(Ext.Net.Icon.TextPaddingTop)
                                                        .Listeners(l => l.Click.Handler = "HelpFinancialValue()")
                                                .ItemID("btnshowHelpFinancialValue"),
                                        X.MenuItem()
                                                .Text("راهنما تصویری")
                                                .Icon(Ext.Net.Icon.PlayBlue)
                                                    .Listeners(l => l.Click.Handler = "showHelp_VideoFinancialValue()")

                                )
                            )
                        )
                    )
                                .ItemID("GridFinancialValue").Flex(2)
                    .BottomBar(X.PagingToolbar())
                    .Height(540)
        //.ColumnWidth(0.6)
        //    .Layout(Ext.Net.LayoutType.Column)
                                            .Listeners(l => l.AfterRender.Handler = "var grid=App.FinancialValue.queryById('GridFinancialValue');grid.setHeight(App.BasicInfWin.height-112);")
                    .Store(
                                X.StoreFor(Model.Header)
                        .Proxy(Html.X().AjaxProxy()
                            .Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                        )
                        .PageSize(20)
                        .RemoteFilter(true)
                        .RemotePaging(true)
             .Listeners(l => l.DataChanged.Handler = "App.FinancialValue.queryById('GridFinancialValue').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                    .Plugins(X.FilterHeader().Remote(true))
                        .Plugins(
                                                            X.RowExpander()
                                                                            .Listeners(l => l.BeforeExpand.Fn = "loadGridDetail")
                                                                .Component(
                                                                    X.GridPanel()
                                                                        .AutoScroll(true)
                                                                        .ForceFit(true)
                                                                        .Border(true)
                                                                        .Height(100)
                                                                                            .ItemID("GridDetail")
        //.Listeners(l => l.ItemMouseEnter.Fn = "createTooltipMasirInDetailsKilometrazh2")
                                                                        .Store(
                                                                                    X.StoreFor(Model.Detail)
                                                                                .AutoLoad(false)
                                                                                .Proxy(Html.X().AjaxProxy()
                                                                                                .Url(Url.Action("ReadDetail"))
                                                                                    .Reader(Html.X().JsonReader().Root("data"))
                                                                            )
                                                                            .PageSize(10)
                                                                            .RemoteFilter(true)
                                                                            .RemotePaging(true)
                                                                        )
                                                                            .ViewConfig(
                                                                                X.GridView()
                                                                                    .LoadingText("در حال بارگذاری...").RTL(true)
                                                                            )
                                                                        .ColumnModel(
                                                                             Html.X().RowNumbererColumn(),
                                                                                                    Html.X().Column().DataIndex(Model.Detail, m => m.fldHeaderId).Text("fldHeaderId").Hidden(true).Flex(1),
        // Html.X().Column().DataIndex(Model.Detail, m => m.fldNameCompany).Text("نام شرکت").Wrap(true).Flex(7),
                                                                                                        Html.X().Column().DataIndex(Model.Detail, m => m.fldTypeVagon).Text("عناوین امتیاز").Wrap(true).Flex(10),
                                                Html.X().Column().DataIndex(Model.Detail, m => m.fldMablaghReyali).Text("مبلغ ریالی").Wrap(true).Flex(3),
                                                Html.X().Column().DataIndex(Model.Detail, m => m.fldMablaghArzi).Text("مبلغ ارزی").Wrap(true).Flex(3)
                                                                        )
                                                                        .SelectionModel(
                                                                            Html.X().RowSelectionModel()
                                                                                .Mode(Ext.Net.SelectionMode.Single)
                                                                        )
                                                                )
                                                        )
                    .ColumnModel(
                                  Html.X().Column().DataIndex(Model.Header, m => m.fldId).Text("کد ").Flex(2).Hidden(true),
                                      Html.X().Column().DataIndex(Model.Header, m => m.fldTarikh).Text("تاریخ").Flex(2),
                                          Html.X().Column().DataIndex(Model.Header, m => m.fldNameTypeVogon).Text("انواع واگن").Flex(2)
                    )
                    .SelectionModel(
                        Html.X().RowSelectionModel()
                            .Mode(Ext.Net.SelectionMode.Single)
                    )

                ))
            )
        )
)

<script type="text/javascript">
    var loadGridDetail = function (rowExpanderr, record) {
        rowExpanderr.component.getStore().getProxy().setExtraParam("fldHeaderId", record.data.fldId);
        rowExpanderr.component.getStore().load();
    };
    function FinancialValueMap() {
        ReplaceArabic();
        var k = new Ext.KeyMap(
            document,
            [{
                target: Ext.get('FinancialValue'),
                scope: this,
                key: [119],
                fn: function (key, event) {
                    if (App.FinancialValue && App.NewFinancialValue) {
                        if (App.NewFinancialValue.active == false)
                            NewFinancialValue();
                    }
                    else if (App.FinancialValue && !App.NewFinancialValue)
                        NewFinancialValue();
                }
            },
            {
                target: App.FinancialValue.getTargetEl(),
                scope: this,
                key: [113],
                fn: function (key, event) {
                    if (App.FinancialValue && App.NewFinancialValue) {
                        if (App.FinancialValue.active == false)
                            EditFinancialValue();
                    }
                    else if (App.FinancialValue && !App.NewFinancialValue)
                        EditFinancialValue();
                }
            },
            {
                target: App.FinancialValue.getTargetEl(),
                scope: this,
                key: [120],
                fn: function (key, event) {
                    if (App.FinancialValue && App.NewFinancialValue) {
                        if (App.NewFinancialValue.active == false)
                            DeleteFinancialValue();
                    }
                    else if (App.FinancialValue && !App.NewFinancialValue)
                        DeleteFinancialValue();
                }
            }]
            )
    }
    function NewFinancialValue() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/FinancialValue/new',
            params: {
                id: 0,
                containerId: "BasicInfTab"
            },
            success: function () {
                Ext.net.Mask.hide();
            }
        });
    }
    function EditFinancialValue() {
        var SelectedRow = App.FinancialValue.queryById('GridFinancialValue').selModel.getLastSelected();

        if (SelectedRow != null) {
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/FinancialValue/new',
                params: {
                    id: SelectedRow.data.fldId,
                    containerId: "BasicInfTab"
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }

    function DeleteFinancialValue() {
        var SelectedHeaderRow = App.FinancialValue.queryById('GridFinancialValue').selModel.getLastSelected();
        if (SelectedHeaderRow != null) {
            Ext.MessageBox.show({
                title: "هشدار",
                msg: "آیا برای حذف مطمئن هستید؟",
                icon: Ext.MessageBox.WARNING,
                buttons: Ext.MessageBox.YESNO,
                fn: function (btn) {
                    if (btn == 'yes') {
                        Ext.net.DirectMethod.request({
                            url: '/FinancialValue/DeleteFinancialValue',
                            params: {
                                id: SelectedHeaderRow.data.fldId
                            },
                            success: function (data) {
                                var ic = Ext.MessageBox.INFO;
                                if (data.Er == 1)
                                    ic = Ext.MessageBox.ERROR;
                                Ext.MessageBox.show({
                                    title: data.MsgTitle,
                                    msg: data.Msg,
                                    icon: ic,
                                    buttons: Ext.MessageBox.OK
                                });
                                App.FinancialValue.queryById('GridFinancialValue').store.load()
                            }
                        });
                    }
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function HelpFinancialValue() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/FinancialValue/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });
    }

    function showHelp_VideoFinancialValue() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/FinancialValue/VideoWinFinancialValue',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });

    }
</script>
