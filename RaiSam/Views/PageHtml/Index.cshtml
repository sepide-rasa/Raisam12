@model IEnumerable<RaiSam.Models.prs_tblPageHtmlSelect>
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using Ext.Net.Utilities;
@{

    var X = Html.X();
}

<style>
    .margincommandInfo {
        margin: 0 0 0 12px !important;
    }
</style>
@(X.Window()
    .Maximized(true)
    .Listeners(l => l.AfterRender.Handler = "PageHtmlSetSize()")
    .ID("PageHtml")
    .Closable(true)
    .Maximizable(true)
    .Minimizable(true)
    .Height(500)
    .Title("صفحات HTML")
    .AutoScroll(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Items(
        X.AntiForgeryField()
                .ItemID("antiForgeryToken")
                .Hidden(true),
        X.GridPanel()
            .AutoScroll(true)
            .Border(false)
            .ItemID("GridPageHtml")
            .TopBar(
                Html.X().Toolbar()
                .Items(
                X.Button().Text("ویرایش").Icon(Ext.Net.Icon.Pencil).ToolTip("کلید میانبر F2")
                            .Listeners(Li => Li.Click.Handler = "EditPageHtml();")
                            , X.SplitButton()
                            .Text("راهنما")
                            .Icon(Ext.Net.Icon.Help)
                            .Menu(X.Menu()
                            .Items(
                            X.MenuItem()
                                        .Text("راهنما متنی")
                                        .Icon(Ext.Net.Icon.TextPaddingTop)
                                                        .Listeners(l => l.Click.Handler = "HelpPageHtml()"),
                                X.MenuItem()
                                        .Text("راهنما تصویری")
                                        .Icon(Ext.Net.Icon.PlayBlue)
                                                .Listeners(l => l.Click.Handler = "showHelp_VideoPageHtml()")

                        )
                    )
                )
                )
            .Store(
                X.StoreForModel()
                    .Listeners(l => l.BeforeLoad.Handler = "App.PageHtml.queryById('GridPageHtml').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.PageHtml.queryById('antiForgeryToken').getValue());")
                    .Proxy(Html.X().AjaxProxy()
                        .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                        .Url(Url.Action("Read"))
                        .Reader(Html.X().JsonReader().Root("data"))
                    )
                    .PageSize(25)
                    .RemoteFilter(true)
                    .RemotePaging(true)
                    .Listeners(l => l.DataChanged.Handler = "App.PageHtml.queryById('GridPageHtml').selModel.refresh();")
            )
            .View(
                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
            )
            .Plugins(X.FilterHeader().Remote(true))
            .ColumnModel(
                Html.X().RowNumbererColumn(),
                    Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                Html.X().Column().DataIndex(Model, m => m.fldTitle).Text("عنوان").Flex(1).Wrap(true),
                Html.X().Column().DataIndex(Model, m => m.fldMasir).Text("مسیر").Flex(1).Wrap(true)
            )
            )
)

<script type="text/javascript">
    function PageHtmlSetSize() {
        var grid = App.PageHtml.queryById('GridPageHtml');
        grid.setHeight(App.PageHtml.height - 35);
        Ext.net.Mask.hide();
    }
    function EditPageHtml() {
        var SelectedRow = App.PageHtml.queryById('GridPageHtml').selModel.getLastSelected();

        if (SelectedRow != null) {
            App.PageHtml.body.mask("در حال بارگذاری...");
            Ext.net.DirectMethod.request({
                url: '/PageHtml/new',
                params: {
                    id: SelectedRow.data.fldId
                },
                success: function () {
                    App.PageHtml.body.mask().hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا یک سطر را انتخاب کنید",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function HelpPageHtml() {
        App.PageHtml.body.mask("در حال بارگذاری...");
        Ext.net.DirectMethod.request({
            url: '/PageHtml/Help',
            success: function (data) {
                App.PageHtml.body.mask().hide();
            }
        });
    }
    function showHelp_VideoPageHtml() {
        App.PageHtml.body.mask("در حال بارگذاری...");
        Ext.net.DirectMethod.request({
            url: '/PageHtml/VideoWinPageHtml',
            success: function (data) {
                App.PageHtml.body.mask().hide();
            }
        });
    }
</script>