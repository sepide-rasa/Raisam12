@model IEnumerable<RaiSam.Models.prs_tblErrorSelect>
@using Ext.Net.MVC;
@{

    var X = Html.X();
}

@(X.Panel()
    .Border(false)
    .Listeners(li => li.AfterRender.Handler = "ErrorSetSize();")
    .Title("خطاهای رخ داده ")
    .ID("Error")
    .Closable(true)
    .CloseAction(Ext.Net.CloseAction.Destroy)
    .Layout(Ext.Net.LayoutType.Fit)
    .Items(
            X.AntiForgeryField()
                .ItemID("antiForgeryToken")
                .Hidden(true),
        X.GridPanel()
            .TopBar(
                    Html.X().Toolbar()
                    .Items(
                        X.SplitButton()
                                .Text("راهنما")
                                .Icon(Ext.Net.Icon.Help)
                                .Menu(X.Menu()
                                .Items(
                                X.MenuItem()
                                            .Text("راهنما متنی")
                                            .Icon(Ext.Net.Icon.TextPaddingTop)
                                                        .Listeners(l => l.Click.Handler = "HelpError()"),
                                    X.MenuItem()
                                            .Text("راهنما تصویری")
                                            .Icon(Ext.Net.Icon.PlayBlue)
                                                .Listeners(l => l.Click.Handler = "showHelp_VideoError()")

                            )
                        )
                    )
                )
            .AutoScroll(true)
            .ItemID("GridError")
            .BottomBar(X.PagingToolbar())
            .Store(
                X.StoreForModel()
                                .Listeners(l => l.BeforeLoad.Handler = "App.Error.queryById('GridError').getStore().getProxy().setExtraParam('__RequestVerificationToken', App.Error.queryById('antiForgeryToken').getValue());")
                    .Proxy(Html.X().AjaxProxy()
                        .ActionMethods(l => l.Read = Ext.Net.HttpMethod.POST)
                        .Url(Url.Action("Read"))
                        .Reader(Html.X().JsonReader().Root("data"))
                        )
                    .PageSize(20)
                    .RemoteFilter(true)
                    .RemotePaging(true)
            )
            .View(
                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
            )
            .Plugins(X.FilterHeader().Remote(true))
            .ColumnModel(
                Html.X().RowNumbererColumn(),
                Html.X().Column().DataIndex(Model, m => m.fldId).Text("کد خطا").Flex(1),
                Html.X().Column().DataIndex(Model, m => m.fldTarikhShamsi).Text("تاریخ").Flex(2).Wrap(true),
                Html.X().Column().DataIndex(Model, m => m.fldName_Family).Text("نام کاربر").Flex(4).Wrap(true),
                Html.X().Column().DataIndex(Model, m => m.fldMatn).Text("متن خطا").Flex(10).Wrap(true)
        //Html.X().Column().DataIndex(Model, m => m.fldDesc).Text("توضیحات").Flex(7).Wrap(true)
            )
            .SelectionModel(
                Html.X().RowSelectionModel()
                    .Mode(Ext.Net.SelectionMode.Single)
            )
        )
)
<script type="text/javascript">
    function HelpError() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Error/Help',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });

    }
    function showHelp_VideoError() {
        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: '/Error/VideoWinError',
            success: function (data) {
                Ext.net.Mask.hide();
            }
        });

    }
    function ErrorSetSize() {
        App.Error.setWidth(App.BasicInfWin.getWidth());
        App.Error.queryById('GridError').setHeight(App.BasicInfWin.getHeight() - 83);
    }

</script>