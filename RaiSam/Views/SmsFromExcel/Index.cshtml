@model RaiSam.Models.ListSms
@using Ext.Net.MVC
@using Hogaf.ExtNet.UX
@using Ext.Net;
@using Ext.Net.Utilities;
@{
    var X = Html.X();
}


@(X.Window().Maximized(true)
                .ID("SmsFromExcel")//.Listeners(l => l.AfterRender.Handler = "ChangeType()")
            .Closable(true)
            .Height(500)
                .Title("ارسال پیامک")
            .AutoScroll(true)
            .CloseAction(Ext.Net.CloseAction.Destroy)
        //.Layout(Ext.Net.LayoutType.Fit)
            .Items(
                X.FormPanel().Border(false)
                .LayoutConfig(new Ext.Net.TableLayoutConfig { Columns = 4 })
                    .Defaults(new { Margin = 5 })
                .Items(
                                 X.ComboBox()
                        .ItemID("CboType")
                    .Editable(false)
                    .TypeAhead(true)
                     .Width(200)
                        .BlankText("نوع فایل")
                    .QueryMode(DataLoadMode.Local)
                    .TriggerAction(TriggerAction.All)
                    .Items(
                            new ListItem("فایل لیست شرکت ها(csv)", "1"),
                            new ListItem("فایل لیست شماره ها(csv)", "3"),
                        new ListItem("فایل شماره تلفن ها(txt)", "2")

                                                )
                     .SelectedItems(new { Value = "1" })
                         .Listeners(l =>
                         {
                             l.Select.Handler = "ChangeType()";
                             l.AfterRender.Handler = "ChangeType()";
                         })
                ,
              X.FileUploadField()
                    .FieldStyle("direction:ltr;")
                .ID("FileUploadField1")
                .ButtonOnly(true).ButtonText("انتخاب فایل(csv)")
                .DirectEvents(l =>
                        {
                            l.Change.Action = "Upload";
                            l.Change.Success = "hideprogress();";
                        })
                .Listeners(l => l.Change.Fn = "showFile")
                .Icon(Ext.Net.Icon.DiskUpload)
,
              X.FileUploadField()
                    .FieldStyle("direction:ltr;")
                .ID("FileUploadField2")
                .ButtonOnly(true).ButtonText(" انتخاب فایل(txt)")
                .DirectEvents(l =>
                        {
                            l.Change.Action = "Upload2";
                            l.Change.Success = "hideprogress();";
                        })
                .Listeners(l => l.Change.Fn = "showFile2")
                .Icon(Ext.Net.Icon.DiskUpload)
                ,
                      X.FileUploadField()
                        .FieldStyle("direction:ltr;")
                    .ID("FileUploadField3")
                    .ButtonOnly(true).ButtonText(" انتخاب فایل(csv)")
                    .DirectEvents(l =>
                            {
                                l.Change.Action = "Upload3";
                                l.Change.Success = "hideprogress();";
                            })
                    .Listeners(l => l.Change.Fn = "showFile3")
                    .Icon(Ext.Net.Icon.DiskUpload)
                        , X.Container().Content(@<center><div id="fi-button-msg" style="display:none; width:210px;height:25px"></div></center>)

,X.TextArea().ItemID("MatnPayam").EmptyText("متن پیام را بنویسید").Width(700)
                    )
                    ,
                    X.Panel().Border(false)
                .Border(false)
                .ID("pnlGrid")
                .AutoScroll(true)
            .Layout(Ext.Net.LayoutType.Fit)
                    .Listeners(l => l.AfterRender.Handler = "App.pnlGrid.setHeight(Ext.getBody().getViewSize().height-70);")
                .Items(

                    X.GridPanel().AutoScroll(true)
                         .TopBar(
                            Html.X().Toolbar()
                            .Items(
                                X.Button().Text("ارسال پیامک و ایمیل").Icon(Ext.Net.Icon.EmailGo)
                                            .Listeners(li => li.Click.Handler = "SendMsg();")
                            )
                        )
                      .ItemID("GridSmsFromExcel").Flex(2)
                   // .BottomBar(X.PagingToolbar())
                   // .Height(600)
        //.ColumnWidth(0.6)
        //.Layout(Ext.Net.LayoutType.Column)
                    .Store(
                        //X.StoreForModel()
                                 X.StoreFor(Model.ListCompany)
                        .AutoLoad(false)
                        .Proxy(Html.X().AjaxProxy()

                            //.Url(Url.Action("Read"))
                            .Reader(Html.X().JsonReader().Root("data"))

                            )
                        .PageSize(2000)
                        .RemoteFilter(true)
                        .RemotePaging(true)
                // .Listeners(l => l.DataChanged.Handler = "var grid=App.SmsFromExcel.queryById('GridSmsFromExcel');grid.setHeight(App.SmsFromExcel.height-500);App.SmsFromExcel.queryById('GridSmsFromExcel').selModel.refresh();")
                    )
                    .View(
                        Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                    )
                  //  .Plugins(X.FilterHeader().Remote(true))
                    .ColumnModel(
                     Html.X().RowNumbererColumn(),
                                    Html.X().Column().DataIndex(Model.ListCompany, m => m.fldId).Text("کد").Flex(1).Hidden(true),
                                        Html.X().Column().DataIndex(Model.ListCompany, m => m.fldFirstRegisterUser).Text("کد").Flex(1).Hidden(true),
        //Html.X().ImageCommandColumn().DataIndex(Model, m => m.fldSms).Listeners(l => l.Command.Handler = "SendSms(record);").Renderer("ColorSms")
        //.Flex(3).Commands(Html.X().ImageCommand().CommandName("InfoShareholder")),
                                Html.X().Column().DataIndex(Model.ListCompany, m => m.fldFullName).Text("نام شرکت").Flex(10),
                                Html.X().Column().DataIndex(Model.ListCompany, m => m.fldName_Family).Text("نام نماینده").Flex(5),
                                Html.X().Column().DataIndex(Model.ListCompany, m => m.fldMobile).Text("موبایل نماینده").Flex(5),
                                Html.X().Column().DataIndex(Model.ListCompany, m => m.fldEmail).Text("ایمیل نماینده").Flex(5),
                                Html.X().Column().DataIndex(Model.ListCompany, m => m.NameModirAmel).Text("نام مدیرعامل").Flex(5),
                                Html.X().Column().DataIndex(Model.ListCompany, m => m.fldMobileModirAmel).Text("موبایل مدیرعامل").Flex(5),
                                Html.X().Column().DataIndex(Model.ListCompany, m => m.fldEmailCompany).Text("ایمیل مدیرعامل").Flex(5)
                    )
                         .SelectionModel(
                            Html.X().CheckboxSelectionModel()
                                .Mode(Ext.Net.SelectionMode.Multi).CheckOnly(true)
                        )

                )
                         ,
                            X.Panel().Border(false)
                        .Border(false)
                        .ID("pnlGrid2")
                        .AutoScroll(true)
                    .Layout(Ext.Net.LayoutType.Fit)
                            .Listeners(l => l.AfterRender.Handler = "App.pnlGrid2.setHeight(Ext.getBody().getViewSize().height-70);")
                        .Items(

                            X.GridPanel().AutoScroll(true)
                                 .TopBar(
                                    Html.X().Toolbar()
                                    .Items(
                                        X.Button().Text("ارسال").Icon(Ext.Net.Icon.EmailGo)
                                                    .Listeners(li => li.Click.Handler = "SendMsg2();")
                                    )
                                )
                              .ItemID("GridSmsFromExcel2").Flex(2)
                        //    .BottomBar(X.PagingToolbar())
        // .Height(600)
        //.ColumnWidth(0.6)
        //.Layout(Ext.Net.LayoutType.Column)
                            .Store(
                                        X.StoreFor(Model.SMSEmailCach)
                                .AutoLoad(false)
                                .Proxy(Html.X().AjaxProxy()

                                    //.Url(Url.Action("Read"))
                                    .Reader(Html.X().JsonReader().Root("data"))

                                    )
                                .PageSize(20000)
                                .RemoteFilter(true)
                                .RemotePaging(true)
        // .Listeners(l => l.DataChanged.Handler = "var grid=App.SmsFromExcel.queryById('GridSmsFromExcel');grid.setHeight(App.SmsFromExcel.height-500);App.SmsFromExcel.queryById('GridSmsFromExcel').selModel.refresh();")
                            )
                            .View(
                                Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                            )
        //  .Plugins(X.FilterHeader().Remote(true))
                            .ColumnModel(
                                Html.X().RowNumbererColumn(),
                                            Html.X().Column().DataIndex(Model.SMSEmailCach, m => m.fldNameShakhs).Text("نام").Flex(5),
                                            Html.X().Column().DataIndex(Model.SMSEmailCach, m => m.fldShMobile).Text("موبایل ").Flex(5),
                                            Html.X().Column().DataIndex(Model.SMSEmailCach, m => m.fldMatn).Text("متن").Flex(15)
                            )
                                 .SelectionModel(
                                    Html.X().CheckboxSelectionModel()
                                        .Mode(Ext.Net.SelectionMode.Multi).CheckOnly(true)
                                )

                        )
                            ,
                                X.Panel().Border(false)
                            .Border(false)
                            .ID("pnlGrid3")
                            .AutoScroll(true)
                        .Layout(Ext.Net.LayoutType.Fit)
                                .Listeners(l => l.AfterRender.Handler = "App.pnlGrid3.setHeight(Ext.getBody().getViewSize().height-115);")
                            .Items(

                                X.GridPanel().AutoScroll(true)
                                     .TopBar(
                                        Html.X().Toolbar()
                                        .Items(
                                            X.Button().Text("ارسال").Icon(Ext.Net.Icon.EmailGo)
                                                        .Listeners(li => li.Click.Handler = "SendMsg3();")
                                        )
                                    )
                                  .ItemID("GridSmsFromExcel3").Flex(2)
                              //  .BottomBar(X.PagingToolbar())
        // .Height(600)
        //.ColumnWidth(0.6)
        //.Layout(Ext.Net.LayoutType.Column)
                                .Store(
                                            X.StoreFor(Model.SMSEmailCach)
                                    .AutoLoad(false)
                                    .Proxy(Html.X().AjaxProxy()

                                        //.Url(Url.Action("Read"))
                                        .Reader(Html.X().JsonReader().Root("data"))

                                        )
                                    .PageSize(20000)
                                    .RemoteFilter(true)
                                    .RemotePaging(true)
        // .Listeners(l => l.DataChanged.Handler = "var grid=App.SmsFromExcel.queryById('GridSmsFromExcel');grid.setHeight(App.SmsFromExcel.height-500);App.SmsFromExcel.queryById('GridSmsFromExcel').selModel.refresh();")
                                )
                                .View(
                                    Html.X().GridView().LoadingText("در حال بارگذاری...").RTL(true)
                                )
        //  .Plugins(X.FilterHeader().Remote(true))
                                .ColumnModel(
                                    Html.X().RowNumbererColumn(),
                                                Html.X().Column().DataIndex(Model.SMSEmailCach, m => m.fldNameShakhs).Text("نام").Flex(5),
                                                Html.X().Column().DataIndex(Model.SMSEmailCach, m => m.fldShMobile).Text("موبایل ").Flex(15).Editor(X.TextField())
                                )
                                     .SelectionModel(
                                        Html.X().CheckboxSelectionModel()
                                            .Mode(Ext.Net.SelectionMode.Multi).CheckOnly(true)
                                        )
                                        .Plugins(
                                    Html.X().CellEditing()
                            )

                            )
            )
)


<script type="text/javascript">

    var fileId = 0;
    var Mojaz = 0;
    var sizee = 0;
    var EndUpload = false;

    var Check = setInterval(CheckEnd, 1000);

    function CheckEnd() {
        if (EndUpload == true) {
            Ext.MessageBox.hide();
           /* Ext.Msg.alert('عملیات موفق', 'فایل با موفقیت آپلود شد.');*/

            Ext.MessageBox.show({
                title: 'عملیات موفق',
                msg: 'فایل با موفقیت آپلود شد.',
                icon: Ext.MessageBox.INFO,
                buttons: Ext.MessageBox.OK,
                fn: function (btn) {
                    if (btn == 'ok') {
                        ReloadGrid();
                    }
                }
            });
            clearInterval(CheckEnd);
            EndUpload = false;
        }
    }
    var showFile = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        var el = Ext.get('fi-button-msg');
        if (v) {
            showProgressBar();
            if (v.split('.').pop().toLowerCase() == "csv"  ) {
                Mojaz = 1;
                if (document.getElementById(id).files[0].size <= 1024000000) {
                    sizee = 1;
                }
                if (sizee == 1) {
                    el.update('<b>فایل انتخاب شده:</b> ' + v);
                }
                else {
                    el.update("");
                }

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
            else {
                el.update("");
            }
        }
    };
    var showFile2 = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        var el = Ext.get('fi-button-msg');
        if (v) {
            showProgressBar();
            /*if (v.split('.').pop().toLowerCase() == "xlsx" || v.split('.').pop().toLowerCase() == "xls") {*/
                if (v.split('.').pop().toLowerCase() == "txt" ) {
                Mojaz = 1;
                if (document.getElementById(id).files[0].size <= 1024000000) {
                    sizee = 1;
                }
                if (sizee == 1) {
                    el.update('<b>فایل انتخاب شده:</b> ' + v);
                }
                else {
                    el.update("");
                }

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
            else {
                el.update("");
            }
        }
    };
    var showFile3 = function (fb, v) {
        var id = fb.fileInputEl.dom.id;
        var el = Ext.get('fi-button-msg');
        if (v) {
            showProgressBar();
            /*if (v.split('.').pop().toLowerCase() == "xlsx" || v.split('.').pop().toLowerCase() == "xls") {*/
            if (v.split('.').pop().toLowerCase() == "csv") {
                Mojaz = 1;
                if (document.getElementById(id).files[0].size <= 1024000000) {
                    sizee = 1;
                }
                if (sizee == 1) {
                    el.update('<b>فایل انتخاب شده:</b> ' + v);
                }
                else {
                    el.update("");
                }

                if (!el.isVisible()) {
                    el.slideIn('t', {
                        duration: .2,
                        easing: 'easeIn',
                        callback: function () {
                            el.highlight();
                        }
                    });
                } else {
                    el.highlight();
                }
            }
            else {
                el.update("");
            }
        }
    };
    function hideprogress() {
        if (Mojaz == 1 && sizee == 1) {
            EndUpload = true;
        }
        Mojaz = 0;
        sizee = 0;
       /* ReloadGrid();*/
    }

    function showProgressBar() {
        Ext.MessageBox.show({
            msg: 'لطفاً منتظر باشید',
            progressText: 'در حال آپلود فایل...',
            width: 300,
            wait: true,
            waitConfig:
            {
                interval: 200,
                text: 'در حال آپلود فایل...',
                scope: this
            }
        });
    }
    function ChangeType() {
        var MatnPayam = App.SmsFromExcel.queryById("MatnPayam");

        var CboType = App.SmsFromExcel.queryById("CboType");
        var FileUploadField1 = App.SmsFromExcel.queryById("FileUploadField1");
        var pnlGrid = App.SmsFromExcel.queryById("pnlGrid");
        var FileUploadField2 = App.SmsFromExcel.queryById("FileUploadField2");
        var pnlGrid2 = App.SmsFromExcel.queryById("pnlGrid2");
        var FileUploadField3 = App.SmsFromExcel.queryById("FileUploadField3");
        var pnlGrid3 = App.SmsFromExcel.queryById("pnlGrid3");


        if (CboType.getValue() == "1") {
            FileUploadField2.hide();
            FileUploadField3.hide();
            FileUploadField1.show();
            pnlGrid.show();
            pnlGrid2.hide();
            pnlGrid3.hide();
            MatnPayam.hide();
        }
        else if (CboType.getValue() == "2") {
            FileUploadField2.show();
            FileUploadField3.hide();
            FileUploadField1.hide();
            pnlGrid.hide();
            pnlGrid2.show();
            pnlGrid3.hide();
            MatnPayam.hide();
        }
        else if (CboType.getValue() == "3") {
            FileUploadField3.show();
            FileUploadField2.hide();
            FileUploadField1.hide();
            pnlGrid.hide();
            pnlGrid3.show();
            pnlGrid2.hide();
            MatnPayam.show();
        }
    }
    function ReloadGrid() {
        var CboType = App.SmsFromExcel.queryById("CboType");
        var URL = '/SmsFromExcel/ReloadCompany';
        if (CboType.getValue() == "2")
            URL = '/SmsFromExcel/ReloadTel';
        else if (CboType.getValue() == "3")
            URL = '/SmsFromExcel/ReloadTelCompany';

        Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
        Ext.net.DirectMethod.request({
            url: URL,
            success: function (data) {
                if (CboType.getValue() == "1")
                    App.SmsFromExcel.queryById("GridSmsFromExcel").getStore().loadData(data);
                else if (CboType.getValue() == "2")
                    App.SmsFromExcel.queryById("GridSmsFromExcel2").getStore().loadData(data);
                else if (CboType.getValue() == "3")
                    App.SmsFromExcel.queryById("GridSmsFromExcel3").getStore().loadData(data);

                Ext.net.Mask.hide();
            }
        });
    }
    function SendMsg() {
        var AgentMobiles = "";
        var ManagerMobiles = "";
        var AgentEmails = "";
        var ManagerEmails = "";
        var FirstRegisterIds = "";
        var NameModirAmels = "";
        var Selection = App.SmsFromExcel.queryById("GridSmsFromExcel").getSelectionModel().getSelection();
        if (Selection.length > 0) {
            for (var i = 0; i < Selection.length; i++) {
                AgentMobiles = AgentMobiles + Selection[i].data.fldMobile + ";";
                ManagerMobiles = ManagerMobiles + Selection[i].data.fldMobileModirAmel + ";";
                AgentEmails = AgentEmails + Selection[i].data.fldEmail + ";";
                ManagerEmails = ManagerEmails + Selection[i].data.fldEmailCompany + ";";
                FirstRegisterIds = FirstRegisterIds + Selection[i].data.fldFirstRegisterUser + ";";
                NameModirAmels = NameModirAmels + Selection[i].data.NameModirAmel + ";";
            }
            Ext.net.Mask.show({ msg: 'در حال بارگذاری...' });
            Ext.net.DirectMethod.request({
                url: '/SelectRequest/SendMessagee',
                params: {
                    AgentMobiles: AgentMobiles,
                    ManagerMobiles: ManagerMobiles,
                    ManagerEmails: ManagerEmails,
                    AgentEmails: AgentEmails,
                    FirstRegisterIds: FirstRegisterIds,
                    NameModirAmels: NameModirAmels
                },
                success: function () {
                    Ext.net.Mask.hide();
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا حداقل یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function SendMsg2() {
        Ext.net.Mask.show({ msg: 'در حال ارسال...' });
        var SmsArr = new Array();
        var ShMobile;
        var Matn;
        var Selection = App.SmsFromExcel.queryById("GridSmsFromExcel2").getSelectionModel().getSelection();
        if (Selection.length > 0) {
            for (var i = 0; i < Selection.length ; i++) {
                ShMobile = Selection[i].data.fldShMobile;
                Matn = Selection[i].data.fldMatn;
                NameShakhs = Selection[i].data.fldNameShakhs;

                SmsArr.push({
                    'fldShMobile': ShMobile,
                    'fldMatn': Matn,
                    'fldNameShakhs': NameShakhs
                });
            }
            var data1 = {
                SmsArr: SmsArr
            };
            $.ajax({
                type: "POST",
                url: '/SmsFromExcel/Save',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(data1),
                datatype: "json",
                success: function (data) {
                    Ext.net.Mask.hide();
                    var ic = Ext.MessageBox.INFO;
                    if (data.Err == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        Name: data.MsgName,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                },
                failure: function (data) {
                    alert(data.data);
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا حداقل یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
    function SendMsg3() {
        var MatnPayam = App.SmsFromExcel.queryById("MatnPayam");
        Ext.net.Mask.show({ msg: 'در حال ارسال...' });
        var SmsArr = new Array();
        var ShMobile;
        var Matn;
        var Selection = App.SmsFromExcel.queryById("GridSmsFromExcel3").getSelectionModel().getSelection();
        if (Selection.length > 0) {
            for (var i = 0; i < Selection.length ; i++) {
                ShMobile = Selection[i].data.fldShMobile;
                Matn = MatnPayam.getValue();
                NameShakhs = Selection[i].data.fldNameShakhs;

                SmsArr.push({
                    'fldShMobile': ShMobile,
                    'fldMatn': Matn,
                    'fldNameShakhs': NameShakhs
                });
            }
            var data1 = {
                SmsArr: SmsArr
            };
            $.ajax({
                type: "POST",
                url: '/SmsFromExcel/Save',
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(data1),
                datatype: "json",
                success: function (data) {
                    Ext.net.Mask.hide();
                    var ic = Ext.MessageBox.INFO;
                    if (data.Err == 1)
                        ic = Ext.MessageBox.ERROR;
                    Ext.MessageBox.show({
                        Name: data.MsgName,
                        msg: data.Msg,
                        icon: ic,
                        buttons: Ext.MessageBox.OK
                    });
                },
                failure: function (data) {
                    alert(data.data);
                }
            });
        }
        else {
            Ext.MessageBox.show({
                title: "خطا",
                msg: "لطفا حداقل یک سطر را انتخاب نمایید.",
                icon: Ext.MessageBox.ERROR,
                buttons: Ext.MessageBox.OK
            });
        }
    }
</script>
