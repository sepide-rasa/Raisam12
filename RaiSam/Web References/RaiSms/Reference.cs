//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace RaiSam.RaiSms {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendmailtoserverOperationCompleted;
        
        private System.Threading.SendOrPostCallback createsubjectemailOperationCompleted;
        
        private System.Threading.SendOrPostCallback getemailsubjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DivertsmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback autosmstoemailOperationCompleted;
        
        private System.Threading.SendOrPostCallback Auto1to1OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendHttpAutoAnswerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Deliver1RowOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitializeReceiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ArziabiOperationCompleted;
        
        private System.Threading.SendOrPostCallback FaxTransactionNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmSendsmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishCallMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback FinishCallMethodserverOperationCompleted;
        
        private System.Threading.SendOrPostCallback rectownOperationCompleted;
        
        private System.Threading.SendOrPostCallback addinphonebookOperationCompleted;
        
        private System.Threading.SendOrPostCallback myBillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetwaittrySendOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFeeVoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendVoiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageFormOPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllchargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpChargeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViberCheckSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback VibercheckGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViberGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ViberSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback SantralreportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SantralsmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessagefromServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReciveMessagein7arrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback statecityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataSantralOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetadpROperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback FixSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback autorizeasanakOperationCompleted;
        
        private System.Threading.SendOrPostCallback linkphonebookOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkurlvalidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForgetPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback chargeuserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsAsanakOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetsmsRahyabDllOperationCompleted;
        
        private System.Threading.SendOrPostCallback SantralConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback SantralDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ActivateCentralOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoneybacktoUseraccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback telegramonoffOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoneybacktoUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteXMLSOperationCompleted;
        
        private System.Threading.SendOrPostCallback KillProccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSendEmailToServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEmailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAreaOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsShortOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFeeSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSms1To1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetuserInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeliveryWithGetidOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceivesmsLowLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReceiveSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReceivedMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeReceiveNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmsTrySendToServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmsTrySendToServer1To1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageDelivery1to1OperationCompleted;
        
        private System.Threading.SendOrPostCallback getMessageIds1to1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidMobileAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback getmsgmagfaOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmsSentToServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SmsSentToServer1To1OperationCompleted;
        
        private System.Threading.SendOrPostCallback ShowErrorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageLengthOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUnicodeMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendtraffictoUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendRecTocustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sendtoc1CustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback Getsms80OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDeltoCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTocus1MobUsesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendToCus1bulkDelOperationCompleted;
        
        private System.Threading.SendOrPostCallback mehrafrazDeliveryOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeliveryEvent80OperationCompleted;
        
        private System.Threading.SendOrPostCallback SendFaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoFaxOperationCompleted;
        
        private System.Threading.SendOrPostCallback FaxTransactionOperationCompleted;
        
        private System.Threading.SendOrPostCallback datagatherOperationCompleted;
        
        private System.Threading.SendOrPostCallback MatchgraphOperationCompleted;
        
        private System.Threading.SendOrPostCallback MatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback Getdelivery1To1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDeliverFromServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSendsmsToServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSendsmsToServermagfa1To1OperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRealDeliveyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRealDeliveyfortelegramOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRealDeliveyAutoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckRealDelivey2000OperationCompleted;
        
        private System.Threading.SendOrPostCallback checkSendTimerSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback automailanswerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::RaiSam.Properties.Settings.Default.RaiSam_RaiSms_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendmailtoserverCompletedEventHandler SendmailtoserverCompleted;
        
        /// <remarks/>
        public event createsubjectemailCompletedEventHandler createsubjectemailCompleted;
        
        /// <remarks/>
        public event getemailsubjectCompletedEventHandler getemailsubjectCompleted;
        
        /// <remarks/>
        public event SendmailCompletedEventHandler SendmailCompleted;
        
        /// <remarks/>
        public event DivertsmsCompletedEventHandler DivertsmsCompleted;
        
        /// <remarks/>
        public event autosmstoemailCompletedEventHandler autosmstoemailCompleted;
        
        /// <remarks/>
        public event Auto1to1CompletedEventHandler Auto1to1Completed;
        
        /// <remarks/>
        public event SendHttpAutoAnswerCompletedEventHandler SendHttpAutoAnswerCompleted;
        
        /// <remarks/>
        public event Deliver1RowCompletedEventHandler Deliver1RowCompleted;
        
        /// <remarks/>
        public event InitializeReceiveCompletedEventHandler InitializeReceiveCompleted;
        
        /// <remarks/>
        public event ArziabiCompletedEventHandler ArziabiCompleted;
        
        /// <remarks/>
        public event FaxTransactionNewCompletedEventHandler FaxTransactionNewCompleted;
        
        /// <remarks/>
        public event ConfirmSendsmsCompletedEventHandler ConfirmSendsmsCompleted;
        
        /// <remarks/>
        public event FinishCallMethodCompletedEventHandler FinishCallMethodCompleted;
        
        /// <remarks/>
        public event FinishCallMethodserverCompletedEventHandler FinishCallMethodserverCompleted;
        
        /// <remarks/>
        public event rectownCompletedEventHandler rectownCompleted;
        
        /// <remarks/>
        public event addinphonebookCompletedEventHandler addinphonebookCompleted;
        
        /// <remarks/>
        public event myBillCompletedEventHandler myBillCompleted;
        
        /// <remarks/>
        public event GetwaittrySendCompletedEventHandler GetwaittrySendCompleted;
        
        /// <remarks/>
        public event CheckFeeVoiceCompletedEventHandler CheckFeeVoiceCompleted;
        
        /// <remarks/>
        public event SendVoiceCompletedEventHandler SendVoiceCompleted;
        
        /// <remarks/>
        public event GetMessageFormOPCompletedEventHandler GetMessageFormOPCompleted;
        
        /// <remarks/>
        public event GetAllchargeCompletedEventHandler GetAllchargeCompleted;
        
        /// <remarks/>
        public event GetOpChargeCompletedEventHandler GetOpChargeCompleted;
        
        /// <remarks/>
        public event ViberCheckSendCompletedEventHandler ViberCheckSendCompleted;
        
        /// <remarks/>
        public event VibercheckGetCompletedEventHandler VibercheckGetCompleted;
        
        /// <remarks/>
        public event ViberGetCompletedEventHandler ViberGetCompleted;
        
        /// <remarks/>
        public event ViberSendCompletedEventHandler ViberSendCompleted;
        
        /// <remarks/>
        public event SantralreportsCompletedEventHandler SantralreportsCompleted;
        
        /// <remarks/>
        public event SantralsmsCompletedEventHandler SantralsmsCompleted;
        
        /// <remarks/>
        public event GetMessagefromServerCompletedEventHandler GetMessagefromServerCompleted;
        
        /// <remarks/>
        public event GetReciveMessagein7arrayCompletedEventHandler GetReciveMessagein7arrayCompleted;
        
        /// <remarks/>
        public event statecityCompletedEventHandler statecityCompleted;
        
        /// <remarks/>
        public event GetDataSantralCompletedEventHandler GetDataSantralCompleted;
        
        /// <remarks/>
        public event GetadpRCompletedEventHandler GetadpRCompleted;
        
        /// <remarks/>
        public event GetNumberCompletedEventHandler GetNumberCompleted;
        
        /// <remarks/>
        public event FixSendCompletedEventHandler FixSendCompleted;
        
        /// <remarks/>
        public event autorizeasanakCompletedEventHandler autorizeasanakCompleted;
        
        /// <remarks/>
        public event linkphonebookCompletedEventHandler linkphonebookCompleted;
        
        /// <remarks/>
        public event checkurlvalidCompletedEventHandler checkurlvalidCompleted;
        
        /// <remarks/>
        public event ForgetPasswordCompletedEventHandler ForgetPasswordCompleted;
        
        /// <remarks/>
        public event chargeuserCompletedEventHandler chargeuserCompleted;
        
        /// <remarks/>
        public event GetSmsAsanakCompletedEventHandler GetSmsAsanakCompleted;
        
        /// <remarks/>
        public event GetsmsRahyabDllCompletedEventHandler GetsmsRahyabDllCompleted;
        
        /// <remarks/>
        public event SantralConfigCompletedEventHandler SantralConfigCompleted;
        
        /// <remarks/>
        public event SantralDataCompletedEventHandler SantralDataCompleted;
        
        /// <remarks/>
        public event ActivateCentralCompletedEventHandler ActivateCentralCompleted;
        
        /// <remarks/>
        public event MoneybacktoUseraccountCompletedEventHandler MoneybacktoUseraccountCompleted;
        
        /// <remarks/>
        public event telegramonoffCompletedEventHandler telegramonoffCompleted;
        
        /// <remarks/>
        public event MoneybacktoUserCompletedEventHandler MoneybacktoUserCompleted;
        
        /// <remarks/>
        public event WriteXMLSCompletedEventHandler WriteXMLSCompleted;
        
        /// <remarks/>
        public event KillProccessCompletedEventHandler KillProccessCompleted;
        
        /// <remarks/>
        public event checkSendEmailToServerCompletedEventHandler checkSendEmailToServerCompleted;
        
        /// <remarks/>
        public event GetEmailsCompletedEventHandler GetEmailsCompleted;
        
        /// <remarks/>
        public event SendAreaCompletedEventHandler SendAreaCompleted;
        
        /// <remarks/>
        public event SendMMSCompletedEventHandler SendMMSCompleted;
        
        /// <remarks/>
        public event SendSmsShortCompletedEventHandler SendSmsShortCompleted;
        
        /// <remarks/>
        public event SendSmsCompletedEventHandler SendSmsCompleted;
        
        /// <remarks/>
        public event CheckFeeSmsCompletedEventHandler CheckFeeSmsCompleted;
        
        /// <remarks/>
        public event SendSms1To1CompletedEventHandler SendSms1To1Completed;
        
        /// <remarks/>
        public event GetDeliveryCompletedEventHandler GetDeliveryCompleted;
        
        /// <remarks/>
        public event ChangePasswordCompletedEventHandler ChangePasswordCompleted;
        
        /// <remarks/>
        public event GetuserInfoCompletedEventHandler GetuserInfoCompleted;
        
        /// <remarks/>
        public event GetDeliveryWithGetidCompletedEventHandler GetDeliveryWithGetidCompleted;
        
        /// <remarks/>
        public event ReceivesmsLowLevelCompletedEventHandler ReceivesmsLowLevelCompleted;
        
        /// <remarks/>
        public event ReceiveSmsCompletedEventHandler ReceiveSmsCompleted;
        
        /// <remarks/>
        public event DeleteReceivedMessagesCompletedEventHandler DeleteReceivedMessagesCompleted;
        
        /// <remarks/>
        public event ChangeReceiveNoCompletedEventHandler ChangeReceiveNoCompleted;
        
        /// <remarks/>
        public event SmsTrySendToServerCompletedEventHandler SmsTrySendToServerCompleted;
        
        /// <remarks/>
        public event SmsTrySendToServer1To1CompletedEventHandler SmsTrySendToServer1To1Completed;
        
        /// <remarks/>
        public event GetMessageDelivery1to1CompletedEventHandler GetMessageDelivery1to1Completed;
        
        /// <remarks/>
        public event getMessageIds1to1CompletedEventHandler getMessageIds1to1Completed;
        
        /// <remarks/>
        public event CheckValidMobileAllCompletedEventHandler CheckValidMobileAllCompleted;
        
        /// <remarks/>
        public event getmsgmagfaCompletedEventHandler getmsgmagfaCompleted;
        
        /// <remarks/>
        public event SmsSentToServerCompletedEventHandler SmsSentToServerCompleted;
        
        /// <remarks/>
        public event SmsSentToServer1To1CompletedEventHandler SmsSentToServer1To1Completed;
        
        /// <remarks/>
        public event ShowErrorCompletedEventHandler ShowErrorCompleted;
        
        /// <remarks/>
        public event GetMessageLengthCompletedEventHandler GetMessageLengthCompleted;
        
        /// <remarks/>
        public event GetUnicodeMessageCompletedEventHandler GetUnicodeMessageCompleted;
        
        /// <remarks/>
        public event GetSmsCompletedEventHandler GetSmsCompleted;
        
        /// <remarks/>
        public event SendtraffictoUserCompletedEventHandler SendtraffictoUserCompleted;
        
        /// <remarks/>
        public event SendRecTocustomerCompletedEventHandler SendRecTocustomerCompleted;
        
        /// <remarks/>
        public event Sendtoc1CustomerCompletedEventHandler Sendtoc1CustomerCompleted;
        
        /// <remarks/>
        public event Getsms80CompletedEventHandler Getsms80Completed;
        
        /// <remarks/>
        public event SendDeltoCustomerCompletedEventHandler SendDeltoCustomerCompleted;
        
        /// <remarks/>
        public event SendTocus1MobUsesCompletedEventHandler SendTocus1MobUsesCompleted;
        
        /// <remarks/>
        public event SendToCus1bulkDelCompletedEventHandler SendToCus1bulkDelCompleted;
        
        /// <remarks/>
        public event mehrafrazDeliveryCompletedEventHandler mehrafrazDeliveryCompleted;
        
        /// <remarks/>
        public event DeliveryEvent80CompletedEventHandler DeliveryEvent80Completed;
        
        /// <remarks/>
        public event SendFaxCompletedEventHandler SendFaxCompleted;
        
        /// <remarks/>
        public event AutoFaxCompletedEventHandler AutoFaxCompleted;
        
        /// <remarks/>
        public event FaxTransactionCompletedEventHandler FaxTransactionCompleted;
        
        /// <remarks/>
        public event datagatherCompletedEventHandler datagatherCompleted;
        
        /// <remarks/>
        public event MatchgraphCompletedEventHandler MatchgraphCompleted;
        
        /// <remarks/>
        public event MatchCompletedEventHandler MatchCompleted;
        
        /// <remarks/>
        public event Getdelivery1To1CompletedEventHandler Getdelivery1To1Completed;
        
        /// <remarks/>
        public event CheckDeliverFromServerCompletedEventHandler CheckDeliverFromServerCompleted;
        
        /// <remarks/>
        public event checkSendsmsToServerCompletedEventHandler checkSendsmsToServerCompleted;
        
        /// <remarks/>
        public event checkSendsmsToServermagfa1To1CompletedEventHandler checkSendsmsToServermagfa1To1Completed;
        
        /// <remarks/>
        public event CheckRealDeliveyCompletedEventHandler CheckRealDeliveyCompleted;
        
        /// <remarks/>
        public event CheckRealDeliveyfortelegramCompletedEventHandler CheckRealDeliveyfortelegramCompleted;
        
        /// <remarks/>
        public event CheckRealDeliveyAutoCompletedEventHandler CheckRealDeliveyAutoCompleted;
        
        /// <remarks/>
        public event CheckRealDelivey2000CompletedEventHandler CheckRealDelivey2000Completed;
        
        /// <remarks/>
        public event checkSendTimerSmsCompletedEventHandler checkSendTimerSmsCompleted;
        
        /// <remarks/>
        public event automailanswerCompletedEventHandler automailanswerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sendmailtoserver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Sendmailtoserver(long nSendmailid) {
            object[] results = this.Invoke("Sendmailtoserver", new object[] {
                        nSendmailid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendmailtoserverAsync(long nSendmailid) {
            this.SendmailtoserverAsync(nSendmailid, null);
        }
        
        /// <remarks/>
        public void SendmailtoserverAsync(long nSendmailid, object userState) {
            if ((this.SendmailtoserverOperationCompleted == null)) {
                this.SendmailtoserverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendmailtoserverOperationCompleted);
            }
            this.InvokeAsync("Sendmailtoserver", new object[] {
                        nSendmailid}, this.SendmailtoserverOperationCompleted, userState);
        }
        
        private void OnSendmailtoserverOperationCompleted(object arg) {
            if ((this.SendmailtoserverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendmailtoserverCompleted(this, new SendmailtoserverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createsubjectemail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string createsubjectemail(string cUsername, string cpassword, string cDomainname, string cFrom, string cSendername, string csubject, string cBody) {
            object[] results = this.Invoke("createsubjectemail", new object[] {
                        cUsername,
                        cpassword,
                        cDomainname,
                        cFrom,
                        cSendername,
                        csubject,
                        cBody});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createsubjectemailAsync(string cUsername, string cpassword, string cDomainname, string cFrom, string cSendername, string csubject, string cBody) {
            this.createsubjectemailAsync(cUsername, cpassword, cDomainname, cFrom, cSendername, csubject, cBody, null);
        }
        
        /// <remarks/>
        public void createsubjectemailAsync(string cUsername, string cpassword, string cDomainname, string cFrom, string cSendername, string csubject, string cBody, object userState) {
            if ((this.createsubjectemailOperationCompleted == null)) {
                this.createsubjectemailOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreatesubjectemailOperationCompleted);
            }
            this.InvokeAsync("createsubjectemail", new object[] {
                        cUsername,
                        cpassword,
                        cDomainname,
                        cFrom,
                        cSendername,
                        csubject,
                        cBody}, this.createsubjectemailOperationCompleted, userState);
        }
        
        private void OncreatesubjectemailOperationCompleted(object arg) {
            if ((this.createsubjectemailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createsubjectemailCompleted(this, new createsubjectemailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getemailsubject", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable getemailsubject(string cUsername, string cpassword, string cDomainname) {
            object[] results = this.Invoke("getemailsubject", new object[] {
                        cUsername,
                        cpassword,
                        cDomainname});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void getemailsubjectAsync(string cUsername, string cpassword, string cDomainname) {
            this.getemailsubjectAsync(cUsername, cpassword, cDomainname, null);
        }
        
        /// <remarks/>
        public void getemailsubjectAsync(string cUsername, string cpassword, string cDomainname, object userState) {
            if ((this.getemailsubjectOperationCompleted == null)) {
                this.getemailsubjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetemailsubjectOperationCompleted);
            }
            this.InvokeAsync("getemailsubject", new object[] {
                        cUsername,
                        cpassword,
                        cDomainname}, this.getemailsubjectOperationCompleted, userState);
        }
        
        private void OngetemailsubjectOperationCompleted(object arg) {
            if ((this.getemailsubjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getemailsubjectCompleted(this, new getemailsubjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sendmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Sendmail(string cUsername, string cpassword, string cDomainname, string cSendername, string cTo, string csubject, long nSendmailid) {
            object[] results = this.Invoke("Sendmail", new object[] {
                        cUsername,
                        cpassword,
                        cDomainname,
                        cSendername,
                        cTo,
                        csubject,
                        nSendmailid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendmailAsync(string cUsername, string cpassword, string cDomainname, string cSendername, string cTo, string csubject, long nSendmailid) {
            this.SendmailAsync(cUsername, cpassword, cDomainname, cSendername, cTo, csubject, nSendmailid, null);
        }
        
        /// <remarks/>
        public void SendmailAsync(string cUsername, string cpassword, string cDomainname, string cSendername, string cTo, string csubject, long nSendmailid, object userState) {
            if ((this.SendmailOperationCompleted == null)) {
                this.SendmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendmailOperationCompleted);
            }
            this.InvokeAsync("Sendmail", new object[] {
                        cUsername,
                        cpassword,
                        cDomainname,
                        cSendername,
                        cTo,
                        csubject,
                        nSendmailid}, this.SendmailOperationCompleted, userState);
        }
        
        private void OnSendmailOperationCompleted(object arg) {
            if ((this.SendmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendmailCompleted(this, new SendmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Divertsms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Divertsms(int nAccountusesid) {
            this.Invoke("Divertsms", new object[] {
                        nAccountusesid});
        }
        
        /// <remarks/>
        public void DivertsmsAsync(int nAccountusesid) {
            this.DivertsmsAsync(nAccountusesid, null);
        }
        
        /// <remarks/>
        public void DivertsmsAsync(int nAccountusesid, object userState) {
            if ((this.DivertsmsOperationCompleted == null)) {
                this.DivertsmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDivertsmsOperationCompleted);
            }
            this.InvokeAsync("Divertsms", new object[] {
                        nAccountusesid}, this.DivertsmsOperationCompleted, userState);
        }
        
        private void OnDivertsmsOperationCompleted(object arg) {
            if ((this.DivertsmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DivertsmsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/autosmstoemail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool autosmstoemail(int nAccountusesid) {
            object[] results = this.Invoke("autosmstoemail", new object[] {
                        nAccountusesid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void autosmstoemailAsync(int nAccountusesid) {
            this.autosmstoemailAsync(nAccountusesid, null);
        }
        
        /// <remarks/>
        public void autosmstoemailAsync(int nAccountusesid, object userState) {
            if ((this.autosmstoemailOperationCompleted == null)) {
                this.autosmstoemailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnautosmstoemailOperationCompleted);
            }
            this.InvokeAsync("autosmstoemail", new object[] {
                        nAccountusesid}, this.autosmstoemailOperationCompleted, userState);
        }
        
        private void OnautosmstoemailOperationCompleted(object arg) {
            if ((this.autosmstoemailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.autosmstoemailCompleted(this, new autosmstoemailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Auto1to1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Auto1to1(int nAccountusesid) {
            object[] results = this.Invoke("Auto1to1", new object[] {
                        nAccountusesid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Auto1to1Async(int nAccountusesid) {
            this.Auto1to1Async(nAccountusesid, null);
        }
        
        /// <remarks/>
        public void Auto1to1Async(int nAccountusesid, object userState) {
            if ((this.Auto1to1OperationCompleted == null)) {
                this.Auto1to1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuto1to1OperationCompleted);
            }
            this.InvokeAsync("Auto1to1", new object[] {
                        nAccountusesid}, this.Auto1to1OperationCompleted, userState);
        }
        
        private void OnAuto1to1OperationCompleted(object arg) {
            if ((this.Auto1to1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Auto1to1Completed(this, new Auto1to1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendHttpAutoAnswer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendHttpAutoAnswer(int nAccountusesid, string cpath) {
            this.Invoke("SendHttpAutoAnswer", new object[] {
                        nAccountusesid,
                        cpath});
        }
        
        /// <remarks/>
        public void SendHttpAutoAnswerAsync(int nAccountusesid, string cpath) {
            this.SendHttpAutoAnswerAsync(nAccountusesid, cpath, null);
        }
        
        /// <remarks/>
        public void SendHttpAutoAnswerAsync(int nAccountusesid, string cpath, object userState) {
            if ((this.SendHttpAutoAnswerOperationCompleted == null)) {
                this.SendHttpAutoAnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendHttpAutoAnswerOperationCompleted);
            }
            this.InvokeAsync("SendHttpAutoAnswer", new object[] {
                        nAccountusesid,
                        cpath}, this.SendHttpAutoAnswerOperationCompleted, userState);
        }
        
        private void OnSendHttpAutoAnswerOperationCompleted(object arg) {
            if ((this.SendHttpAutoAnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendHttpAutoAnswerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Deliver1Row", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Deliver1Row(string cEncrypt, long ntag, int status, int nid, int nreason) {
            object[] results = this.Invoke("Deliver1Row", new object[] {
                        cEncrypt,
                        ntag,
                        status,
                        nid,
                        nreason});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Deliver1RowAsync(string cEncrypt, long ntag, int status, int nid, int nreason) {
            this.Deliver1RowAsync(cEncrypt, ntag, status, nid, nreason, null);
        }
        
        /// <remarks/>
        public void Deliver1RowAsync(string cEncrypt, long ntag, int status, int nid, int nreason, object userState) {
            if ((this.Deliver1RowOperationCompleted == null)) {
                this.Deliver1RowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeliver1RowOperationCompleted);
            }
            this.InvokeAsync("Deliver1Row", new object[] {
                        cEncrypt,
                        ntag,
                        status,
                        nid,
                        nreason}, this.Deliver1RowOperationCompleted, userState);
        }
        
        private void OnDeliver1RowOperationCompleted(object arg) {
            if ((this.Deliver1RowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Deliver1RowCompleted(this, new Deliver1RowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InitializeReceive", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InitializeReceive(string cUserName, string cPassword, string cConnection) {
            object[] results = this.Invoke("InitializeReceive", new object[] {
                        cUserName,
                        cPassword,
                        cConnection});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InitializeReceiveAsync(string cUserName, string cPassword, string cConnection) {
            this.InitializeReceiveAsync(cUserName, cPassword, cConnection, null);
        }
        
        /// <remarks/>
        public void InitializeReceiveAsync(string cUserName, string cPassword, string cConnection, object userState) {
            if ((this.InitializeReceiveOperationCompleted == null)) {
                this.InitializeReceiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializeReceiveOperationCompleted);
            }
            this.InvokeAsync("InitializeReceive", new object[] {
                        cUserName,
                        cPassword,
                        cConnection}, this.InitializeReceiveOperationCompleted, userState);
        }
        
        private void OnInitializeReceiveOperationCompleted(object arg) {
            if ((this.InitializeReceiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializeReceiveCompleted(this, new InitializeReceiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Arziabi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Arziabi(long naccountusesid, bool lSms) {
            object[] results = this.Invoke("Arziabi", new object[] {
                        naccountusesid,
                        lSms});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ArziabiAsync(long naccountusesid, bool lSms) {
            this.ArziabiAsync(naccountusesid, lSms, null);
        }
        
        /// <remarks/>
        public void ArziabiAsync(long naccountusesid, bool lSms, object userState) {
            if ((this.ArziabiOperationCompleted == null)) {
                this.ArziabiOperationCompleted = new System.Threading.SendOrPostCallback(this.OnArziabiOperationCompleted);
            }
            this.InvokeAsync("Arziabi", new object[] {
                        naccountusesid,
                        lSms}, this.ArziabiOperationCompleted, userState);
        }
        
        private void OnArziabiOperationCompleted(object arg) {
            if ((this.ArziabiCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ArziabiCompleted(this, new ArziabiCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FaxTransactionNew", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FaxTransactionNew() {
            this.Invoke("FaxTransactionNew", new object[0]);
        }
        
        /// <remarks/>
        public void FaxTransactionNewAsync() {
            this.FaxTransactionNewAsync(null);
        }
        
        /// <remarks/>
        public void FaxTransactionNewAsync(object userState) {
            if ((this.FaxTransactionNewOperationCompleted == null)) {
                this.FaxTransactionNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFaxTransactionNewOperationCompleted);
            }
            this.InvokeAsync("FaxTransactionNew", new object[0], this.FaxTransactionNewOperationCompleted, userState);
        }
        
        private void OnFaxTransactionNewOperationCompleted(object arg) {
            if ((this.FaxTransactionNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FaxTransactionNewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConfirmSendsms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ConfirmSendsms(string cCommand, int nId, int nTable, int nTypeaccept, int nUserid, string cDesCancel) {
            this.Invoke("ConfirmSendsms", new object[] {
                        cCommand,
                        nId,
                        nTable,
                        nTypeaccept,
                        nUserid,
                        cDesCancel});
        }
        
        /// <remarks/>
        public void ConfirmSendsmsAsync(string cCommand, int nId, int nTable, int nTypeaccept, int nUserid, string cDesCancel) {
            this.ConfirmSendsmsAsync(cCommand, nId, nTable, nTypeaccept, nUserid, cDesCancel, null);
        }
        
        /// <remarks/>
        public void ConfirmSendsmsAsync(string cCommand, int nId, int nTable, int nTypeaccept, int nUserid, string cDesCancel, object userState) {
            if ((this.ConfirmSendsmsOperationCompleted == null)) {
                this.ConfirmSendsmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmSendsmsOperationCompleted);
            }
            this.InvokeAsync("ConfirmSendsms", new object[] {
                        cCommand,
                        nId,
                        nTable,
                        nTypeaccept,
                        nUserid,
                        cDesCancel}, this.ConfirmSendsmsOperationCompleted, userState);
        }
        
        private void OnConfirmSendsmsOperationCompleted(object arg) {
            if ((this.ConfirmSendsmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmSendsmsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishCallMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FinishCallMethod(string cCommand) {
            object[] results = this.Invoke("FinishCallMethod", new object[] {
                        cCommand});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FinishCallMethodAsync(string cCommand) {
            this.FinishCallMethodAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void FinishCallMethodAsync(string cCommand, object userState) {
            if ((this.FinishCallMethodOperationCompleted == null)) {
                this.FinishCallMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishCallMethodOperationCompleted);
            }
            this.InvokeAsync("FinishCallMethod", new object[] {
                        cCommand}, this.FinishCallMethodOperationCompleted, userState);
        }
        
        private void OnFinishCallMethodOperationCompleted(object arg) {
            if ((this.FinishCallMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishCallMethodCompleted(this, new FinishCallMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FinishCallMethodserver", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FinishCallMethodserver(string cCommand) {
            object[] results = this.Invoke("FinishCallMethodserver", new object[] {
                        cCommand});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FinishCallMethodserverAsync(string cCommand) {
            this.FinishCallMethodserverAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void FinishCallMethodserverAsync(string cCommand, object userState) {
            if ((this.FinishCallMethodserverOperationCompleted == null)) {
                this.FinishCallMethodserverOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFinishCallMethodserverOperationCompleted);
            }
            this.InvokeAsync("FinishCallMethodserver", new object[] {
                        cCommand}, this.FinishCallMethodserverOperationCompleted, userState);
        }
        
        private void OnFinishCallMethodserverOperationCompleted(object arg) {
            if ((this.FinishCallMethodserverCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FinishCallMethodserverCompleted(this, new FinishCallMethodserverCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/rectown", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool rectown(int nAccountusesid) {
            object[] results = this.Invoke("rectown", new object[] {
                        nAccountusesid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void rectownAsync(int nAccountusesid) {
            this.rectownAsync(nAccountusesid, null);
        }
        
        /// <remarks/>
        public void rectownAsync(int nAccountusesid, object userState) {
            if ((this.rectownOperationCompleted == null)) {
                this.rectownOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrectownOperationCompleted);
            }
            this.InvokeAsync("rectown", new object[] {
                        nAccountusesid}, this.rectownOperationCompleted, userState);
        }
        
        private void OnrectownOperationCompleted(object arg) {
            if ((this.rectownCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.rectownCompleted(this, new rectownCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/addinphonebook", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string addinphonebook(string cDomainName, string cUsername, string cPassword, string phonebookcode, string cMobileno, string Companyname, string Fullname, string sexid) {
            object[] results = this.Invoke("addinphonebook", new object[] {
                        cDomainName,
                        cUsername,
                        cPassword,
                        phonebookcode,
                        cMobileno,
                        Companyname,
                        Fullname,
                        sexid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addinphonebookAsync(string cDomainName, string cUsername, string cPassword, string phonebookcode, string cMobileno, string Companyname, string Fullname, string sexid) {
            this.addinphonebookAsync(cDomainName, cUsername, cPassword, phonebookcode, cMobileno, Companyname, Fullname, sexid, null);
        }
        
        /// <remarks/>
        public void addinphonebookAsync(string cDomainName, string cUsername, string cPassword, string phonebookcode, string cMobileno, string Companyname, string Fullname, string sexid, object userState) {
            if ((this.addinphonebookOperationCompleted == null)) {
                this.addinphonebookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddinphonebookOperationCompleted);
            }
            this.InvokeAsync("addinphonebook", new object[] {
                        cDomainName,
                        cUsername,
                        cPassword,
                        phonebookcode,
                        cMobileno,
                        Companyname,
                        Fullname,
                        sexid}, this.addinphonebookOperationCompleted, userState);
        }
        
        private void OnaddinphonebookOperationCompleted(object arg) {
            if ((this.addinphonebookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addinphonebookCompleted(this, new addinphonebookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/myBill", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable myBill(string cCommand, string cDate) {
            object[] results = this.Invoke("myBill", new object[] {
                        cCommand,
                        cDate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void myBillAsync(string cCommand, string cDate) {
            this.myBillAsync(cCommand, cDate, null);
        }
        
        /// <remarks/>
        public void myBillAsync(string cCommand, string cDate, object userState) {
            if ((this.myBillOperationCompleted == null)) {
                this.myBillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmyBillOperationCompleted);
            }
            this.InvokeAsync("myBill", new object[] {
                        cCommand,
                        cDate}, this.myBillOperationCompleted, userState);
        }
        
        private void OnmyBillOperationCompleted(object arg) {
            if ((this.myBillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.myBillCompleted(this, new myBillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetwaittrySend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetwaittrySend(string cCommand) {
            this.Invoke("GetwaittrySend", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void GetwaittrySendAsync(string cCommand) {
            this.GetwaittrySendAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void GetwaittrySendAsync(string cCommand, object userState) {
            if ((this.GetwaittrySendOperationCompleted == null)) {
                this.GetwaittrySendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetwaittrySendOperationCompleted);
            }
            this.InvokeAsync("GetwaittrySend", new object[] {
                        cCommand}, this.GetwaittrySendOperationCompleted, userState);
        }
        
        private void OnGetwaittrySendOperationCompleted(object arg) {
            if ((this.GetwaittrySendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetwaittrySendCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFeeVoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] CheckFeeVoice(string[] cData) {
            object[] results = this.Invoke("CheckFeeVoice", new object[] {
                        cData});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckFeeVoiceAsync(string[] cData) {
            this.CheckFeeVoiceAsync(cData, null);
        }
        
        /// <remarks/>
        public void CheckFeeVoiceAsync(string[] cData, object userState) {
            if ((this.CheckFeeVoiceOperationCompleted == null)) {
                this.CheckFeeVoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFeeVoiceOperationCompleted);
            }
            this.InvokeAsync("CheckFeeVoice", new object[] {
                        cData}, this.CheckFeeVoiceOperationCompleted, userState);
        }
        
        private void OnCheckFeeVoiceOperationCompleted(object arg) {
            if ((this.CheckFeeVoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFeeVoiceCompleted(this, new CheckFeeVoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendVoice", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SendVoice(string cDomainname, string cUsername, string cPassword, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] bFile, string cFilename, int nTrySend, string[] cTelNo, string cSubject, System.DateTime m_scheduleDate, string cStartTime, string cEndTime, int nTypeSend, long nGetid) {
            object[] results = this.Invoke("SendVoice", new object[] {
                        cDomainname,
                        cUsername,
                        cPassword,
                        bFile,
                        cFilename,
                        nTrySend,
                        cTelNo,
                        cSubject,
                        m_scheduleDate,
                        cStartTime,
                        cEndTime,
                        nTypeSend,
                        nGetid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SendVoiceAsync(string cDomainname, string cUsername, string cPassword, byte[] bFile, string cFilename, int nTrySend, string[] cTelNo, string cSubject, System.DateTime m_scheduleDate, string cStartTime, string cEndTime, int nTypeSend, long nGetid) {
            this.SendVoiceAsync(cDomainname, cUsername, cPassword, bFile, cFilename, nTrySend, cTelNo, cSubject, m_scheduleDate, cStartTime, cEndTime, nTypeSend, nGetid, null);
        }
        
        /// <remarks/>
        public void SendVoiceAsync(string cDomainname, string cUsername, string cPassword, byte[] bFile, string cFilename, int nTrySend, string[] cTelNo, string cSubject, System.DateTime m_scheduleDate, string cStartTime, string cEndTime, int nTypeSend, long nGetid, object userState) {
            if ((this.SendVoiceOperationCompleted == null)) {
                this.SendVoiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendVoiceOperationCompleted);
            }
            this.InvokeAsync("SendVoice", new object[] {
                        cDomainname,
                        cUsername,
                        cPassword,
                        bFile,
                        cFilename,
                        nTrySend,
                        cTelNo,
                        cSubject,
                        m_scheduleDate,
                        cStartTime,
                        cEndTime,
                        nTypeSend,
                        nGetid}, this.SendVoiceOperationCompleted, userState);
        }
        
        private void OnSendVoiceOperationCompleted(object arg) {
            if ((this.SendVoiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendVoiceCompleted(this, new SendVoiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageFormOP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMessageFormOP(string cCommand) {
            this.Invoke("GetMessageFormOP", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void GetMessageFormOPAsync(string cCommand) {
            this.GetMessageFormOPAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void GetMessageFormOPAsync(string cCommand, object userState) {
            if ((this.GetMessageFormOPOperationCompleted == null)) {
                this.GetMessageFormOPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageFormOPOperationCompleted);
            }
            this.InvokeAsync("GetMessageFormOP", new object[] {
                        cCommand}, this.GetMessageFormOPOperationCompleted, userState);
        }
        
        private void OnGetMessageFormOPOperationCompleted(object arg) {
            if ((this.GetMessageFormOPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageFormOPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllcharge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetAllcharge(string cCommand) {
            this.Invoke("GetAllcharge", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void GetAllchargeAsync(string cCommand) {
            this.GetAllchargeAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void GetAllchargeAsync(string cCommand, object userState) {
            if ((this.GetAllchargeOperationCompleted == null)) {
                this.GetAllchargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllchargeOperationCompleted);
            }
            this.InvokeAsync("GetAllcharge", new object[] {
                        cCommand}, this.GetAllchargeOperationCompleted, userState);
        }
        
        private void OnGetAllchargeOperationCompleted(object arg) {
            if ((this.GetAllchargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllchargeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOpCharge", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetOpCharge(string cCommand, string cServername, string cusername, string cPassword, string cdomainname, int nPerprice, string cWebService) {
            object[] results = this.Invoke("GetOpCharge", new object[] {
                        cCommand,
                        cServername,
                        cusername,
                        cPassword,
                        cdomainname,
                        nPerprice,
                        cWebService});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOpChargeAsync(string cCommand, string cServername, string cusername, string cPassword, string cdomainname, int nPerprice, string cWebService) {
            this.GetOpChargeAsync(cCommand, cServername, cusername, cPassword, cdomainname, nPerprice, cWebService, null);
        }
        
        /// <remarks/>
        public void GetOpChargeAsync(string cCommand, string cServername, string cusername, string cPassword, string cdomainname, int nPerprice, string cWebService, object userState) {
            if ((this.GetOpChargeOperationCompleted == null)) {
                this.GetOpChargeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpChargeOperationCompleted);
            }
            this.InvokeAsync("GetOpCharge", new object[] {
                        cCommand,
                        cServername,
                        cusername,
                        cPassword,
                        cdomainname,
                        nPerprice,
                        cWebService}, this.GetOpChargeOperationCompleted, userState);
        }
        
        private void OnGetOpChargeOperationCompleted(object arg) {
            if ((this.GetOpChargeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpChargeCompleted(this, new GetOpChargeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViberCheckSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ViberCheckSend(string cCommand) {
            object[] results = this.Invoke("ViberCheckSend", new object[] {
                        cCommand});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ViberCheckSendAsync(string cCommand) {
            this.ViberCheckSendAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void ViberCheckSendAsync(string cCommand, object userState) {
            if ((this.ViberCheckSendOperationCompleted == null)) {
                this.ViberCheckSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViberCheckSendOperationCompleted);
            }
            this.InvokeAsync("ViberCheckSend", new object[] {
                        cCommand}, this.ViberCheckSendOperationCompleted, userState);
        }
        
        private void OnViberCheckSendOperationCompleted(object arg) {
            if ((this.ViberCheckSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViberCheckSendCompleted(this, new ViberCheckSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/VibercheckGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void VibercheckGet(string cCommand, string[] cPara) {
            this.Invoke("VibercheckGet", new object[] {
                        cCommand,
                        cPara});
        }
        
        /// <remarks/>
        public void VibercheckGetAsync(string cCommand, string[] cPara) {
            this.VibercheckGetAsync(cCommand, cPara, null);
        }
        
        /// <remarks/>
        public void VibercheckGetAsync(string cCommand, string[] cPara, object userState) {
            if ((this.VibercheckGetOperationCompleted == null)) {
                this.VibercheckGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVibercheckGetOperationCompleted);
            }
            this.InvokeAsync("VibercheckGet", new object[] {
                        cCommand,
                        cPara}, this.VibercheckGetOperationCompleted, userState);
        }
        
        private void OnVibercheckGetOperationCompleted(object arg) {
            if ((this.VibercheckGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VibercheckGetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViberGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ViberGet(string cCommand, string[] cPara) {
            this.Invoke("ViberGet", new object[] {
                        cCommand,
                        cPara});
        }
        
        /// <remarks/>
        public void ViberGetAsync(string cCommand, string[] cPara) {
            this.ViberGetAsync(cCommand, cPara, null);
        }
        
        /// <remarks/>
        public void ViberGetAsync(string cCommand, string[] cPara, object userState) {
            if ((this.ViberGetOperationCompleted == null)) {
                this.ViberGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViberGetOperationCompleted);
            }
            this.InvokeAsync("ViberGet", new object[] {
                        cCommand,
                        cPara}, this.ViberGetOperationCompleted, userState);
        }
        
        private void OnViberGetOperationCompleted(object arg) {
            if ((this.ViberGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViberGetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ViberSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] ViberSend(string cCommand) {
            object[] results = this.Invoke("ViberSend", new object[] {
                        cCommand});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void ViberSendAsync(string cCommand) {
            this.ViberSendAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void ViberSendAsync(string cCommand, object userState) {
            if ((this.ViberSendOperationCompleted == null)) {
                this.ViberSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnViberSendOperationCompleted);
            }
            this.InvokeAsync("ViberSend", new object[] {
                        cCommand}, this.ViberSendOperationCompleted, userState);
        }
        
        private void OnViberSendOperationCompleted(object arg) {
            if ((this.ViberSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ViberSendCompleted(this, new ViberSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Santralreports", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Santralreports(string cCommand) {
            object[] results = this.Invoke("Santralreports", new object[] {
                        cCommand});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SantralreportsAsync(string cCommand) {
            this.SantralreportsAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void SantralreportsAsync(string cCommand, object userState) {
            if ((this.SantralreportsOperationCompleted == null)) {
                this.SantralreportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSantralreportsOperationCompleted);
            }
            this.InvokeAsync("Santralreports", new object[] {
                        cCommand}, this.SantralreportsOperationCompleted, userState);
        }
        
        private void OnSantralreportsOperationCompleted(object arg) {
            if ((this.SantralreportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SantralreportsCompleted(this, new SantralreportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Santralsms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Santralsms(string cCommand, long nsantralid) {
            object[] results = this.Invoke("Santralsms", new object[] {
                        cCommand,
                        nsantralid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SantralsmsAsync(string cCommand, long nsantralid) {
            this.SantralsmsAsync(cCommand, nsantralid, null);
        }
        
        /// <remarks/>
        public void SantralsmsAsync(string cCommand, long nsantralid, object userState) {
            if ((this.SantralsmsOperationCompleted == null)) {
                this.SantralsmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSantralsmsOperationCompleted);
            }
            this.InvokeAsync("Santralsms", new object[] {
                        cCommand,
                        nsantralid}, this.SantralsmsOperationCompleted, userState);
        }
        
        private void OnSantralsmsOperationCompleted(object arg) {
            if ((this.SantralsmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SantralsmsCompleted(this, new SantralsmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessagefromServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMessagefromServer(string cCommand) {
            this.Invoke("GetMessagefromServer", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void GetMessagefromServerAsync(string cCommand) {
            this.GetMessagefromServerAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void GetMessagefromServerAsync(string cCommand, object userState) {
            if ((this.GetMessagefromServerOperationCompleted == null)) {
                this.GetMessagefromServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessagefromServerOperationCompleted);
            }
            this.InvokeAsync("GetMessagefromServer", new object[] {
                        cCommand}, this.GetMessagefromServerOperationCompleted, userState);
        }
        
        private void OnGetMessagefromServerOperationCompleted(object arg) {
            if ((this.GetMessagefromServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessagefromServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReciveMessagein7array", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetReciveMessagein7array(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromnumber, string cFromDate, string cToDate) {
            object[] results = this.Invoke("GetReciveMessagein7array", new object[] {
                        cUserName,
                        cPassword,
                        lReceiveAllmsg,
                        cDomainName,
                        cFromnumber,
                        cFromDate,
                        cToDate});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReciveMessagein7arrayAsync(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromnumber, string cFromDate, string cToDate) {
            this.GetReciveMessagein7arrayAsync(cUserName, cPassword, lReceiveAllmsg, cDomainName, cFromnumber, cFromDate, cToDate, null);
        }
        
        /// <remarks/>
        public void GetReciveMessagein7arrayAsync(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromnumber, string cFromDate, string cToDate, object userState) {
            if ((this.GetReciveMessagein7arrayOperationCompleted == null)) {
                this.GetReciveMessagein7arrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReciveMessagein7arrayOperationCompleted);
            }
            this.InvokeAsync("GetReciveMessagein7array", new object[] {
                        cUserName,
                        cPassword,
                        lReceiveAllmsg,
                        cDomainName,
                        cFromnumber,
                        cFromDate,
                        cToDate}, this.GetReciveMessagein7arrayOperationCompleted, userState);
        }
        
        private void OnGetReciveMessagein7arrayOperationCompleted(object arg) {
            if ((this.GetReciveMessagein7arrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReciveMessagein7arrayCompleted(this, new GetReciveMessagein7arrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/statecity", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] statecity(string cCoomand, string param1) {
            object[] results = this.Invoke("statecity", new object[] {
                        cCoomand,
                        param1});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void statecityAsync(string cCoomand, string param1) {
            this.statecityAsync(cCoomand, param1, null);
        }
        
        /// <remarks/>
        public void statecityAsync(string cCoomand, string param1, object userState) {
            if ((this.statecityOperationCompleted == null)) {
                this.statecityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstatecityOperationCompleted);
            }
            this.InvokeAsync("statecity", new object[] {
                        cCoomand,
                        param1}, this.statecityOperationCompleted, userState);
        }
        
        private void OnstatecityOperationCompleted(object arg) {
            if ((this.statecityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.statecityCompleted(this, new statecityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDataSantral", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDataSantral(string cCommand) {
            object[] results = this.Invoke("GetDataSantral", new object[] {
                        cCommand});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataSantralAsync(string cCommand) {
            this.GetDataSantralAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void GetDataSantralAsync(string cCommand, object userState) {
            if ((this.GetDataSantralOperationCompleted == null)) {
                this.GetDataSantralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataSantralOperationCompleted);
            }
            this.InvokeAsync("GetDataSantral", new object[] {
                        cCommand}, this.GetDataSantralOperationCompleted, userState);
        }
        
        private void OnGetDataSantralOperationCompleted(object arg) {
            if ((this.GetDataSantralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataSantralCompleted(this, new GetDataSantralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetadpR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetadpR(string cCommand) {
            this.Invoke("GetadpR", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void GetadpRAsync(string cCommand) {
            this.GetadpRAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void GetadpRAsync(string cCommand, object userState) {
            if ((this.GetadpROperationCompleted == null)) {
                this.GetadpROperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetadpROperationCompleted);
            }
            this.InvokeAsync("GetadpR", new object[] {
                        cCommand}, this.GetadpROperationCompleted, userState);
        }
        
        private void OnGetadpROperationCompleted(object arg) {
            if ((this.GetadpRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetadpRCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetNumber(string cDomainname, string cUsername, string cpassword) {
            object[] results = this.Invoke("GetNumber", new object[] {
                        cDomainname,
                        cUsername,
                        cpassword});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNumberAsync(string cDomainname, string cUsername, string cpassword) {
            this.GetNumberAsync(cDomainname, cUsername, cpassword, null);
        }
        
        /// <remarks/>
        public void GetNumberAsync(string cDomainname, string cUsername, string cpassword, object userState) {
            if ((this.GetNumberOperationCompleted == null)) {
                this.GetNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNumberOperationCompleted);
            }
            this.InvokeAsync("GetNumber", new object[] {
                        cDomainname,
                        cUsername,
                        cpassword}, this.GetNumberOperationCompleted, userState);
        }
        
        private void OnGetNumberOperationCompleted(object arg) {
            if ((this.GetNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNumberCompleted(this, new GetNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FixSend", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int FixSend(string cCommand) {
            object[] results = this.Invoke("FixSend", new object[] {
                        cCommand});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FixSendAsync(string cCommand) {
            this.FixSendAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void FixSendAsync(string cCommand, object userState) {
            if ((this.FixSendOperationCompleted == null)) {
                this.FixSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFixSendOperationCompleted);
            }
            this.InvokeAsync("FixSend", new object[] {
                        cCommand}, this.FixSendOperationCompleted, userState);
        }
        
        private void OnFixSendOperationCompleted(object arg) {
            if ((this.FixSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FixSendCompleted(this, new FixSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/autorizeasanak", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool autorizeasanak(string cDomainname, string cUsername, string cpassword) {
            object[] results = this.Invoke("autorizeasanak", new object[] {
                        cDomainname,
                        cUsername,
                        cpassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void autorizeasanakAsync(string cDomainname, string cUsername, string cpassword) {
            this.autorizeasanakAsync(cDomainname, cUsername, cpassword, null);
        }
        
        /// <remarks/>
        public void autorizeasanakAsync(string cDomainname, string cUsername, string cpassword, object userState) {
            if ((this.autorizeasanakOperationCompleted == null)) {
                this.autorizeasanakOperationCompleted = new System.Threading.SendOrPostCallback(this.OnautorizeasanakOperationCompleted);
            }
            this.InvokeAsync("autorizeasanak", new object[] {
                        cDomainname,
                        cUsername,
                        cpassword}, this.autorizeasanakOperationCompleted, userState);
        }
        
        private void OnautorizeasanakOperationCompleted(object arg) {
            if ((this.autorizeasanakCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.autorizeasanakCompleted(this, new autorizeasanakCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/linkphonebook", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string linkphonebook(int naccountusesid) {
            object[] results = this.Invoke("linkphonebook", new object[] {
                        naccountusesid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void linkphonebookAsync(int naccountusesid) {
            this.linkphonebookAsync(naccountusesid, null);
        }
        
        /// <remarks/>
        public void linkphonebookAsync(int naccountusesid, object userState) {
            if ((this.linkphonebookOperationCompleted == null)) {
                this.linkphonebookOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlinkphonebookOperationCompleted);
            }
            this.InvokeAsync("linkphonebook", new object[] {
                        naccountusesid}, this.linkphonebookOperationCompleted, userState);
        }
        
        private void OnlinkphonebookOperationCompleted(object arg) {
            if ((this.linkphonebookCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.linkphonebookCompleted(this, new linkphonebookCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkurlvalid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void checkurlvalid(string cCommand) {
            this.Invoke("checkurlvalid", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void checkurlvalidAsync(string cCommand) {
            this.checkurlvalidAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void checkurlvalidAsync(string cCommand, object userState) {
            if ((this.checkurlvalidOperationCompleted == null)) {
                this.checkurlvalidOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckurlvalidOperationCompleted);
            }
            this.InvokeAsync("checkurlvalid", new object[] {
                        cCommand}, this.checkurlvalidOperationCompleted, userState);
        }
        
        private void OncheckurlvalidOperationCompleted(object arg) {
            if ((this.checkurlvalidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkurlvalidCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ForgetPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ForgetPassword(string cDomainname, string cUsername, string cMobileno) {
            object[] results = this.Invoke("ForgetPassword", new object[] {
                        cDomainname,
                        cUsername,
                        cMobileno});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ForgetPasswordAsync(string cDomainname, string cUsername, string cMobileno) {
            this.ForgetPasswordAsync(cDomainname, cUsername, cMobileno, null);
        }
        
        /// <remarks/>
        public void ForgetPasswordAsync(string cDomainname, string cUsername, string cMobileno, object userState) {
            if ((this.ForgetPasswordOperationCompleted == null)) {
                this.ForgetPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForgetPasswordOperationCompleted);
            }
            this.InvokeAsync("ForgetPassword", new object[] {
                        cDomainname,
                        cUsername,
                        cMobileno}, this.ForgetPasswordOperationCompleted, userState);
        }
        
        private void OnForgetPasswordOperationCompleted(object arg) {
            if ((this.ForgetPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForgetPasswordCompleted(this, new ForgetPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/chargeuser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string chargeuser(string cDomainname, string cUsername, string cpassword, string cUsercharge, long nCharge, string cDesCharge) {
            object[] results = this.Invoke("chargeuser", new object[] {
                        cDomainname,
                        cUsername,
                        cpassword,
                        cUsercharge,
                        nCharge,
                        cDesCharge});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void chargeuserAsync(string cDomainname, string cUsername, string cpassword, string cUsercharge, long nCharge, string cDesCharge) {
            this.chargeuserAsync(cDomainname, cUsername, cpassword, cUsercharge, nCharge, cDesCharge, null);
        }
        
        /// <remarks/>
        public void chargeuserAsync(string cDomainname, string cUsername, string cpassword, string cUsercharge, long nCharge, string cDesCharge, object userState) {
            if ((this.chargeuserOperationCompleted == null)) {
                this.chargeuserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchargeuserOperationCompleted);
            }
            this.InvokeAsync("chargeuser", new object[] {
                        cDomainname,
                        cUsername,
                        cpassword,
                        cUsercharge,
                        nCharge,
                        cDesCharge}, this.chargeuserOperationCompleted, userState);
        }
        
        private void OnchargeuserOperationCompleted(object arg) {
            if ((this.chargeuserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.chargeuserCompleted(this, new chargeuserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSmsAsanak", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetSmsAsanak(string cCommand) {
            this.Invoke("GetSmsAsanak", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void GetSmsAsanakAsync(string cCommand) {
            this.GetSmsAsanakAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void GetSmsAsanakAsync(string cCommand, object userState) {
            if ((this.GetSmsAsanakOperationCompleted == null)) {
                this.GetSmsAsanakOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsAsanakOperationCompleted);
            }
            this.InvokeAsync("GetSmsAsanak", new object[] {
                        cCommand}, this.GetSmsAsanakOperationCompleted, userState);
        }
        
        private void OnGetSmsAsanakOperationCompleted(object arg) {
            if ((this.GetSmsAsanakCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsAsanakCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetsmsRahyabDll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetsmsRahyabDll(string cCommand) {
            this.Invoke("GetsmsRahyabDll", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void GetsmsRahyabDllAsync(string cCommand) {
            this.GetsmsRahyabDllAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void GetsmsRahyabDllAsync(string cCommand, object userState) {
            if ((this.GetsmsRahyabDllOperationCompleted == null)) {
                this.GetsmsRahyabDllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetsmsRahyabDllOperationCompleted);
            }
            this.InvokeAsync("GetsmsRahyabDll", new object[] {
                        cCommand}, this.GetsmsRahyabDllOperationCompleted, userState);
        }
        
        private void OnGetsmsRahyabDllOperationCompleted(object arg) {
            if ((this.GetsmsRahyabDllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetsmsRahyabDllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SantralConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] SantralConfig(string cUSername, string cPassword, string cDomainname, string cCommand, int typeodata, string[] cValues, string[] cDatas) {
            object[] results = this.Invoke("SantralConfig", new object[] {
                        cUSername,
                        cPassword,
                        cDomainname,
                        cCommand,
                        typeodata,
                        cValues,
                        cDatas});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void SantralConfigAsync(string cUSername, string cPassword, string cDomainname, string cCommand, int typeodata, string[] cValues, string[] cDatas) {
            this.SantralConfigAsync(cUSername, cPassword, cDomainname, cCommand, typeodata, cValues, cDatas, null);
        }
        
        /// <remarks/>
        public void SantralConfigAsync(string cUSername, string cPassword, string cDomainname, string cCommand, int typeodata, string[] cValues, string[] cDatas, object userState) {
            if ((this.SantralConfigOperationCompleted == null)) {
                this.SantralConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSantralConfigOperationCompleted);
            }
            this.InvokeAsync("SantralConfig", new object[] {
                        cUSername,
                        cPassword,
                        cDomainname,
                        cCommand,
                        typeodata,
                        cValues,
                        cDatas}, this.SantralConfigOperationCompleted, userState);
        }
        
        private void OnSantralConfigOperationCompleted(object arg) {
            if ((this.SantralConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SantralConfigCompleted(this, new SantralConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SantralData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SantralData(string cUSername, string cPassword, string cDomainname, string cData) {
            object[] results = this.Invoke("SantralData", new object[] {
                        cUSername,
                        cPassword,
                        cDomainname,
                        cData});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SantralDataAsync(string cUSername, string cPassword, string cDomainname, string cData) {
            this.SantralDataAsync(cUSername, cPassword, cDomainname, cData, null);
        }
        
        /// <remarks/>
        public void SantralDataAsync(string cUSername, string cPassword, string cDomainname, string cData, object userState) {
            if ((this.SantralDataOperationCompleted == null)) {
                this.SantralDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSantralDataOperationCompleted);
            }
            this.InvokeAsync("SantralData", new object[] {
                        cUSername,
                        cPassword,
                        cDomainname,
                        cData}, this.SantralDataOperationCompleted, userState);
        }
        
        private void OnSantralDataOperationCompleted(object arg) {
            if ((this.SantralDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SantralDataCompleted(this, new SantralDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ActivateCentral", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ActivateCentral(string cUSername, string cPassword, string cDomainname, string cSerial, bool lActivationType) {
            object[] results = this.Invoke("ActivateCentral", new object[] {
                        cUSername,
                        cPassword,
                        cDomainname,
                        cSerial,
                        lActivationType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ActivateCentralAsync(string cUSername, string cPassword, string cDomainname, string cSerial, bool lActivationType) {
            this.ActivateCentralAsync(cUSername, cPassword, cDomainname, cSerial, lActivationType, null);
        }
        
        /// <remarks/>
        public void ActivateCentralAsync(string cUSername, string cPassword, string cDomainname, string cSerial, bool lActivationType, object userState) {
            if ((this.ActivateCentralOperationCompleted == null)) {
                this.ActivateCentralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnActivateCentralOperationCompleted);
            }
            this.InvokeAsync("ActivateCentral", new object[] {
                        cUSername,
                        cPassword,
                        cDomainname,
                        cSerial,
                        lActivationType}, this.ActivateCentralOperationCompleted, userState);
        }
        
        private void OnActivateCentralOperationCompleted(object arg) {
            if ((this.ActivateCentralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ActivateCentralCompleted(this, new ActivateCentralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoneybacktoUseraccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string MoneybacktoUseraccount(string cCommand, int nservice, int nSmsServerid, int naccountid) {
            object[] results = this.Invoke("MoneybacktoUseraccount", new object[] {
                        cCommand,
                        nservice,
                        nSmsServerid,
                        naccountid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MoneybacktoUseraccountAsync(string cCommand, int nservice, int nSmsServerid, int naccountid) {
            this.MoneybacktoUseraccountAsync(cCommand, nservice, nSmsServerid, naccountid, null);
        }
        
        /// <remarks/>
        public void MoneybacktoUseraccountAsync(string cCommand, int nservice, int nSmsServerid, int naccountid, object userState) {
            if ((this.MoneybacktoUseraccountOperationCompleted == null)) {
                this.MoneybacktoUseraccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoneybacktoUseraccountOperationCompleted);
            }
            this.InvokeAsync("MoneybacktoUseraccount", new object[] {
                        cCommand,
                        nservice,
                        nSmsServerid,
                        naccountid}, this.MoneybacktoUseraccountOperationCompleted, userState);
        }
        
        private void OnMoneybacktoUseraccountOperationCompleted(object arg) {
            if ((this.MoneybacktoUseraccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoneybacktoUseraccountCompleted(this, new MoneybacktoUseraccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/telegramonoff", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void telegramonoff() {
            this.Invoke("telegramonoff", new object[0]);
        }
        
        /// <remarks/>
        public void telegramonoffAsync() {
            this.telegramonoffAsync(null);
        }
        
        /// <remarks/>
        public void telegramonoffAsync(object userState) {
            if ((this.telegramonoffOperationCompleted == null)) {
                this.telegramonoffOperationCompleted = new System.Threading.SendOrPostCallback(this.OntelegramonoffOperationCompleted);
            }
            this.InvokeAsync("telegramonoff", new object[0], this.telegramonoffOperationCompleted, userState);
        }
        
        private void OntelegramonoffOperationCompleted(object arg) {
            if ((this.telegramonoffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.telegramonoffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/MoneybacktoUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoneybacktoUser(string cCommand, int nservice, int nSmsServerid) {
            this.Invoke("MoneybacktoUser", new object[] {
                        cCommand,
                        nservice,
                        nSmsServerid});
        }
        
        /// <remarks/>
        public void MoneybacktoUserAsync(string cCommand, int nservice, int nSmsServerid) {
            this.MoneybacktoUserAsync(cCommand, nservice, nSmsServerid, null);
        }
        
        /// <remarks/>
        public void MoneybacktoUserAsync(string cCommand, int nservice, int nSmsServerid, object userState) {
            if ((this.MoneybacktoUserOperationCompleted == null)) {
                this.MoneybacktoUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoneybacktoUserOperationCompleted);
            }
            this.InvokeAsync("MoneybacktoUser", new object[] {
                        cCommand,
                        nservice,
                        nSmsServerid}, this.MoneybacktoUserOperationCompleted, userState);
        }
        
        private void OnMoneybacktoUserOperationCompleted(object arg) {
            if ((this.MoneybacktoUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoneybacktoUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WriteXMLS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WriteXMLS(string cXMLS) {
            object[] results = this.Invoke("WriteXMLS", new object[] {
                        cXMLS});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteXMLSAsync(string cXMLS) {
            this.WriteXMLSAsync(cXMLS, null);
        }
        
        /// <remarks/>
        public void WriteXMLSAsync(string cXMLS, object userState) {
            if ((this.WriteXMLSOperationCompleted == null)) {
                this.WriteXMLSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteXMLSOperationCompleted);
            }
            this.InvokeAsync("WriteXMLS", new object[] {
                        cXMLS}, this.WriteXMLSOperationCompleted, userState);
        }
        
        private void OnWriteXMLSOperationCompleted(object arg) {
            if ((this.WriteXMLSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteXMLSCompleted(this, new WriteXMLSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/KillProccess", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int KillProccess(string cCommand) {
            object[] results = this.Invoke("KillProccess", new object[] {
                        cCommand});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void KillProccessAsync(string cCommand) {
            this.KillProccessAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void KillProccessAsync(string cCommand, object userState) {
            if ((this.KillProccessOperationCompleted == null)) {
                this.KillProccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKillProccessOperationCompleted);
            }
            this.InvokeAsync("KillProccess", new object[] {
                        cCommand}, this.KillProccessOperationCompleted, userState);
        }
        
        private void OnKillProccessOperationCompleted(object arg) {
            if ((this.KillProccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KillProccessCompleted(this, new KillProccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkSendEmailToServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool checkSendEmailToServer() {
            object[] results = this.Invoke("checkSendEmailToServer", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void checkSendEmailToServerAsync() {
            this.checkSendEmailToServerAsync(null);
        }
        
        /// <remarks/>
        public void checkSendEmailToServerAsync(object userState) {
            if ((this.checkSendEmailToServerOperationCompleted == null)) {
                this.checkSendEmailToServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSendEmailToServerOperationCompleted);
            }
            this.InvokeAsync("checkSendEmailToServer", new object[0], this.checkSendEmailToServerOperationCompleted, userState);
        }
        
        private void OncheckSendEmailToServerOperationCompleted(object arg) {
            if ((this.checkSendEmailToServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSendEmailToServerCompleted(this, new checkSendEmailToServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEmails", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetEmails() {
            object[] results = this.Invoke("GetEmails", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetEmailsAsync() {
            this.GetEmailsAsync(null);
        }
        
        /// <remarks/>
        public void GetEmailsAsync(object userState) {
            if ((this.GetEmailsOperationCompleted == null)) {
                this.GetEmailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEmailsOperationCompleted);
            }
            this.InvokeAsync("GetEmails", new object[0], this.GetEmailsOperationCompleted, userState);
        }
        
        private void OnGetEmailsOperationCompleted(object arg) {
            if ((this.GetEmailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEmailsCompleted(this, new GetEmailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendArea", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendArea(
                    string cUserName, 
                    string cPassword, 
                    string cBody, 
                    long nRandomList, 
                    int nCMessage, 
                    string m_SchedulDate, 
                    string cDomainname, 
                    string cFromNumber, 
                    long npro, 
                    string careacode, 
                    string cfilter, 
                    long nbank, 
                    int nSpeedsms, 
                    int nPeriodmin, 
                    string cStartTime, 
                    string cEndTime) {
            object[] results = this.Invoke("SendArea", new object[] {
                        cUserName,
                        cPassword,
                        cBody,
                        nRandomList,
                        nCMessage,
                        m_SchedulDate,
                        cDomainname,
                        cFromNumber,
                        npro,
                        careacode,
                        cfilter,
                        nbank,
                        nSpeedsms,
                        nPeriodmin,
                        cStartTime,
                        cEndTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendAreaAsync(
                    string cUserName, 
                    string cPassword, 
                    string cBody, 
                    long nRandomList, 
                    int nCMessage, 
                    string m_SchedulDate, 
                    string cDomainname, 
                    string cFromNumber, 
                    long npro, 
                    string careacode, 
                    string cfilter, 
                    long nbank, 
                    int nSpeedsms, 
                    int nPeriodmin, 
                    string cStartTime, 
                    string cEndTime) {
            this.SendAreaAsync(cUserName, cPassword, cBody, nRandomList, nCMessage, m_SchedulDate, cDomainname, cFromNumber, npro, careacode, cfilter, nbank, nSpeedsms, nPeriodmin, cStartTime, cEndTime, null);
        }
        
        /// <remarks/>
        public void SendAreaAsync(
                    string cUserName, 
                    string cPassword, 
                    string cBody, 
                    long nRandomList, 
                    int nCMessage, 
                    string m_SchedulDate, 
                    string cDomainname, 
                    string cFromNumber, 
                    long npro, 
                    string careacode, 
                    string cfilter, 
                    long nbank, 
                    int nSpeedsms, 
                    int nPeriodmin, 
                    string cStartTime, 
                    string cEndTime, 
                    object userState) {
            if ((this.SendAreaOperationCompleted == null)) {
                this.SendAreaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAreaOperationCompleted);
            }
            this.InvokeAsync("SendArea", new object[] {
                        cUserName,
                        cPassword,
                        cBody,
                        nRandomList,
                        nCMessage,
                        m_SchedulDate,
                        cDomainname,
                        cFromNumber,
                        npro,
                        careacode,
                        cfilter,
                        nbank,
                        nSpeedsms,
                        nPeriodmin,
                        cStartTime,
                        cEndTime}, this.SendAreaOperationCompleted, userState);
        }
        
        private void OnSendAreaOperationCompleted(object arg) {
            if ((this.SendAreaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAreaCompleted(this, new SendAreaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMMS(
                    string cUserName, 
                    string cPassword, 
                    string cBody, 
                    string cSmsnumber, 
                    string cGetid, 
                    int nCMessage, 
                    int nTypeSent, 
                    string m_SchedulDate, 
                    string cDomainname, 
                    string cFromNumber, 
                    int nSpeedsms, 
                    int nPeriodmin, 
                    string cstarttime, 
                    string cEndTime, 
                    string title, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] logo, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] image) {
            object[] results = this.Invoke("SendMMS", new object[] {
                        cUserName,
                        cPassword,
                        cBody,
                        cSmsnumber,
                        cGetid,
                        nCMessage,
                        nTypeSent,
                        m_SchedulDate,
                        cDomainname,
                        cFromNumber,
                        nSpeedsms,
                        nPeriodmin,
                        cstarttime,
                        cEndTime,
                        title,
                        logo,
                        image});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendMMSAsync(
                    string cUserName, 
                    string cPassword, 
                    string cBody, 
                    string cSmsnumber, 
                    string cGetid, 
                    int nCMessage, 
                    int nTypeSent, 
                    string m_SchedulDate, 
                    string cDomainname, 
                    string cFromNumber, 
                    int nSpeedsms, 
                    int nPeriodmin, 
                    string cstarttime, 
                    string cEndTime, 
                    string title, 
                    byte[] logo, 
                    byte[] image) {
            this.SendMMSAsync(cUserName, cPassword, cBody, cSmsnumber, cGetid, nCMessage, nTypeSent, m_SchedulDate, cDomainname, cFromNumber, nSpeedsms, nPeriodmin, cstarttime, cEndTime, title, logo, image, null);
        }
        
        /// <remarks/>
        public void SendMMSAsync(
                    string cUserName, 
                    string cPassword, 
                    string cBody, 
                    string cSmsnumber, 
                    string cGetid, 
                    int nCMessage, 
                    int nTypeSent, 
                    string m_SchedulDate, 
                    string cDomainname, 
                    string cFromNumber, 
                    int nSpeedsms, 
                    int nPeriodmin, 
                    string cstarttime, 
                    string cEndTime, 
                    string title, 
                    byte[] logo, 
                    byte[] image, 
                    object userState) {
            if ((this.SendMMSOperationCompleted == null)) {
                this.SendMMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMMSOperationCompleted);
            }
            this.InvokeAsync("SendMMS", new object[] {
                        cUserName,
                        cPassword,
                        cBody,
                        cSmsnumber,
                        cGetid,
                        nCMessage,
                        nTypeSent,
                        m_SchedulDate,
                        cDomainname,
                        cFromNumber,
                        nSpeedsms,
                        nPeriodmin,
                        cstarttime,
                        cEndTime,
                        title,
                        logo,
                        image}, this.SendMMSOperationCompleted, userState);
        }
        
        private void OnSendMMSOperationCompleted(object arg) {
            if ((this.SendMMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMMSCompleted(this, new SendMMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSmsShort", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSmsShort(string cUserName, string cPassword, string cBody, string cSmsnumber, string cDomainname) {
            object[] results = this.Invoke("SendSmsShort", new object[] {
                        cUserName,
                        cPassword,
                        cBody,
                        cSmsnumber,
                        cDomainname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsShortAsync(string cUserName, string cPassword, string cBody, string cSmsnumber, string cDomainname) {
            this.SendSmsShortAsync(cUserName, cPassword, cBody, cSmsnumber, cDomainname, null);
        }
        
        /// <remarks/>
        public void SendSmsShortAsync(string cUserName, string cPassword, string cBody, string cSmsnumber, string cDomainname, object userState) {
            if ((this.SendSmsShortOperationCompleted == null)) {
                this.SendSmsShortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsShortOperationCompleted);
            }
            this.InvokeAsync("SendSmsShort", new object[] {
                        cUserName,
                        cPassword,
                        cBody,
                        cSmsnumber,
                        cDomainname}, this.SendSmsShortOperationCompleted, userState);
        }
        
        private void OnSendSmsShortOperationCompleted(object arg) {
            if ((this.SendSmsShortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsShortCompleted(this, new SendSmsShortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendSms(string cUserName, string cPassword, string cBody, string cSmsnumber, string cGetid, int nCMessage, int nTypeSent, string m_SchedulDate, string cDomainname, string cFromNumber, int nSpeedsms, int nPeriodmin, string cstarttime, string cEndTime) {
            object[] results = this.Invoke("SendSms", new object[] {
                        cUserName,
                        cPassword,
                        cBody,
                        cSmsnumber,
                        cGetid,
                        nCMessage,
                        nTypeSent,
                        m_SchedulDate,
                        cDomainname,
                        cFromNumber,
                        nSpeedsms,
                        nPeriodmin,
                        cstarttime,
                        cEndTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendSmsAsync(string cUserName, string cPassword, string cBody, string cSmsnumber, string cGetid, int nCMessage, int nTypeSent, string m_SchedulDate, string cDomainname, string cFromNumber, int nSpeedsms, int nPeriodmin, string cstarttime, string cEndTime) {
            this.SendSmsAsync(cUserName, cPassword, cBody, cSmsnumber, cGetid, nCMessage, nTypeSent, m_SchedulDate, cDomainname, cFromNumber, nSpeedsms, nPeriodmin, cstarttime, cEndTime, null);
        }
        
        /// <remarks/>
        public void SendSmsAsync(string cUserName, string cPassword, string cBody, string cSmsnumber, string cGetid, int nCMessage, int nTypeSent, string m_SchedulDate, string cDomainname, string cFromNumber, int nSpeedsms, int nPeriodmin, string cstarttime, string cEndTime, object userState) {
            if ((this.SendSmsOperationCompleted == null)) {
                this.SendSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSmsOperationCompleted);
            }
            this.InvokeAsync("SendSms", new object[] {
                        cUserName,
                        cPassword,
                        cBody,
                        cSmsnumber,
                        cGetid,
                        nCMessage,
                        nTypeSent,
                        m_SchedulDate,
                        cDomainname,
                        cFromNumber,
                        nSpeedsms,
                        nPeriodmin,
                        cstarttime,
                        cEndTime}, this.SendSmsOperationCompleted, userState);
        }
        
        private void OnSendSmsOperationCompleted(object arg) {
            if ((this.SendSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSmsCompleted(this, new SendSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFeeSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] CheckFeeSms(string[] cSystemChecker) {
            object[] results = this.Invoke("CheckFeeSms", new object[] {
                        cSystemChecker});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckFeeSmsAsync(string[] cSystemChecker) {
            this.CheckFeeSmsAsync(cSystemChecker, null);
        }
        
        /// <remarks/>
        public void CheckFeeSmsAsync(string[] cSystemChecker, object userState) {
            if ((this.CheckFeeSmsOperationCompleted == null)) {
                this.CheckFeeSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFeeSmsOperationCompleted);
            }
            this.InvokeAsync("CheckFeeSms", new object[] {
                        cSystemChecker}, this.CheckFeeSmsOperationCompleted, userState);
        }
        
        private void OnCheckFeeSmsOperationCompleted(object arg) {
            if ((this.CheckFeeSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFeeSmsCompleted(this, new CheckFeeSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSms1To1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] SendSms1To1(string cDomainname, string cUserName, string cPassword, string[] aBody, string[] aMobileno, long[] aGetid, int[] aCMessage, string[] aFromNumber, int[] atypeUnicodemessage, string[] am_SchedulDate, int nTypeSent, int nSpeedsms, int nPeriodmin) {
            object[] results = this.Invoke("SendSms1To1", new object[] {
                        cDomainname,
                        cUserName,
                        cPassword,
                        aBody,
                        aMobileno,
                        aGetid,
                        aCMessage,
                        aFromNumber,
                        atypeUnicodemessage,
                        am_SchedulDate,
                        nTypeSent,
                        nSpeedsms,
                        nPeriodmin});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void SendSms1To1Async(string cDomainname, string cUserName, string cPassword, string[] aBody, string[] aMobileno, long[] aGetid, int[] aCMessage, string[] aFromNumber, int[] atypeUnicodemessage, string[] am_SchedulDate, int nTypeSent, int nSpeedsms, int nPeriodmin) {
            this.SendSms1To1Async(cDomainname, cUserName, cPassword, aBody, aMobileno, aGetid, aCMessage, aFromNumber, atypeUnicodemessage, am_SchedulDate, nTypeSent, nSpeedsms, nPeriodmin, null);
        }
        
        /// <remarks/>
        public void SendSms1To1Async(string cDomainname, string cUserName, string cPassword, string[] aBody, string[] aMobileno, long[] aGetid, int[] aCMessage, string[] aFromNumber, int[] atypeUnicodemessage, string[] am_SchedulDate, int nTypeSent, int nSpeedsms, int nPeriodmin, object userState) {
            if ((this.SendSms1To1OperationCompleted == null)) {
                this.SendSms1To1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSms1To1OperationCompleted);
            }
            this.InvokeAsync("SendSms1To1", new object[] {
                        cDomainname,
                        cUserName,
                        cPassword,
                        aBody,
                        aMobileno,
                        aGetid,
                        aCMessage,
                        aFromNumber,
                        atypeUnicodemessage,
                        am_SchedulDate,
                        nTypeSent,
                        nSpeedsms,
                        nPeriodmin}, this.SendSms1To1OperationCompleted, userState);
        }
        
        private void OnSendSms1To1OperationCompleted(object arg) {
            if ((this.SendSms1To1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSms1To1Completed(this, new SendSms1To1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDelivery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDelivery(string cUserName, string cPassword, string[] aSid) {
            object[] results = this.Invoke("GetDelivery", new object[] {
                        cUserName,
                        cPassword,
                        aSid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryAsync(string cUserName, string cPassword, string[] aSid) {
            this.GetDeliveryAsync(cUserName, cPassword, aSid, null);
        }
        
        /// <remarks/>
        public void GetDeliveryAsync(string cUserName, string cPassword, string[] aSid, object userState) {
            if ((this.GetDeliveryOperationCompleted == null)) {
                this.GetDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryOperationCompleted);
            }
            this.InvokeAsync("GetDelivery", new object[] {
                        cUserName,
                        cPassword,
                        aSid}, this.GetDeliveryOperationCompleted, userState);
        }
        
        private void OnGetDeliveryOperationCompleted(object arg) {
            if ((this.GetDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryCompleted(this, new GetDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangePassword(string cUserName, string cPassword, string cNewPassword, string cDomainName) {
            object[] results = this.Invoke("ChangePassword", new object[] {
                        cUserName,
                        cPassword,
                        cNewPassword,
                        cDomainName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string cUserName, string cPassword, string cNewPassword, string cDomainName) {
            this.ChangePasswordAsync(cUserName, cPassword, cNewPassword, cDomainName, null);
        }
        
        /// <remarks/>
        public void ChangePasswordAsync(string cUserName, string cPassword, string cNewPassword, string cDomainName, object userState) {
            if ((this.ChangePasswordOperationCompleted == null)) {
                this.ChangePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangePasswordOperationCompleted);
            }
            this.InvokeAsync("ChangePassword", new object[] {
                        cUserName,
                        cPassword,
                        cNewPassword,
                        cDomainName}, this.ChangePasswordOperationCompleted, userState);
        }
        
        private void OnChangePasswordOperationCompleted(object arg) {
            if ((this.ChangePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetuserInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetuserInfo(string cUserName, string cPassword, string cDomainName) {
            object[] results = this.Invoke("GetuserInfo", new object[] {
                        cUserName,
                        cPassword,
                        cDomainName});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetuserInfoAsync(string cUserName, string cPassword, string cDomainName) {
            this.GetuserInfoAsync(cUserName, cPassword, cDomainName, null);
        }
        
        /// <remarks/>
        public void GetuserInfoAsync(string cUserName, string cPassword, string cDomainName, object userState) {
            if ((this.GetuserInfoOperationCompleted == null)) {
                this.GetuserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetuserInfoOperationCompleted);
            }
            this.InvokeAsync("GetuserInfo", new object[] {
                        cUserName,
                        cPassword,
                        cDomainName}, this.GetuserInfoOperationCompleted, userState);
        }
        
        private void OnGetuserInfoOperationCompleted(object arg) {
            if ((this.GetuserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetuserInfoCompleted(this, new GetuserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDeliveryWithGetid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetDeliveryWithGetid(string cUserName, string cPassword, string cGetid, bool lReturnSid, string cDomainname) {
            object[] results = this.Invoke("GetDeliveryWithGetid", new object[] {
                        cUserName,
                        cPassword,
                        cGetid,
                        lReturnSid,
                        cDomainname});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDeliveryWithGetidAsync(string cUserName, string cPassword, string cGetid, bool lReturnSid, string cDomainname) {
            this.GetDeliveryWithGetidAsync(cUserName, cPassword, cGetid, lReturnSid, cDomainname, null);
        }
        
        /// <remarks/>
        public void GetDeliveryWithGetidAsync(string cUserName, string cPassword, string cGetid, bool lReturnSid, string cDomainname, object userState) {
            if ((this.GetDeliveryWithGetidOperationCompleted == null)) {
                this.GetDeliveryWithGetidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeliveryWithGetidOperationCompleted);
            }
            this.InvokeAsync("GetDeliveryWithGetid", new object[] {
                        cUserName,
                        cPassword,
                        cGetid,
                        lReturnSid,
                        cDomainname}, this.GetDeliveryWithGetidOperationCompleted, userState);
        }
        
        private void OnGetDeliveryWithGetidOperationCompleted(object arg) {
            if ((this.GetDeliveryWithGetidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeliveryWithGetidCompleted(this, new GetDeliveryWithGetidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceivesmsLowLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReceivesmsLowLevel(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromnumber, ref string[] aBody, ref string[] aMobileno, ref long[] aMessageid, ref string[] aReceivedate, ref string[] afromnumber) {
            object[] results = this.Invoke("ReceivesmsLowLevel", new object[] {
                        cUserName,
                        cPassword,
                        lReceiveAllmsg,
                        cDomainName,
                        cFromnumber,
                        aBody,
                        aMobileno,
                        aMessageid,
                        aReceivedate,
                        afromnumber});
            aBody = ((string[])(results[0]));
            aMobileno = ((string[])(results[1]));
            aMessageid = ((long[])(results[2]));
            aReceivedate = ((string[])(results[3]));
            afromnumber = ((string[])(results[4]));
        }
        
        /// <remarks/>
        public void ReceivesmsLowLevelAsync(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromnumber, string[] aBody, string[] aMobileno, long[] aMessageid, string[] aReceivedate, string[] afromnumber) {
            this.ReceivesmsLowLevelAsync(cUserName, cPassword, lReceiveAllmsg, cDomainName, cFromnumber, aBody, aMobileno, aMessageid, aReceivedate, afromnumber, null);
        }
        
        /// <remarks/>
        public void ReceivesmsLowLevelAsync(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromnumber, string[] aBody, string[] aMobileno, long[] aMessageid, string[] aReceivedate, string[] afromnumber, object userState) {
            if ((this.ReceivesmsLowLevelOperationCompleted == null)) {
                this.ReceivesmsLowLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceivesmsLowLevelOperationCompleted);
            }
            this.InvokeAsync("ReceivesmsLowLevel", new object[] {
                        cUserName,
                        cPassword,
                        lReceiveAllmsg,
                        cDomainName,
                        cFromnumber,
                        aBody,
                        aMobileno,
                        aMessageid,
                        aReceivedate,
                        afromnumber}, this.ReceivesmsLowLevelOperationCompleted, userState);
        }
        
        private void OnReceivesmsLowLevelOperationCompleted(object arg) {
            if ((this.ReceivesmsLowLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceivesmsLowLevelCompleted(this, new ReceivesmsLowLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReceiveSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ReceiveSms(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromnumber, string cFromDate, string cToDate) {
            object[] results = this.Invoke("ReceiveSms", new object[] {
                        cUserName,
                        cPassword,
                        lReceiveAllmsg,
                        cDomainName,
                        cFromnumber,
                        cFromDate,
                        cToDate});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ReceiveSmsAsync(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromnumber, string cFromDate, string cToDate) {
            this.ReceiveSmsAsync(cUserName, cPassword, lReceiveAllmsg, cDomainName, cFromnumber, cFromDate, cToDate, null);
        }
        
        /// <remarks/>
        public void ReceiveSmsAsync(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromnumber, string cFromDate, string cToDate, object userState) {
            if ((this.ReceiveSmsOperationCompleted == null)) {
                this.ReceiveSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReceiveSmsOperationCompleted);
            }
            this.InvokeAsync("ReceiveSms", new object[] {
                        cUserName,
                        cPassword,
                        lReceiveAllmsg,
                        cDomainName,
                        cFromnumber,
                        cFromDate,
                        cToDate}, this.ReceiveSmsOperationCompleted, userState);
        }
        
        private void OnReceiveSmsOperationCompleted(object arg) {
            if ((this.ReceiveSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReceiveSmsCompleted(this, new ReceiveSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteReceivedMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] DeleteReceivedMessages(string cUserName, string cPassword, string cDomainName, long[] nMessageIds) {
            object[] results = this.Invoke("DeleteReceivedMessages", new object[] {
                        cUserName,
                        cPassword,
                        cDomainName,
                        nMessageIds});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void DeleteReceivedMessagesAsync(string cUserName, string cPassword, string cDomainName, long[] nMessageIds) {
            this.DeleteReceivedMessagesAsync(cUserName, cPassword, cDomainName, nMessageIds, null);
        }
        
        /// <remarks/>
        public void DeleteReceivedMessagesAsync(string cUserName, string cPassword, string cDomainName, long[] nMessageIds, object userState) {
            if ((this.DeleteReceivedMessagesOperationCompleted == null)) {
                this.DeleteReceivedMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReceivedMessagesOperationCompleted);
            }
            this.InvokeAsync("DeleteReceivedMessages", new object[] {
                        cUserName,
                        cPassword,
                        cDomainName,
                        nMessageIds}, this.DeleteReceivedMessagesOperationCompleted, userState);
        }
        
        private void OnDeleteReceivedMessagesOperationCompleted(object arg) {
            if ((this.DeleteReceivedMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReceivedMessagesCompleted(this, new DeleteReceivedMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeReceiveNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ChangeReceiveNo(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromNumber) {
            object[] results = this.Invoke("ChangeReceiveNo", new object[] {
                        cUserName,
                        cPassword,
                        lReceiveAllmsg,
                        cDomainName,
                        cFromNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeReceiveNoAsync(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromNumber) {
            this.ChangeReceiveNoAsync(cUserName, cPassword, lReceiveAllmsg, cDomainName, cFromNumber, null);
        }
        
        /// <remarks/>
        public void ChangeReceiveNoAsync(string cUserName, string cPassword, bool lReceiveAllmsg, string cDomainName, string cFromNumber, object userState) {
            if ((this.ChangeReceiveNoOperationCompleted == null)) {
                this.ChangeReceiveNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeReceiveNoOperationCompleted);
            }
            this.InvokeAsync("ChangeReceiveNo", new object[] {
                        cUserName,
                        cPassword,
                        lReceiveAllmsg,
                        cDomainName,
                        cFromNumber}, this.ChangeReceiveNoOperationCompleted, userState);
        }
        
        private void OnChangeReceiveNoOperationCompleted(object arg) {
            if ((this.ChangeReceiveNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeReceiveNoCompleted(this, new ChangeReceiveNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SmsTrySendToServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmsTrySendToServer(int naccountUsesid) {
            object[] results = this.Invoke("SmsTrySendToServer", new object[] {
                        naccountUsesid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmsTrySendToServerAsync(int naccountUsesid) {
            this.SmsTrySendToServerAsync(naccountUsesid, null);
        }
        
        /// <remarks/>
        public void SmsTrySendToServerAsync(int naccountUsesid, object userState) {
            if ((this.SmsTrySendToServerOperationCompleted == null)) {
                this.SmsTrySendToServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmsTrySendToServerOperationCompleted);
            }
            this.InvokeAsync("SmsTrySendToServer", new object[] {
                        naccountUsesid}, this.SmsTrySendToServerOperationCompleted, userState);
        }
        
        private void OnSmsTrySendToServerOperationCompleted(object arg) {
            if ((this.SmsTrySendToServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmsTrySendToServerCompleted(this, new SmsTrySendToServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SmsTrySendToServer1To1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmsTrySendToServer1To1() {
            object[] results = this.Invoke("SmsTrySendToServer1To1", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmsTrySendToServer1To1Async() {
            this.SmsTrySendToServer1To1Async(null);
        }
        
        /// <remarks/>
        public void SmsTrySendToServer1To1Async(object userState) {
            if ((this.SmsTrySendToServer1To1OperationCompleted == null)) {
                this.SmsTrySendToServer1To1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmsTrySendToServer1To1OperationCompleted);
            }
            this.InvokeAsync("SmsTrySendToServer1To1", new object[0], this.SmsTrySendToServer1To1OperationCompleted, userState);
        }
        
        private void OnSmsTrySendToServer1To1OperationCompleted(object arg) {
            if ((this.SmsTrySendToServer1To1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmsTrySendToServer1To1Completed(this, new SmsTrySendToServer1To1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageDelivery1to1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetMessageDelivery1to1(string cUserName, string cPassword, string cDomainname, long[] longid) {
            object[] results = this.Invoke("GetMessageDelivery1to1", new object[] {
                        cUserName,
                        cPassword,
                        cDomainname,
                        longid});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageDelivery1to1Async(string cUserName, string cPassword, string cDomainname, long[] longid) {
            this.GetMessageDelivery1to1Async(cUserName, cPassword, cDomainname, longid, null);
        }
        
        /// <remarks/>
        public void GetMessageDelivery1to1Async(string cUserName, string cPassword, string cDomainname, long[] longid, object userState) {
            if ((this.GetMessageDelivery1to1OperationCompleted == null)) {
                this.GetMessageDelivery1to1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageDelivery1to1OperationCompleted);
            }
            this.InvokeAsync("GetMessageDelivery1to1", new object[] {
                        cUserName,
                        cPassword,
                        cDomainname,
                        longid}, this.GetMessageDelivery1to1OperationCompleted, userState);
        }
        
        private void OnGetMessageDelivery1to1OperationCompleted(object arg) {
            if ((this.GetMessageDelivery1to1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageDelivery1to1Completed(this, new GetMessageDelivery1to1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getMessageIds1to1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] getMessageIds1to1(string cUserName, string cPassword, string cDomainname, long[] nCustomerid) {
            object[] results = this.Invoke("getMessageIds1to1", new object[] {
                        cUserName,
                        cPassword,
                        cDomainname,
                        nCustomerid});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void getMessageIds1to1Async(string cUserName, string cPassword, string cDomainname, long[] nCustomerid) {
            this.getMessageIds1to1Async(cUserName, cPassword, cDomainname, nCustomerid, null);
        }
        
        /// <remarks/>
        public void getMessageIds1to1Async(string cUserName, string cPassword, string cDomainname, long[] nCustomerid, object userState) {
            if ((this.getMessageIds1to1OperationCompleted == null)) {
                this.getMessageIds1to1OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMessageIds1to1OperationCompleted);
            }
            this.InvokeAsync("getMessageIds1to1", new object[] {
                        cUserName,
                        cPassword,
                        cDomainname,
                        nCustomerid}, this.getMessageIds1to1OperationCompleted, userState);
        }
        
        private void OngetMessageIds1to1OperationCompleted(object arg) {
            if ((this.getMessageIds1to1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMessageIds1to1Completed(this, new getMessageIds1to1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckValidMobileAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckValidMobileAll(string cCommand) {
            this.Invoke("CheckValidMobileAll", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void CheckValidMobileAllAsync(string cCommand) {
            this.CheckValidMobileAllAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void CheckValidMobileAllAsync(string cCommand, object userState) {
            if ((this.CheckValidMobileAllOperationCompleted == null)) {
                this.CheckValidMobileAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidMobileAllOperationCompleted);
            }
            this.InvokeAsync("CheckValidMobileAll", new object[] {
                        cCommand}, this.CheckValidMobileAllOperationCompleted, userState);
        }
        
        private void OnCheckValidMobileAllOperationCompleted(object arg) {
            if ((this.CheckValidMobileAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidMobileAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getmsgmagfa", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void getmsgmagfa() {
            this.Invoke("getmsgmagfa", new object[0]);
        }
        
        /// <remarks/>
        public void getmsgmagfaAsync() {
            this.getmsgmagfaAsync(null);
        }
        
        /// <remarks/>
        public void getmsgmagfaAsync(object userState) {
            if ((this.getmsgmagfaOperationCompleted == null)) {
                this.getmsgmagfaOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetmsgmagfaOperationCompleted);
            }
            this.InvokeAsync("getmsgmagfa", new object[0], this.getmsgmagfaOperationCompleted, userState);
        }
        
        private void OngetmsgmagfaOperationCompleted(object arg) {
            if ((this.getmsgmagfaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getmsgmagfaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SmsSentToServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmsSentToServer(int naccountUsesid) {
            object[] results = this.Invoke("SmsSentToServer", new object[] {
                        naccountUsesid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmsSentToServerAsync(int naccountUsesid) {
            this.SmsSentToServerAsync(naccountUsesid, null);
        }
        
        /// <remarks/>
        public void SmsSentToServerAsync(int naccountUsesid, object userState) {
            if ((this.SmsSentToServerOperationCompleted == null)) {
                this.SmsSentToServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmsSentToServerOperationCompleted);
            }
            this.InvokeAsync("SmsSentToServer", new object[] {
                        naccountUsesid}, this.SmsSentToServerOperationCompleted, userState);
        }
        
        private void OnSmsSentToServerOperationCompleted(object arg) {
            if ((this.SmsSentToServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmsSentToServerCompleted(this, new SmsSentToServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SmsSentToServer1To1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SmsSentToServer1To1(int naccountid, string cServerName) {
            object[] results = this.Invoke("SmsSentToServer1To1", new object[] {
                        naccountid,
                        cServerName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SmsSentToServer1To1Async(int naccountid, string cServerName) {
            this.SmsSentToServer1To1Async(naccountid, cServerName, null);
        }
        
        /// <remarks/>
        public void SmsSentToServer1To1Async(int naccountid, string cServerName, object userState) {
            if ((this.SmsSentToServer1To1OperationCompleted == null)) {
                this.SmsSentToServer1To1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSmsSentToServer1To1OperationCompleted);
            }
            this.InvokeAsync("SmsSentToServer1To1", new object[] {
                        naccountid,
                        cServerName}, this.SmsSentToServer1To1OperationCompleted, userState);
        }
        
        private void OnSmsSentToServer1To1OperationCompleted(object arg) {
            if ((this.SmsSentToServer1To1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SmsSentToServer1To1Completed(this, new SmsSentToServer1To1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ShowError", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ShowError(string cErrorCode, string cLanShow) {
            object[] results = this.Invoke("ShowError", new object[] {
                        cErrorCode,
                        cLanShow});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ShowErrorAsync(string cErrorCode, string cLanShow) {
            this.ShowErrorAsync(cErrorCode, cLanShow, null);
        }
        
        /// <remarks/>
        public void ShowErrorAsync(string cErrorCode, string cLanShow, object userState) {
            if ((this.ShowErrorOperationCompleted == null)) {
                this.ShowErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShowErrorOperationCompleted);
            }
            this.InvokeAsync("ShowError", new object[] {
                        cErrorCode,
                        cLanShow}, this.ShowErrorOperationCompleted, userState);
        }
        
        private void OnShowErrorOperationCompleted(object arg) {
            if ((this.ShowErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShowErrorCompleted(this, new ShowErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageLength", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMessageLength(string cBody) {
            object[] results = this.Invoke("GetMessageLength", new object[] {
                        cBody});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageLengthAsync(string cBody) {
            this.GetMessageLengthAsync(cBody, null);
        }
        
        /// <remarks/>
        public void GetMessageLengthAsync(string cBody, object userState) {
            if ((this.GetMessageLengthOperationCompleted == null)) {
                this.GetMessageLengthOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageLengthOperationCompleted);
            }
            this.InvokeAsync("GetMessageLength", new object[] {
                        cBody}, this.GetMessageLengthOperationCompleted, userState);
        }
        
        private void OnGetMessageLengthOperationCompleted(object arg) {
            if ((this.GetMessageLengthCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageLengthCompleted(this, new GetMessageLengthCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnicodeMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetUnicodeMessage(string cBody) {
            object[] results = this.Invoke("GetUnicodeMessage", new object[] {
                        cBody});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetUnicodeMessageAsync(string cBody) {
            this.GetUnicodeMessageAsync(cBody, null);
        }
        
        /// <remarks/>
        public void GetUnicodeMessageAsync(string cBody, object userState) {
            if ((this.GetUnicodeMessageOperationCompleted == null)) {
                this.GetUnicodeMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnicodeMessageOperationCompleted);
            }
            this.InvokeAsync("GetUnicodeMessage", new object[] {
                        cBody}, this.GetUnicodeMessageOperationCompleted, userState);
        }
        
        private void OnGetUnicodeMessageOperationCompleted(object arg) {
            if ((this.GetUnicodeMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnicodeMessageCompleted(this, new GetUnicodeMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSms(string cFrom, string cTo, string cText, string cEnterRed_Date, string cStatus, string cMessageId, string cCommand, string cgsmid) {
            object[] results = this.Invoke("GetSms", new object[] {
                        cFrom,
                        cTo,
                        cText,
                        cEnterRed_Date,
                        cStatus,
                        cMessageId,
                        cCommand,
                        cgsmid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSmsAsync(string cFrom, string cTo, string cText, string cEnterRed_Date, string cStatus, string cMessageId, string cCommand, string cgsmid) {
            this.GetSmsAsync(cFrom, cTo, cText, cEnterRed_Date, cStatus, cMessageId, cCommand, cgsmid, null);
        }
        
        /// <remarks/>
        public void GetSmsAsync(string cFrom, string cTo, string cText, string cEnterRed_Date, string cStatus, string cMessageId, string cCommand, string cgsmid, object userState) {
            if ((this.GetSmsOperationCompleted == null)) {
                this.GetSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSmsOperationCompleted);
            }
            this.InvokeAsync("GetSms", new object[] {
                        cFrom,
                        cTo,
                        cText,
                        cEnterRed_Date,
                        cStatus,
                        cMessageId,
                        cCommand,
                        cgsmid}, this.GetSmsOperationCompleted, userState);
        }
        
        private void OnGetSmsOperationCompleted(object arg) {
            if ((this.GetSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSmsCompleted(this, new GetSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendtraffictoUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendtraffictoUser(long nAccountusesid, string cUserid) {
            this.Invoke("SendtraffictoUser", new object[] {
                        nAccountusesid,
                        cUserid});
        }
        
        /// <remarks/>
        public void SendtraffictoUserAsync(long nAccountusesid, string cUserid) {
            this.SendtraffictoUserAsync(nAccountusesid, cUserid, null);
        }
        
        /// <remarks/>
        public void SendtraffictoUserAsync(long nAccountusesid, string cUserid, object userState) {
            if ((this.SendtraffictoUserOperationCompleted == null)) {
                this.SendtraffictoUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendtraffictoUserOperationCompleted);
            }
            this.InvokeAsync("SendtraffictoUser", new object[] {
                        nAccountusesid,
                        cUserid}, this.SendtraffictoUserOperationCompleted, userState);
        }
        
        private void OnSendtraffictoUserOperationCompleted(object arg) {
            if ((this.SendtraffictoUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendtraffictoUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendRecTocustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendRecTocustomer(string cCommand) {
            this.Invoke("SendRecTocustomer", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void SendRecTocustomerAsync(string cCommand) {
            this.SendRecTocustomerAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void SendRecTocustomerAsync(string cCommand, object userState) {
            if ((this.SendRecTocustomerOperationCompleted == null)) {
                this.SendRecTocustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendRecTocustomerOperationCompleted);
            }
            this.InvokeAsync("SendRecTocustomer", new object[] {
                        cCommand}, this.SendRecTocustomerOperationCompleted, userState);
        }
        
        private void OnSendRecTocustomerOperationCompleted(object arg) {
            if ((this.SendRecTocustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendRecTocustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Sendtoc1Customer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Sendtoc1Customer(string cAccountid) {
            this.Invoke("Sendtoc1Customer", new object[] {
                        cAccountid});
        }
        
        /// <remarks/>
        public void Sendtoc1CustomerAsync(string cAccountid) {
            this.Sendtoc1CustomerAsync(cAccountid, null);
        }
        
        /// <remarks/>
        public void Sendtoc1CustomerAsync(string cAccountid, object userState) {
            if ((this.Sendtoc1CustomerOperationCompleted == null)) {
                this.Sendtoc1CustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendtoc1CustomerOperationCompleted);
            }
            this.InvokeAsync("Sendtoc1Customer", new object[] {
                        cAccountid}, this.Sendtoc1CustomerOperationCompleted, userState);
        }
        
        private void OnSendtoc1CustomerOperationCompleted(object arg) {
            if ((this.Sendtoc1CustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sendtoc1CustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getsms80", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Getsms80(string cCommand) {
            this.Invoke("Getsms80", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void Getsms80Async(string cCommand) {
            this.Getsms80Async(cCommand, null);
        }
        
        /// <remarks/>
        public void Getsms80Async(string cCommand, object userState) {
            if ((this.Getsms80OperationCompleted == null)) {
                this.Getsms80OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetsms80OperationCompleted);
            }
            this.InvokeAsync("Getsms80", new object[] {
                        cCommand}, this.Getsms80OperationCompleted, userState);
        }
        
        private void OnGetsms80OperationCompleted(object arg) {
            if ((this.Getsms80Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Getsms80Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDeltoCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendDeltoCustomer(string cCommand) {
            this.Invoke("SendDeltoCustomer", new object[] {
                        cCommand});
        }
        
        /// <remarks/>
        public void SendDeltoCustomerAsync(string cCommand) {
            this.SendDeltoCustomerAsync(cCommand, null);
        }
        
        /// <remarks/>
        public void SendDeltoCustomerAsync(string cCommand, object userState) {
            if ((this.SendDeltoCustomerOperationCompleted == null)) {
                this.SendDeltoCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDeltoCustomerOperationCompleted);
            }
            this.InvokeAsync("SendDeltoCustomer", new object[] {
                        cCommand}, this.SendDeltoCustomerOperationCompleted, userState);
        }
        
        private void OnSendDeltoCustomerOperationCompleted(object arg) {
            if ((this.SendDeltoCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDeltoCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendTocus1MobUses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendTocus1MobUses(string cAccountid) {
            this.Invoke("SendTocus1MobUses", new object[] {
                        cAccountid});
        }
        
        /// <remarks/>
        public void SendTocus1MobUsesAsync(string cAccountid) {
            this.SendTocus1MobUsesAsync(cAccountid, null);
        }
        
        /// <remarks/>
        public void SendTocus1MobUsesAsync(string cAccountid, object userState) {
            if ((this.SendTocus1MobUsesOperationCompleted == null)) {
                this.SendTocus1MobUsesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTocus1MobUsesOperationCompleted);
            }
            this.InvokeAsync("SendTocus1MobUses", new object[] {
                        cAccountid}, this.SendTocus1MobUsesOperationCompleted, userState);
        }
        
        private void OnSendTocus1MobUsesOperationCompleted(object arg) {
            if ((this.SendTocus1MobUsesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTocus1MobUsesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendToCus1bulkDel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendToCus1bulkDel(string cAccountid) {
            this.Invoke("SendToCus1bulkDel", new object[] {
                        cAccountid});
        }
        
        /// <remarks/>
        public void SendToCus1bulkDelAsync(string cAccountid) {
            this.SendToCus1bulkDelAsync(cAccountid, null);
        }
        
        /// <remarks/>
        public void SendToCus1bulkDelAsync(string cAccountid, object userState) {
            if ((this.SendToCus1bulkDelOperationCompleted == null)) {
                this.SendToCus1bulkDelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendToCus1bulkDelOperationCompleted);
            }
            this.InvokeAsync("SendToCus1bulkDel", new object[] {
                        cAccountid}, this.SendToCus1bulkDelOperationCompleted, userState);
        }
        
        private void OnSendToCus1bulkDelOperationCompleted(object arg) {
            if ((this.SendToCus1bulkDelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendToCus1bulkDelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/mehrafrazDelivery", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] mehrafrazDelivery(string cCommand, string cFormatSms, long[] asid, int[] nsmsstatus, string[] adate) {
            object[] results = this.Invoke("mehrafrazDelivery", new object[] {
                        cCommand,
                        cFormatSms,
                        asid,
                        nsmsstatus,
                        adate});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void mehrafrazDeliveryAsync(string cCommand, string cFormatSms, long[] asid, int[] nsmsstatus, string[] adate) {
            this.mehrafrazDeliveryAsync(cCommand, cFormatSms, asid, nsmsstatus, adate, null);
        }
        
        /// <remarks/>
        public void mehrafrazDeliveryAsync(string cCommand, string cFormatSms, long[] asid, int[] nsmsstatus, string[] adate, object userState) {
            if ((this.mehrafrazDeliveryOperationCompleted == null)) {
                this.mehrafrazDeliveryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmehrafrazDeliveryOperationCompleted);
            }
            this.InvokeAsync("mehrafrazDelivery", new object[] {
                        cCommand,
                        cFormatSms,
                        asid,
                        nsmsstatus,
                        adate}, this.mehrafrazDeliveryOperationCompleted, userState);
        }
        
        private void OnmehrafrazDeliveryOperationCompleted(object arg) {
            if ((this.mehrafrazDeliveryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.mehrafrazDeliveryCompleted(this, new mehrafrazDeliveryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeliveryEvent80", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeliveryEvent80(string cCommand, bool lDeligate) {
            this.Invoke("DeliveryEvent80", new object[] {
                        cCommand,
                        lDeligate});
        }
        
        /// <remarks/>
        public void DeliveryEvent80Async(string cCommand, bool lDeligate) {
            this.DeliveryEvent80Async(cCommand, lDeligate, null);
        }
        
        /// <remarks/>
        public void DeliveryEvent80Async(string cCommand, bool lDeligate, object userState) {
            if ((this.DeliveryEvent80OperationCompleted == null)) {
                this.DeliveryEvent80OperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeliveryEvent80OperationCompleted);
            }
            this.InvokeAsync("DeliveryEvent80", new object[] {
                        cCommand,
                        lDeligate}, this.DeliveryEvent80OperationCompleted, userState);
        }
        
        private void OnDeliveryEvent80OperationCompleted(object arg) {
            if ((this.DeliveryEvent80Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeliveryEvent80Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendFax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendFax(string cUserName, string cPassword, string cDomainname, string cFaxselect, string cFaxnumber, string cMobileno, string m_SchedulDate) {
            object[] results = this.Invoke("SendFax", new object[] {
                        cUserName,
                        cPassword,
                        cDomainname,
                        cFaxselect,
                        cFaxnumber,
                        cMobileno,
                        m_SchedulDate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendFaxAsync(string cUserName, string cPassword, string cDomainname, string cFaxselect, string cFaxnumber, string cMobileno, string m_SchedulDate) {
            this.SendFaxAsync(cUserName, cPassword, cDomainname, cFaxselect, cFaxnumber, cMobileno, m_SchedulDate, null);
        }
        
        /// <remarks/>
        public void SendFaxAsync(string cUserName, string cPassword, string cDomainname, string cFaxselect, string cFaxnumber, string cMobileno, string m_SchedulDate, object userState) {
            if ((this.SendFaxOperationCompleted == null)) {
                this.SendFaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendFaxOperationCompleted);
            }
            this.InvokeAsync("SendFax", new object[] {
                        cUserName,
                        cPassword,
                        cDomainname,
                        cFaxselect,
                        cFaxnumber,
                        cMobileno,
                        m_SchedulDate}, this.SendFaxOperationCompleted, userState);
        }
        
        private void OnSendFaxOperationCompleted(object arg) {
            if ((this.SendFaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendFaxCompleted(this, new SendFaxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AutoFax", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AutoFax(int nAccountusesid) {
            this.Invoke("AutoFax", new object[] {
                        nAccountusesid});
        }
        
        /// <remarks/>
        public void AutoFaxAsync(int nAccountusesid) {
            this.AutoFaxAsync(nAccountusesid, null);
        }
        
        /// <remarks/>
        public void AutoFaxAsync(int nAccountusesid, object userState) {
            if ((this.AutoFaxOperationCompleted == null)) {
                this.AutoFaxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoFaxOperationCompleted);
            }
            this.InvokeAsync("AutoFax", new object[] {
                        nAccountusesid}, this.AutoFaxOperationCompleted, userState);
        }
        
        private void OnAutoFaxOperationCompleted(object arg) {
            if ((this.AutoFaxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoFaxCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FaxTransaction", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FaxTransaction(int nFaxUsesid) {
            this.Invoke("FaxTransaction", new object[] {
                        nFaxUsesid});
        }
        
        /// <remarks/>
        public void FaxTransactionAsync(int nFaxUsesid) {
            this.FaxTransactionAsync(nFaxUsesid, null);
        }
        
        /// <remarks/>
        public void FaxTransactionAsync(int nFaxUsesid, object userState) {
            if ((this.FaxTransactionOperationCompleted == null)) {
                this.FaxTransactionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFaxTransactionOperationCompleted);
            }
            this.InvokeAsync("FaxTransaction", new object[] {
                        nFaxUsesid}, this.FaxTransactionOperationCompleted, userState);
        }
        
        private void OnFaxTransactionOperationCompleted(object arg) {
            if ((this.FaxTransactionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FaxTransactionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/datagather", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool datagather(int naccountusesid, bool lsms) {
            object[] results = this.Invoke("datagather", new object[] {
                        naccountusesid,
                        lsms});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void datagatherAsync(int naccountusesid, bool lsms) {
            this.datagatherAsync(naccountusesid, lsms, null);
        }
        
        /// <remarks/>
        public void datagatherAsync(int naccountusesid, bool lsms, object userState) {
            if ((this.datagatherOperationCompleted == null)) {
                this.datagatherOperationCompleted = new System.Threading.SendOrPostCallback(this.OndatagatherOperationCompleted);
            }
            this.InvokeAsync("datagather", new object[] {
                        naccountusesid,
                        lsms}, this.datagatherOperationCompleted, userState);
        }
        
        private void OndatagatherOperationCompleted(object arg) {
            if ((this.datagatherCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.datagatherCompleted(this, new datagatherCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Matchgraph", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Matchgraph(string cDomainname, string cUsername, string cpassword, int nmatchid) {
            object[] results = this.Invoke("Matchgraph", new object[] {
                        cDomainname,
                        cUsername,
                        cpassword,
                        nmatchid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void MatchgraphAsync(string cDomainname, string cUsername, string cpassword, int nmatchid) {
            this.MatchgraphAsync(cDomainname, cUsername, cpassword, nmatchid, null);
        }
        
        /// <remarks/>
        public void MatchgraphAsync(string cDomainname, string cUsername, string cpassword, int nmatchid, object userState) {
            if ((this.MatchgraphOperationCompleted == null)) {
                this.MatchgraphOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMatchgraphOperationCompleted);
            }
            this.InvokeAsync("Matchgraph", new object[] {
                        cDomainname,
                        cUsername,
                        cpassword,
                        nmatchid}, this.MatchgraphOperationCompleted, userState);
        }
        
        private void OnMatchgraphOperationCompleted(object arg) {
            if ((this.MatchgraphCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MatchgraphCompleted(this, new MatchgraphCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Match", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Match(long naccountusesid) {
            object[] results = this.Invoke("Match", new object[] {
                        naccountusesid});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void MatchAsync(long naccountusesid) {
            this.MatchAsync(naccountusesid, null);
        }
        
        /// <remarks/>
        public void MatchAsync(long naccountusesid, object userState) {
            if ((this.MatchOperationCompleted == null)) {
                this.MatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMatchOperationCompleted);
            }
            this.InvokeAsync("Match", new object[] {
                        naccountusesid}, this.MatchOperationCompleted, userState);
        }
        
        private void OnMatchOperationCompleted(object arg) {
            if ((this.MatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MatchCompleted(this, new MatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Getdelivery1To1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Getdelivery1To1(string cCommand, int nTypesms) {
            this.Invoke("Getdelivery1To1", new object[] {
                        cCommand,
                        nTypesms});
        }
        
        /// <remarks/>
        public void Getdelivery1To1Async(string cCommand, int nTypesms) {
            this.Getdelivery1To1Async(cCommand, nTypesms, null);
        }
        
        /// <remarks/>
        public void Getdelivery1To1Async(string cCommand, int nTypesms, object userState) {
            if ((this.Getdelivery1To1OperationCompleted == null)) {
                this.Getdelivery1To1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetdelivery1To1OperationCompleted);
            }
            this.InvokeAsync("Getdelivery1To1", new object[] {
                        cCommand,
                        nTypesms}, this.Getdelivery1To1OperationCompleted, userState);
        }
        
        private void OnGetdelivery1To1OperationCompleted(object arg) {
            if ((this.Getdelivery1To1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Getdelivery1To1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDeliverFromServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckDeliverFromServer(int nAccountUsesid, int ntypeSms) {
            object[] results = this.Invoke("CheckDeliverFromServer", new object[] {
                        nAccountUsesid,
                        ntypeSms});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDeliverFromServerAsync(int nAccountUsesid, int ntypeSms) {
            this.CheckDeliverFromServerAsync(nAccountUsesid, ntypeSms, null);
        }
        
        /// <remarks/>
        public void CheckDeliverFromServerAsync(int nAccountUsesid, int ntypeSms, object userState) {
            if ((this.CheckDeliverFromServerOperationCompleted == null)) {
                this.CheckDeliverFromServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDeliverFromServerOperationCompleted);
            }
            this.InvokeAsync("CheckDeliverFromServer", new object[] {
                        nAccountUsesid,
                        ntypeSms}, this.CheckDeliverFromServerOperationCompleted, userState);
        }
        
        private void OnCheckDeliverFromServerOperationCompleted(object arg) {
            if ((this.CheckDeliverFromServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDeliverFromServerCompleted(this, new CheckDeliverFromServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkSendsmsToServer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void checkSendsmsToServer(string cCommand, int ndis) {
            this.Invoke("checkSendsmsToServer", new object[] {
                        cCommand,
                        ndis});
        }
        
        /// <remarks/>
        public void checkSendsmsToServerAsync(string cCommand, int ndis) {
            this.checkSendsmsToServerAsync(cCommand, ndis, null);
        }
        
        /// <remarks/>
        public void checkSendsmsToServerAsync(string cCommand, int ndis, object userState) {
            if ((this.checkSendsmsToServerOperationCompleted == null)) {
                this.checkSendsmsToServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSendsmsToServerOperationCompleted);
            }
            this.InvokeAsync("checkSendsmsToServer", new object[] {
                        cCommand,
                        ndis}, this.checkSendsmsToServerOperationCompleted, userState);
        }
        
        private void OncheckSendsmsToServerOperationCompleted(object arg) {
            if ((this.checkSendsmsToServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSendsmsToServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkSendsmsToServermagfa1To1", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void checkSendsmsToServermagfa1To1(string cCommand, string cServername) {
            this.Invoke("checkSendsmsToServermagfa1To1", new object[] {
                        cCommand,
                        cServername});
        }
        
        /// <remarks/>
        public void checkSendsmsToServermagfa1To1Async(string cCommand, string cServername) {
            this.checkSendsmsToServermagfa1To1Async(cCommand, cServername, null);
        }
        
        /// <remarks/>
        public void checkSendsmsToServermagfa1To1Async(string cCommand, string cServername, object userState) {
            if ((this.checkSendsmsToServermagfa1To1OperationCompleted == null)) {
                this.checkSendsmsToServermagfa1To1OperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSendsmsToServermagfa1To1OperationCompleted);
            }
            this.InvokeAsync("checkSendsmsToServermagfa1To1", new object[] {
                        cCommand,
                        cServername}, this.checkSendsmsToServermagfa1To1OperationCompleted, userState);
        }
        
        private void OncheckSendsmsToServermagfa1To1OperationCompleted(object arg) {
            if ((this.checkSendsmsToServermagfa1To1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSendsmsToServermagfa1To1Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckRealDelivey", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckRealDelivey(string cCommand, int ntypesms) {
            this.Invoke("CheckRealDelivey", new object[] {
                        cCommand,
                        ntypesms});
        }
        
        /// <remarks/>
        public void CheckRealDeliveyAsync(string cCommand, int ntypesms) {
            this.CheckRealDeliveyAsync(cCommand, ntypesms, null);
        }
        
        /// <remarks/>
        public void CheckRealDeliveyAsync(string cCommand, int ntypesms, object userState) {
            if ((this.CheckRealDeliveyOperationCompleted == null)) {
                this.CheckRealDeliveyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRealDeliveyOperationCompleted);
            }
            this.InvokeAsync("CheckRealDelivey", new object[] {
                        cCommand,
                        ntypesms}, this.CheckRealDeliveyOperationCompleted, userState);
        }
        
        private void OnCheckRealDeliveyOperationCompleted(object arg) {
            if ((this.CheckRealDeliveyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRealDeliveyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckRealDeliveyfortelegram", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckRealDeliveyfortelegram(string cCommand, int ntypesms) {
            this.Invoke("CheckRealDeliveyfortelegram", new object[] {
                        cCommand,
                        ntypesms});
        }
        
        /// <remarks/>
        public void CheckRealDeliveyfortelegramAsync(string cCommand, int ntypesms) {
            this.CheckRealDeliveyfortelegramAsync(cCommand, ntypesms, null);
        }
        
        /// <remarks/>
        public void CheckRealDeliveyfortelegramAsync(string cCommand, int ntypesms, object userState) {
            if ((this.CheckRealDeliveyfortelegramOperationCompleted == null)) {
                this.CheckRealDeliveyfortelegramOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRealDeliveyfortelegramOperationCompleted);
            }
            this.InvokeAsync("CheckRealDeliveyfortelegram", new object[] {
                        cCommand,
                        ntypesms}, this.CheckRealDeliveyfortelegramOperationCompleted, userState);
        }
        
        private void OnCheckRealDeliveyfortelegramOperationCompleted(object arg) {
            if ((this.CheckRealDeliveyfortelegramCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRealDeliveyfortelegramCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckRealDeliveyAuto", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckRealDeliveyAuto(string cCommand, bool ldelegate) {
            this.Invoke("CheckRealDeliveyAuto", new object[] {
                        cCommand,
                        ldelegate});
        }
        
        /// <remarks/>
        public void CheckRealDeliveyAutoAsync(string cCommand, bool ldelegate) {
            this.CheckRealDeliveyAutoAsync(cCommand, ldelegate, null);
        }
        
        /// <remarks/>
        public void CheckRealDeliveyAutoAsync(string cCommand, bool ldelegate, object userState) {
            if ((this.CheckRealDeliveyAutoOperationCompleted == null)) {
                this.CheckRealDeliveyAutoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRealDeliveyAutoOperationCompleted);
            }
            this.InvokeAsync("CheckRealDeliveyAuto", new object[] {
                        cCommand,
                        ldelegate}, this.CheckRealDeliveyAutoOperationCompleted, userState);
        }
        
        private void OnCheckRealDeliveyAutoOperationCompleted(object arg) {
            if ((this.CheckRealDeliveyAutoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRealDeliveyAutoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckRealDelivey2000", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CheckRealDelivey2000(string cCommand, string csmsserver, bool ldelegate) {
            this.Invoke("CheckRealDelivey2000", new object[] {
                        cCommand,
                        csmsserver,
                        ldelegate});
        }
        
        /// <remarks/>
        public void CheckRealDelivey2000Async(string cCommand, string csmsserver, bool ldelegate) {
            this.CheckRealDelivey2000Async(cCommand, csmsserver, ldelegate, null);
        }
        
        /// <remarks/>
        public void CheckRealDelivey2000Async(string cCommand, string csmsserver, bool ldelegate, object userState) {
            if ((this.CheckRealDelivey2000OperationCompleted == null)) {
                this.CheckRealDelivey2000OperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckRealDelivey2000OperationCompleted);
            }
            this.InvokeAsync("CheckRealDelivey2000", new object[] {
                        cCommand,
                        csmsserver,
                        ldelegate}, this.CheckRealDelivey2000OperationCompleted, userState);
        }
        
        private void OnCheckRealDelivey2000OperationCompleted(object arg) {
            if ((this.CheckRealDelivey2000Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckRealDelivey2000Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/checkSendTimerSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void checkSendTimerSms() {
            this.Invoke("checkSendTimerSms", new object[0]);
        }
        
        /// <remarks/>
        public void checkSendTimerSmsAsync() {
            this.checkSendTimerSmsAsync(null);
        }
        
        /// <remarks/>
        public void checkSendTimerSmsAsync(object userState) {
            if ((this.checkSendTimerSmsOperationCompleted == null)) {
                this.checkSendTimerSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncheckSendTimerSmsOperationCompleted);
            }
            this.InvokeAsync("checkSendTimerSms", new object[0], this.checkSendTimerSmsOperationCompleted, userState);
        }
        
        private void OncheckSendTimerSmsOperationCompleted(object arg) {
            if ((this.checkSendTimerSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.checkSendTimerSmsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/automailanswer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void automailanswer(int nAccountusesid) {
            this.Invoke("automailanswer", new object[] {
                        nAccountusesid});
        }
        
        /// <remarks/>
        public void automailanswerAsync(int nAccountusesid) {
            this.automailanswerAsync(nAccountusesid, null);
        }
        
        /// <remarks/>
        public void automailanswerAsync(int nAccountusesid, object userState) {
            if ((this.automailanswerOperationCompleted == null)) {
                this.automailanswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnautomailanswerOperationCompleted);
            }
            this.InvokeAsync("automailanswer", new object[] {
                        nAccountusesid}, this.automailanswerOperationCompleted, userState);
        }
        
        private void OnautomailanswerOperationCompleted(object arg) {
            if ((this.automailanswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.automailanswerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendmailtoserverCompletedEventHandler(object sender, SendmailtoserverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendmailtoserverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendmailtoserverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void createsubjectemailCompletedEventHandler(object sender, createsubjectemailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createsubjectemailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createsubjectemailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getemailsubjectCompletedEventHandler(object sender, getemailsubjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getemailsubjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getemailsubjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendmailCompletedEventHandler(object sender, SendmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DivertsmsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void autosmstoemailCompletedEventHandler(object sender, autosmstoemailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class autosmstoemailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal autosmstoemailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Auto1to1CompletedEventHandler(object sender, Auto1to1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Auto1to1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Auto1to1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendHttpAutoAnswerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Deliver1RowCompletedEventHandler(object sender, Deliver1RowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Deliver1RowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Deliver1RowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InitializeReceiveCompletedEventHandler(object sender, InitializeReceiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitializeReceiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitializeReceiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ArziabiCompletedEventHandler(object sender, ArziabiCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ArziabiCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ArziabiCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FaxTransactionNewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ConfirmSendsmsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FinishCallMethodCompletedEventHandler(object sender, FinishCallMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishCallMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishCallMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FinishCallMethodserverCompletedEventHandler(object sender, FinishCallMethodserverCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FinishCallMethodserverCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FinishCallMethodserverCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void rectownCompletedEventHandler(object sender, rectownCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class rectownCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal rectownCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void addinphonebookCompletedEventHandler(object sender, addinphonebookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addinphonebookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addinphonebookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void myBillCompletedEventHandler(object sender, myBillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class myBillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal myBillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetwaittrySendCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckFeeVoiceCompletedEventHandler(object sender, CheckFeeVoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFeeVoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFeeVoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendVoiceCompletedEventHandler(object sender, SendVoiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendVoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendVoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMessageFormOPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAllchargeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetOpChargeCompletedEventHandler(object sender, GetOpChargeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpChargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpChargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ViberCheckSendCompletedEventHandler(object sender, ViberCheckSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViberCheckSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViberCheckSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VibercheckGetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ViberGetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ViberSendCompletedEventHandler(object sender, ViberSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ViberSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ViberSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SantralreportsCompletedEventHandler(object sender, SantralreportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SantralreportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SantralreportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SantralsmsCompletedEventHandler(object sender, SantralsmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SantralsmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SantralsmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMessagefromServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetReciveMessagein7arrayCompletedEventHandler(object sender, GetReciveMessagein7arrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReciveMessagein7arrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReciveMessagein7arrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void statecityCompletedEventHandler(object sender, statecityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class statecityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal statecityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDataSantralCompletedEventHandler(object sender, GetDataSantralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataSantralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataSantralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetadpRCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetNumberCompletedEventHandler(object sender, GetNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FixSendCompletedEventHandler(object sender, FixSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FixSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FixSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void autorizeasanakCompletedEventHandler(object sender, autorizeasanakCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class autorizeasanakCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal autorizeasanakCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void linkphonebookCompletedEventHandler(object sender, linkphonebookCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class linkphonebookCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal linkphonebookCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void checkurlvalidCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ForgetPasswordCompletedEventHandler(object sender, ForgetPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForgetPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForgetPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void chargeuserCompletedEventHandler(object sender, chargeuserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class chargeuserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal chargeuserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSmsAsanakCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetsmsRahyabDllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SantralConfigCompletedEventHandler(object sender, SantralConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SantralConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SantralConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SantralDataCompletedEventHandler(object sender, SantralDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SantralDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SantralDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ActivateCentralCompletedEventHandler(object sender, ActivateCentralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ActivateCentralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ActivateCentralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MoneybacktoUseraccountCompletedEventHandler(object sender, MoneybacktoUseraccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MoneybacktoUseraccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MoneybacktoUseraccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void telegramonoffCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MoneybacktoUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void WriteXMLSCompletedEventHandler(object sender, WriteXMLSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteXMLSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WriteXMLSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void KillProccessCompletedEventHandler(object sender, KillProccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KillProccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KillProccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void checkSendEmailToServerCompletedEventHandler(object sender, checkSendEmailToServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class checkSendEmailToServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal checkSendEmailToServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetEmailsCompletedEventHandler(object sender, GetEmailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEmailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEmailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendAreaCompletedEventHandler(object sender, SendAreaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAreaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendAreaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendMMSCompletedEventHandler(object sender, SendMMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendMMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendSmsShortCompletedEventHandler(object sender, SendSmsShortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsShortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsShortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendSmsCompletedEventHandler(object sender, SendSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckFeeSmsCompletedEventHandler(object sender, CheckFeeSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFeeSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFeeSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendSms1To1CompletedEventHandler(object sender, SendSms1To1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSms1To1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSms1To1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDeliveryCompletedEventHandler(object sender, GetDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChangePasswordCompletedEventHandler(object sender, ChangePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetuserInfoCompletedEventHandler(object sender, GetuserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetuserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetuserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDeliveryWithGetidCompletedEventHandler(object sender, GetDeliveryWithGetidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeliveryWithGetidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeliveryWithGetidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceivesmsLowLevelCompletedEventHandler(object sender, ReceivesmsLowLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceivesmsLowLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceivesmsLowLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] aBody {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] aMobileno {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public long[] aMessageid {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] aReceivedate {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string[] afromnumber {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReceiveSmsCompletedEventHandler(object sender, ReceiveSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReceiveSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReceiveSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeleteReceivedMessagesCompletedEventHandler(object sender, DeleteReceivedMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteReceivedMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteReceivedMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChangeReceiveNoCompletedEventHandler(object sender, ChangeReceiveNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeReceiveNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeReceiveNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SmsTrySendToServerCompletedEventHandler(object sender, SmsTrySendToServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmsTrySendToServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmsTrySendToServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SmsTrySendToServer1To1CompletedEventHandler(object sender, SmsTrySendToServer1To1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmsTrySendToServer1To1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmsTrySendToServer1To1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMessageDelivery1to1CompletedEventHandler(object sender, GetMessageDelivery1to1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageDelivery1to1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageDelivery1to1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getMessageIds1to1CompletedEventHandler(object sender, getMessageIds1to1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMessageIds1to1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMessageIds1to1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckValidMobileAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void getmsgmagfaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SmsSentToServerCompletedEventHandler(object sender, SmsSentToServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmsSentToServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmsSentToServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SmsSentToServer1To1CompletedEventHandler(object sender, SmsSentToServer1To1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SmsSentToServer1To1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SmsSentToServer1To1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ShowErrorCompletedEventHandler(object sender, ShowErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShowErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShowErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMessageLengthCompletedEventHandler(object sender, GetMessageLengthCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageLengthCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageLengthCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUnicodeMessageCompletedEventHandler(object sender, GetUnicodeMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnicodeMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUnicodeMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetSmsCompletedEventHandler(object sender, GetSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendtraffictoUserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendRecTocustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Sendtoc1CustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Getsms80CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendDeltoCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendTocus1MobUsesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendToCus1bulkDelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void mehrafrazDeliveryCompletedEventHandler(object sender, mehrafrazDeliveryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class mehrafrazDeliveryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal mehrafrazDeliveryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void DeliveryEvent80CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendFaxCompletedEventHandler(object sender, SendFaxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendFaxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendFaxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AutoFaxCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void FaxTransactionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void datagatherCompletedEventHandler(object sender, datagatherCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class datagatherCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal datagatherCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MatchgraphCompletedEventHandler(object sender, MatchgraphCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatchgraphCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MatchgraphCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void MatchCompletedEventHandler(object sender, MatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void Getdelivery1To1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckDeliverFromServerCompletedEventHandler(object sender, CheckDeliverFromServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDeliverFromServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDeliverFromServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void checkSendsmsToServerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void checkSendsmsToServermagfa1To1CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckRealDeliveyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckRealDeliveyfortelegramCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckRealDeliveyAutoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CheckRealDelivey2000CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void checkSendTimerSmsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void automailanswerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591